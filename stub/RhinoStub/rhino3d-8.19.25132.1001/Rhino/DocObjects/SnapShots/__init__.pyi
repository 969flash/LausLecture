"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["SnapShotsClient"]
# endregion

# region: Imports
from Rhino import DocObjects
from Rhino import FileIO
from Rhino import Geometry
from Rhino.Runtime import InteropWrappers
from System.Runtime import CompilerServices
from typing import overload
import Rhino
import System
# endregion

# region: RhinoCommon, Version=8.19.25132.1001

class SnapShotsClient(object):
    """This is the abstract interface class for all Snapshot clients.

    """
    def __init__(self): ...
    @overload
    def AnimateDocument(self, doc: Rhino.RhinoDoc, dPos: float, archive_start: FileIO.BinaryArchiveReader, archive_stop: FileIO.BinaryArchiveReader) -> bool: ...
    @overload
    def AnimateObject(self, doc: Rhino.RhinoDoc, doc_object: DocObjects.RhinoObject, dPos: float, archive_start: FileIO.BinaryArchiveReader, archive_stop: FileIO.BinaryArchiveReader) -> (bool, Geometry.Transform): ...
    @overload
    def AnimationStart(self, doc: Rhino.RhinoDoc, iFrames: int) -> None: ...
    @overload
    def AnimationStop(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    @staticmethod
    def ApplicationCategory() -> str: ...
    @overload
    def Category() -> str: ...
    @overload
    def ClientId() -> System.Guid: ...
    @overload
    def Dispose() -> None: ...
    @overload
    @staticmethod
    def DocumentCategory() -> str: ...
    @overload
    def ExtendBoundingBoxForDocumentAnimation(self, doc: Rhino.RhinoDoc, archive_start: FileIO.BinaryArchiveReader, archive_stop: FileIO.BinaryArchiveReader) -> (Geometry.BoundingBox): ...
    @overload
    def ExtendBoundingBoxForObjectAnimation(self, doc: Rhino.RhinoDoc, doc_object: DocObjects.RhinoObject, archive_start: FileIO.BinaryArchiveReader, archive_stop: FileIO.BinaryArchiveReader) -> (Geometry.Transform, Geometry.BoundingBox): ...
    @property
    def CppPointer(self) -> System.IntPtr: ...
    @property
    def SerialNumber(self) -> int: ...
    @overload
    def IsCurrentModelStateInAnySnapshot(self, doc: Rhino.RhinoDoc, archive: FileIO.BinaryArchiveReader, archive_array: InteropWrappers.SimpleArrayBinaryArchiveReader, text_log: FileIO.TextLog) -> bool: ...
    @overload
    def IsCurrentModelStateInAnySnapshot(self, doc: Rhino.RhinoDoc, doc_object: DocObjects.RhinoObject, archive: FileIO.BinaryArchiveReader, archive_array: InteropWrappers.SimpleArrayBinaryArchiveReader, text_log: FileIO.TextLog) -> bool: ...
    @overload
    @staticmethod
    def LayersCategory() -> str: ...
    @overload
    @staticmethod
    def LightsCategory() -> str: ...
    @overload
    def Name() -> str: ...
    @overload
    @staticmethod
    def ObjectsCategory() -> str: ...
    @overload
    def ObjectTransformNotification(self, doc: Rhino.RhinoDoc, doc_object: DocObjects.RhinoObject, archive: FileIO.BinaryArchiveReader) -> (bool, Geometry.Transform): ...
    @overload
    def PlugInId() -> System.Guid: ...
    @overload
    def PrepareForDocumentAnimation(self, doc: Rhino.RhinoDoc, archive_start: FileIO.BinaryArchiveReader, archive_stop: FileIO.BinaryArchiveReader) -> bool: ...
    @overload
    def PrepareForObjectAnimation(self, doc: Rhino.RhinoDoc, doc_object: DocObjects.RhinoObject, archive_start: FileIO.BinaryArchiveReader, archive_stop: FileIO.BinaryArchiveReader) -> (bool, Geometry.Transform): ...
    @overload
    @staticmethod
    def RegisterSnapShotClient(client: SnapShotsClient) -> bool: ...
    @overload
    @staticmethod
    def RenderingCategory() -> str: ...
    @overload
    def RestoreDocument(self, doc: Rhino.RhinoDoc, archive: FileIO.BinaryArchiveReader) -> bool: ...
    @overload
    def RestoreObject(self, doc: Rhino.RhinoDoc, doc_object: DocObjects.RhinoObject, archive: FileIO.BinaryArchiveReader) -> (bool, Geometry.Transform): ...
    @overload
    def SaveDocument(self, doc: Rhino.RhinoDoc, archive: FileIO.BinaryArchiveWriter) -> bool: ...
    @overload
    def SaveObject(self, doc: Rhino.RhinoDoc, doc_object: DocObjects.RhinoObject, archive: FileIO.BinaryArchiveWriter) -> (bool, Geometry.Transform): ...
    @SerialNumber.setter
    def SerialNumber(self, value: System.Void): ...
    @overload
    def SnapshotRestored(self, doc: Rhino.RhinoDoc) -> None: ...
    @overload
    def SupportsAnimation() -> bool: ...
    @overload
    def SupportsDocument() -> bool: ...
    @overload
    def SupportsObject(self, doc_object: DocObjects.RhinoObject) -> bool: ...
    @overload
    def SupportsObjects() -> bool: ...
    @overload
    @staticmethod
    def ViewsCategory() -> str: ...

# endregion
