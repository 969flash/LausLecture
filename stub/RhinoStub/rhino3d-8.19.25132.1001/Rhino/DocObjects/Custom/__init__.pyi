"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["UserData", "UnknownUserData", "UserDataListEnumerator", "UserDataList", "UserDictionary", "ClassIdAttribute", "CustomBrepObject", "CustomCurveObject", "GripStatus", "GripsDrawEventArgs", "TurnOnGripsEventHandler", "CustomObjectGrips", "CustomMeshObject", "CustomPointObject", "CustomGripObject"]
# endregion

# region: Imports
from Rhino import Collections
from Rhino import Display
from Rhino import DocObjects
from Rhino import Geometry
from Rhino import Runtime
from System import Drawing
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: RhinoCommon, Version=8.19.25132.1001

class UserData(object):
    """Provides a base class for custom classes of information which may be attached to geometry or attribute classes.

    """
    @overload
    @staticmethod
    def Copy(source: Runtime.CommonObject, destination: Runtime.CommonObject) -> None: ...
    @overload
    def Dispose() -> None: ...
    @property
    def Description(self) -> str: ...
    @property
    def ShouldWrite(self) -> bool: ...
    @property
    def Transform(self) -> Geometry.Transform: ...
    @overload
    @staticmethod
    def MoveUserDataFrom(objectWithUserData: Runtime.CommonObject) -> System.Guid: ...
    @overload
    @staticmethod
    def MoveUserDataTo(objectToGetUserData: Runtime.CommonObject, id_: System.Guid, append: bool) -> None: ...

class UnknownUserData(UserData):
    """Represents user data with unknown origin.

    """
    def __init__(self, pointerNativeUserData: System.IntPtr): ...

class UserDataListEnumerator(object):
    """Enumerator for UserDataList

    """
    def __init__(self, udl: UserDataList): ...
    @overload
    def Dispose() -> None: ...
    @property
    def Current(self) -> UserData: ...
    @overload
    def MoveNext() -> bool: ...
    @overload
    def Reset() -> None: ...

class UserDataList(object):
    """Represents a collection of user data.

    """
    @overload
    def Add(self, userdata: UserData) -> bool: ...
    @overload
    def Contains(self, userdataId: System.Guid) -> bool: ...
    @overload
    def Find(self, userdataType: System.Type) -> UserData: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> UserData: ...
    @overload
    def GetEnumerator() -> Generic.IEnumerator: ...
    @overload
    def Purge() -> None: ...
    @overload
    def Remove(self, userdata: UserData) -> bool: ...

class UserDictionary(UserData):
    """Defines the storage data class for a
user dictionary
.

    """
    def __init__(self): ...
    @property
    def Description(self) -> str: ...
    @property
    def Dictionary(self) -> Collections.ArchivableDictionary: ...
    @property
    def ShouldWrite(self) -> bool: ...

class ClassIdAttribute(System.Attribute):
    """Useful for legacy UserData

    """
    def __init__(self, id_: str): ...
    @property
    def Id(self) -> System.Guid: ...

class CustomBrepObject(DocObjects.BrepObject):
    """    """

class CustomCurveObject(DocObjects.CurveObject):
    """    """
    @overload
    def Dispose() -> None: ...

class GripStatus(object):
    """    """
    @property
    def Culled(self) -> bool: ...
    @property
    def Visible(self) -> bool: ...
    @Culled.setter
    def Culled(self, value: System.Void): ...

class GripsDrawEventArgs(Display.DrawEventArgs):
    """    """
    @overload
    def DrawControlPolygonLine(self, line: Geometry.Line, startStatus: GripStatus, endStatus: GripStatus) -> None: ...
    @overload
    def DrawControlPolygonLine(self, line: Geometry.Line, startStatus: int, endStatus: int) -> None: ...
    @overload
    def DrawControlPolygonLine(self, start: Geometry.Point3d, end: Geometry.Point3d, startStatus: int, endStatus: int) -> None: ...
    @property
    def ControlPolygonStyle(self) -> int: ...
    @property
    def DrawDynamicStuff(self) -> bool: ...
    @property
    def DrawStaticStuff(self) -> bool: ...
    @property
    def GripColor(self) -> Drawing.Color: ...
    @property
    def GripStatusCount(self) -> int: ...
    @property
    def LockedGripColor(self) -> Drawing.Color: ...
    @property
    def SelectedGripColor(self) -> Drawing.Color: ...
    @overload
    def GripStatus(self, index: int) -> GripStatus: ...
    @overload
    def RestoreViewportSettings() -> None: ...
    @ControlPolygonStyle.setter
    def ControlPolygonStyle(self, value: System.Void): ...
    @GripColor.setter
    def GripColor(self, value: System.Void): ...
    @LockedGripColor.setter
    def LockedGripColor(self, value: System.Void): ...
    @SelectedGripColor.setter
    def SelectedGripColor(self, value: System.Void): ...

class TurnOnGripsEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, rhObj: DocObjects.RhinoObject, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, rhObj: DocObjects.RhinoObject) -> None: ...

class CustomObjectGrips(object):
    """    """
    @overload
    def Dispose() -> None: ...
    @overload
    @staticmethod
    def Dragging() -> bool: ...
    @property
    def GripCount(self) -> int: ...
    @property
    def GripsMoved(self) -> bool: ...
    @property
    def NewLocation(self) -> bool: ...
    @property
    def OwnerObject(self) -> DocObjects.RhinoObject: ...
    @overload
    def Grip(self, index: int) -> CustomGripObject: ...
    @overload
    @staticmethod
    def RegisterGripsEnabler(enabler: TurnOnGripsEventHandler, customGripsType: System.Type) -> None: ...
    @NewLocation.setter
    def NewLocation(self, value: System.Void): ...

class CustomMeshObject(DocObjects.MeshObject):
    """    """
    @overload
    def Dispose() -> None: ...

class CustomPointObject(DocObjects.PointObject):
    """    """
    @overload
    def Dispose() -> None: ...

class CustomGripObject(DocObjects.GripObject):
    """    """
    def __init__(self): ...
    @overload
    def Dispose() -> None: ...
    @property
    def Index(self) -> int: ...
    @property
    def OriginalLocation(self) -> Geometry.Point3d: ...
    @property
    def Weight(self) -> float: ...
    @overload
    def NewLocation() -> None: ...
    @Index.setter
    def Index(self, value: System.Void): ...
    @OriginalLocation.setter
    def OriginalLocation(self, value: System.Void): ...
    @Weight.setter
    def Weight(self, value: System.Void): ...

# endregion
