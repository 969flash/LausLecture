"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["AppearancePage", "AppearanceViewModel", "ColorsPage", "GridSettingsPage", "GridSettingsViewModel", "KeyboardShortcutsPage", "IOptionsPage", "OptionsPageHost", "SelectionMenuPage", "SelectionMenuViewModel", "UnitsSettingsPage", "UnitsSettingsViewModel", "Language"]
# endregion

# region: Imports
from Eto import Drawing
from Eto import Forms
from Rhino import Commands
from Rhino import Display
from Rhino import UI
from System import Drawing
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import Rhino
import System
# endregion

# region: Rhino.UI, Version=8.19.25132.1001

class AppearancePage(Forms.Scrollable):
    """    """
    def __init__(self, host: OptionsPageHost, docRuntimeSerialNumber: System.UInt32): ...
    @property
    def HelpUrl(self) -> str: ...
    @overload
    def OnApply() -> bool: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnHelp() -> None: ...
    @overload
    def OnHidePage() -> bool: ...
    @overload
    def OnShowPage() -> bool: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @property
    def Scroll(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class AppearanceViewModel(UI.ViewModel):
    """    """
    def __init__(self, host: OptionsPageHost, doc_sn: System.UInt32): ...
    @property
    def invalidOption(self) -> str: ...
    @property
    def no(self) -> str: ...
    @property
    def yes(self) -> str: ...
    @property
    def hide(self) -> str: ...
    @property
    def show(self) -> str: ...
    @property
    def ArrowIconHeadSize(self) -> int: ...
    @property
    def ArrowIconShaftSize(self) -> int: ...
    @property
    def AutocompleteCommands(self) -> bool: ...
    @property
    def BackgroundColor(self) -> Drawing.Color: ...
    @property
    def CommandTextSize(self) -> int: ...
    @property
    def Document(self) -> Rhino.RhinoDoc: ...
    @property
    def EchoPromptsToHistory(self) -> bool: ...
    @property
    def FontQuartets(self) -> Generic.List: ...
    @property
    def HoverColor(self) -> Drawing.Color: ...
    @property
    def LanguageIndex(self) -> int: ...
    @property
    def Languages(self) -> Generic.List: ...
    @property
    def SelectedFontName(self) -> str: ...
    @property
    def ShowCommandPrompt(self) -> bool: ...
    @property
    def ShowCrosshairs(self) -> bool: ...
    @property
    def ShowFullPath(self) -> bool: ...
    @property
    def ShowMenu(self) -> bool: ...
    @property
    def ShowStatusBar(self) -> bool: ...
    @property
    def ShowTitleBar(self) -> bool: ...
    @property
    def ShowViewportTitles(self) -> bool: ...
    @property
    def TextColor(self) -> Drawing.Color: ...
    @property
    def UseFuzzyAutocomplete(self) -> bool: ...
    @property
    def ViewportTabsAtStart(self) -> bool: ...
    @overload
    def IsValidFontName(self, fontName: str) -> bool: ...
    @overload
    def OnApply() -> None: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnShowPage() -> None: ...
    @overload
    def RunCommandPromptFontAndSizeScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @overload
    def RunCommandPromptFontScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @overload
    def RunCommandPromptScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @overload
    def RunDirArrowScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @overload
    def RunMacScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @overload
    def RunVisibleScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @overload
    def RunWindowsScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @ArrowIconHeadSize.setter
    def ArrowIconHeadSize(self, value: System.Void): ...
    @ArrowIconShaftSize.setter
    def ArrowIconShaftSize(self, value: System.Void): ...
    @AutocompleteCommands.setter
    def AutocompleteCommands(self, value: System.Void): ...
    @BackgroundColor.setter
    def BackgroundColor(self, value: System.Void): ...
    @CommandTextSize.setter
    def CommandTextSize(self, value: System.Void): ...
    @EchoPromptsToHistory.setter
    def EchoPromptsToHistory(self, value: System.Void): ...
    @HoverColor.setter
    def HoverColor(self, value: System.Void): ...
    @LanguageIndex.setter
    def LanguageIndex(self, value: System.Void): ...
    @SelectedFontName.setter
    def SelectedFontName(self, value: System.Void): ...
    @ShowCommandPrompt.setter
    def ShowCommandPrompt(self, value: System.Void): ...
    @ShowCrosshairs.setter
    def ShowCrosshairs(self, value: System.Void): ...
    @ShowFullPath.setter
    def ShowFullPath(self, value: System.Void): ...
    @ShowMenu.setter
    def ShowMenu(self, value: System.Void): ...
    @ShowStatusBar.setter
    def ShowStatusBar(self, value: System.Void): ...
    @ShowTitleBar.setter
    def ShowTitleBar(self, value: System.Void): ...
    @ShowViewportTitles.setter
    def ShowViewportTitles(self, value: System.Void): ...
    @TextColor.setter
    def TextColor(self, value: System.Void): ...
    @UseFuzzyAutocomplete.setter
    def UseFuzzyAutocomplete(self, value: System.Void): ...
    @ViewportTabsAtStart.setter
    def ViewportTabsAtStart(self, value: System.Void): ...
    @property
    def PropertyChanged(self): ...
    @property
    def ModleUnitsChanged(self): ...
    @property
    def PageUnitsChanged(self): ...

class ColorsPage(Forms.Scrollable):
    """    """
    def __init__(self, host: OptionsPageHost, docRuntimeSerialNumber: System.UInt32): ...
    @property
    def HelpUrl(self) -> str: ...
    @overload
    def OnApply() -> bool: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnHelp() -> None: ...
    @overload
    def OnHidePage() -> bool: ...
    @overload
    def OnShowPage() -> bool: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @property
    def Scroll(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class GridSettingsPage(Forms.Panel):
    """    """
    def __init__(self, host: OptionsPageHost, vm: GridSettingsViewModel): ...
    @property
    def Document(self) -> Rhino.RhinoDoc: ...
    @property
    def HelpUrl(self) -> str: ...
    @overload
    def OnApply() -> bool: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnHelp() -> None: ...
    @overload
    def OnHidePage() -> bool: ...
    @overload
    def OnShowPage() -> bool: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class GridSettingsViewModel(UI.ViewModel):
    """    """
    def __init__(self, doc_sn: System.UInt32): ...
    @overload
    def ActiveView() -> Display.RhinoView: ...
    @overload
    def Cancel(self, bCurrent: bool) -> None: ...
    @property
    def ApplyToAll(self) -> bool: ...
    @property
    def ApplyToIndex(self) -> int: ...
    @property
    def Document(self) -> Rhino.RhinoDoc: ...
    @property
    def GridLineCount(self) -> int: ...
    @property
    def GridSpacing(self) -> float: ...
    @property
    def GridThickLineFrequency(self) -> int: ...
    @property
    def GridUnits(self) -> str: ...
    @property
    def Panel(self) -> GridSettingsPage: ...
    @property
    def ShowGridAxes(self) -> bool: ...
    @property
    def ShowGridLines(self) -> bool: ...
    @property
    def ShowWorldAxes(self) -> bool: ...
    @property
    def SnapSpacing(self) -> float: ...
    @property
    def SnapUnits(self) -> str: ...
    @ApplyToAll.setter
    def ApplyToAll(self, value: System.Void): ...
    @ApplyToIndex.setter
    def ApplyToIndex(self, value: System.Void): ...
    @GridLineCount.setter
    def GridLineCount(self, value: System.Void): ...
    @GridSpacing.setter
    def GridSpacing(self, value: System.Void): ...
    @GridThickLineFrequency.setter
    def GridThickLineFrequency(self, value: System.Void): ...
    @Panel.setter
    def Panel(self, value: System.Void): ...
    @ShowGridAxes.setter
    def ShowGridAxes(self, value: System.Void): ...
    @ShowGridLines.setter
    def ShowGridLines(self, value: System.Void): ...
    @ShowWorldAxes.setter
    def ShowWorldAxes(self, value: System.Void): ...
    @SnapSpacing.setter
    def SnapSpacing(self, value: System.Void): ...
    @overload
    def UpdateViews(self, bScriptMode: bool) -> bool: ...
    @property
    def PropertyChanged(self): ...
    @property
    def ModleUnitsChanged(self): ...
    @property
    def PageUnitsChanged(self): ...

class KeyboardShortcutsPage(Forms.Panel):
    """    """
    @overload
    @staticmethod
    def NewHost() -> OptionsPageHost: ...
    @overload
    def OnApply() -> bool: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnHelp() -> None: ...
    @overload
    def OnHidePage() -> bool: ...
    @overload
    def OnShowPage() -> bool: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class IOptionsPage:
    """    """
    @overload
    def OnApply() -> bool: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnHelp() -> None: ...
    @overload
    def OnHidePage() -> bool: ...
    @overload
    def OnShowPage() -> bool: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...

class OptionsPageHost(UI.OptionsDialogPage):
    """    """
    @overload
    def __init__(self, localizedTitle: str, englishTitle: str, imageResourId: str, showDefaultsButton: bool, showApplyButton: bool, newPanelFunc: System.Func): ...
    @overload
    def __init__(self, pageType: UI.PageType, localizedTitle: str, englishTitle: str, imageResourId: str, showDefaultsButton: bool, showApplyButton: bool, newPanelFunc: System.Func, childPages: Generic.IEnumerable): ...
    @property
    def LocalPageTitle(self) -> str: ...
    @property
    def PageControl(self) -> object: ...
    @property
    def PageImage(self) -> Drawing.Image: ...
    @property
    def ShowApplyButton(self) -> bool: ...
    @property
    def ShowDefaultsButton(self) -> bool: ...
    @overload
    def OnActivate(self, active: bool) -> bool: ...
    @overload
    def OnApply() -> bool: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnHelp() -> None: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...

class SelectionMenuPage(Forms.Panel):
    """    """
    def __init__(self, host: OptionsPageHost, vm: SelectionMenuViewModel): ...
    @property
    def Document(self) -> Rhino.RhinoDoc: ...
    @property
    def HelpUrl(self) -> str: ...
    @overload
    def OnApply() -> bool: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnHelp() -> None: ...
    @overload
    def OnHidePage() -> bool: ...
    @overload
    def OnShowPage() -> bool: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class SelectionMenuViewModel(UI.ViewModel):
    """    """
    def __init__(self, doc_sn: System.UInt32): ...
    @overload
    def Cancel() -> None: ...
    @overload
    def Defaults() -> None: ...
    @property
    def AutomaticResize(self) -> bool: ...
    @property
    def Document(self) -> Rhino.RhinoDoc: ...
    @property
    def DynamicHighlight(self) -> bool: ...
    @property
    def EnableObjectTypeDetails(self) -> bool: ...
    @property
    def FollowCursor(self) -> bool: ...
    @property
    def HighlightColor(self) -> Drawing.Color: ...
    @property
    def MaxAutomaticHeight(self) -> int: ...
    @property
    def ShowAllOption(self) -> bool: ...
    @property
    def ShowObjectColor(self) -> bool: ...
    @property
    def ShowObjectLayer(self) -> bool: ...
    @property
    def ShowObjectName(self) -> bool: ...
    @property
    def ShowObjectType(self) -> bool: ...
    @property
    def ShowObjectTypeDetails(self) -> bool: ...
    @property
    def ShowTitlebarAndBorder(self) -> bool: ...
    @property
    def UseCustomColor(self) -> bool: ...
    @property
    def XOffset(self) -> int: ...
    @property
    def YOffset(self) -> int: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc) -> Commands.Result: ...
    @AutomaticResize.setter
    def AutomaticResize(self, value: System.Void): ...
    @DynamicHighlight.setter
    def DynamicHighlight(self, value: System.Void): ...
    @FollowCursor.setter
    def FollowCursor(self, value: System.Void): ...
    @HighlightColor.setter
    def HighlightColor(self, value: System.Void): ...
    @MaxAutomaticHeight.setter
    def MaxAutomaticHeight(self, value: System.Void): ...
    @ShowAllOption.setter
    def ShowAllOption(self, value: System.Void): ...
    @ShowObjectColor.setter
    def ShowObjectColor(self, value: System.Void): ...
    @ShowObjectLayer.setter
    def ShowObjectLayer(self, value: System.Void): ...
    @ShowObjectName.setter
    def ShowObjectName(self, value: System.Void): ...
    @ShowObjectType.setter
    def ShowObjectType(self, value: System.Void): ...
    @ShowObjectTypeDetails.setter
    def ShowObjectTypeDetails(self, value: System.Void): ...
    @ShowTitlebarAndBorder.setter
    def ShowTitlebarAndBorder(self, value: System.Void): ...
    @UseCustomColor.setter
    def UseCustomColor(self, value: System.Void): ...
    @XOffset.setter
    def XOffset(self, value: System.Void): ...
    @YOffset.setter
    def YOffset(self, value: System.Void): ...
    @overload
    def SetOriginalValues() -> None: ...
    @property
    def PropertyChanged(self): ...
    @property
    def ModleUnitsChanged(self): ...
    @property
    def PageUnitsChanged(self): ...

class UnitsSettingsPage(Forms.Panel):
    """    """
    def __init__(self, host: OptionsPageHost, docRuntimeSerialNumber: System.UInt32): ...
    @property
    def HelpUrl(self) -> str: ...
    @overload
    def OnApply() -> bool: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnDefaults() -> None: ...
    @overload
    def OnHelp() -> None: ...
    @overload
    def OnHidePage() -> bool: ...
    @overload
    def OnShowPage() -> bool: ...
    @overload
    def RunScript(self, doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class UnitsSettingsViewModel(UI.ViewModel):
    """    """
    def __init__(self, host: OptionsPageHost, doc_sn: System.UInt32, isPageSettings: bool): ...
    @overload
    def DisplayAbsoluteToleranceMessagebox() -> None: ...
    @overload
    def DisplayAngleToleranceMessagebox() -> None: ...
    @property
    def AbsoluteTolerance(self) -> float: ...
    @property
    def AllowFeetAndInches(self) -> bool: ...
    @property
    def AngleToleranceInDegrees(self) -> float: ...
    @property
    def CustomEnabled(self) -> bool: ...
    @property
    def CustomUnitsPerMeter(self) -> float: ...
    @property
    def CustomUnitsString(self) -> str: ...
    @property
    def DisplayDecimal(self) -> bool: ...
    @property
    def DisplayFeetAndInches(self) -> bool: ...
    @property
    def DisplayFractional(self) -> bool: ...
    @property
    def DisplayPrecision(self) -> int: ...
    @property
    def DisplayPrecisionList(self) -> Generic.List: ...
    @property
    def Document(self) -> Rhino.RhinoDoc: ...
    @property
    def IsPageSettings(self) -> bool: ...
    @property
    def Units(self) -> Rhino.UnitSystem: ...
    @property
    def UnitsString(self) -> str: ...
    @property
    def UnitsTypeString(self) -> str: ...
    @overload
    def OnApply(self, bScripted: bool) -> None: ...
    @overload
    def OnCancel() -> None: ...
    @overload
    def OnShowPage() -> None: ...
    @overload
    def RunScript() -> Commands.Result: ...
    @AbsoluteTolerance.setter
    def AbsoluteTolerance(self, value: System.Void): ...
    @AngleToleranceInDegrees.setter
    def AngleToleranceInDegrees(self, value: System.Void): ...
    @CustomUnitsPerMeter.setter
    def CustomUnitsPerMeter(self, value: System.Void): ...
    @CustomUnitsString.setter
    def CustomUnitsString(self, value: System.Void): ...
    @DisplayDecimal.setter
    def DisplayDecimal(self, value: System.Void): ...
    @DisplayFeetAndInches.setter
    def DisplayFeetAndInches(self, value: System.Void): ...
    @DisplayFractional.setter
    def DisplayFractional(self, value: System.Void): ...
    @DisplayPrecision.setter
    def DisplayPrecision(self, value: System.Void): ...
    @Units.setter
    def Units(self, value: System.Void): ...
    @property
    def PropertyChanged(self): ...
    @property
    def ModleUnitsChanged(self): ...
    @property
    def PageUnitsChanged(self): ...

class Language(UI.ViewModel):
    """    """
    def __init__(self, locale: int, text: str): ...
    @property
    def Locale(self) -> int: ...
    @property
    def Text(self) -> str: ...
    @overload
    def ToString() -> str: ...
    @property
    def PropertyChanged(self): ...
    @property
    def ModleUnitsChanged(self): ...
    @property
    def PageUnitsChanged(self): ...

# endregion
