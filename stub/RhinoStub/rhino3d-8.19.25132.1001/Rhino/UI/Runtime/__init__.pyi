"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["HostUtils", "IPlatformService", "PlatformServiceProvider", "RhinoUiServiceLocator", "WindowsRhinoActivatedEvent"]
# endregion

# region: Imports
from Eto import Drawing
from Eto import Forms
from Rhino import DocObjects
from Rhino import UI
from System import Drawing
from System.Runtime import CompilerServices
from typing import overload
import Rhino
import System
# endregion

# region: Rhino.UI, Version=8.19.25132.1001

class HostUtils(object):
    """    """
    @property
    def WindowsRhinoActivated(self): ...

class IPlatformService:
    """    """
    @overload
    def BringCurrentProcessToForeground() -> None: ...
    @overload
    def ControlPadding(self, control: Forms.Control) -> (float, float, float, float): ...
    @property
    def MainRhinoWindow(self) -> Forms.Window: ...
    @overload
    def GetEtoUiFont(self, style: UI.Style, size: UI.Size) -> Drawing.Font: ...
    @overload
    def GetEtoWindow(self, handle: System.IntPtr) -> Forms.Window: ...
    @overload
    def GetNumericUpDownScrollWidth(self, control: Forms.NumericStepper) -> int: ...
    @overload
    def GetRhinoDocumentPropertiesWindow(self, page: UI.OptionsDialogPage) -> Forms.Window: ...
    @overload
    def GetRhinoDocumentWindow(self, docRuntimeSerialNumber: System.UInt32) -> Forms.Window: ...
    @overload
    def GetRhinoPreferencesWindow(self, page: UI.OptionsDialogPage) -> Forms.Window: ...
    @overload
    def InvokeRequired(self, control: Forms.Control) -> bool: ...
    @overload
    def PlaySoundFile(self, fileName: str) -> None: ...
    @overload
    def PushPickButton(self, window: Forms.Window, pickFunction: System.EventHandler) -> None: ...
    @overload
    def SelectedImageFromIcon(self, icon: Drawing.Icon, scaledSize: Drawing.Size) -> Drawing.Image: ...
    @overload
    def SetControlPadding(self, control: Forms.Control, left: float, top: float, right: float, bottom: float) -> None: ...
    @overload
    def SetImageTemplateProperty(self, image: Drawing.Image, value: bool) -> None: ...
    @overload
    def SetWindowPos(self, window: Forms.Window, rectangle: Drawing.RectangleF, move: bool, resize: bool) -> bool: ...
    @overload
    def ShowSemiModal(self, dialog: Forms.Dialog, doc: Rhino.RhinoDoc, parent: Forms.Control) -> None: ...
    @overload
    def TextBoxHorizontalContentAlignment(self, control: Forms.TextBox, alignment: Forms.TextAlignment) -> None: ...
    @overload
    def ToEto(self, icon: Drawing.Icon) -> Drawing.Icon: ...
    @overload
    def ToEto(self, bmp: Drawing.Bitmap) -> Drawing.Bitmap: ...
    @overload
    def ToEto(self, bmp: Drawing.Bitmap, background_color: Drawing.Color) -> Drawing.Bitmap: ...
    @overload
    def ToEtoBitmap(self, nativeImagePointer: System.IntPtr) -> Drawing.Bitmap: ...
    @overload
    def ToEtoControl(self, nativeControlHandle: System.IntPtr) -> Forms.Control: ...
    @overload
    def ToEtoControl(self, nativePage: object) -> Forms.Control: ...
    @overload
    def ToEtoFont(self, sysFont: Drawing.Font) -> Drawing.Font: ...
    @overload
    def ToEtoFont(self, font: DocObjects.Font, size: System.Single, decoration: Drawing.FontDecoration) -> Drawing.Font: ...
    @overload
    def ToEtoFontTypeface(self, font: DocObjects.Font) -> Drawing.FontTypeface: ...
    @overload
    def ToEtoIcon(self, nativeImagePointer: System.IntPtr) -> Drawing.Icon: ...
    @overload
    def ToEtoScreen(self, point: Drawing.Point, screen: Forms.Screen) -> Drawing.PointF: ...
    @overload
    def ToEtoScreen(self, rect: Drawing.Rectangle, screen: Forms.Screen) -> Drawing.RectangleF: ...
    @overload
    def ToSystemDrawingScreen(self, point: Drawing.PointF, screen: Forms.Screen) -> Drawing.Point: ...
    @overload
    def ToSystemDrawingScreen(self, rect: Drawing.RectangleF, screen: Forms.Screen) -> Drawing.Rectangle: ...

class PlatformServiceProvider(object):
    """    """
    @property
    def Service(self) -> IPlatformService: ...
    @Service.setter
    def Service(self, value: System.Void): ...

class RhinoUiServiceLocator(object):
    """    """
    def __init__(self): ...
    @overload
    def GetService() -> T: ...

class WindowsRhinoActivatedEvent(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, activated: bool, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, activated: bool) -> None: ...

# endregion
