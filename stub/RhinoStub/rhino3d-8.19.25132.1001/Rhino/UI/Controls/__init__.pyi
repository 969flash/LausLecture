"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["CollapsibleSectionContainerHandler", "EtoExpanderHandler", "ButtonDrawable", "GridWrapMode", "ControlGridLayout", "Divider", "PrintWidthGridView", "Slider", "RangeDialog", "ImageButton", "ImageToolTipButton", "LabelSeparator", "LineTypeGridView", "LineTypeItem", "NumericUpDownWithUnitParsingEventArgs", "NumericUpDownWithUnitParsingUpdateMode", "NumericUpDownWithUnitParsing", "UnitParsingMaskedTextProvider", "RichTextAreaWithAlternateText", "RenderContentMenu", "EtoCollapsibleSectionHolder2", "EtoCollapsibleSectionHolder", "EtoCollapsibleSection2", "EtoCollapsibleSection3", "EtoCollapsibleSection", "EtoContentUISection3", "EtoContentUISection2", "EtoContentUISection", "EtoPostEffectCollapsibleSection", "ViewportControl", "PanelWithBorder", "RhinoLayout", "StaticAlignedLabel", "RhinoButtonStackLayout", "RhinoNestedTableLayout", "RhinoPanelStackLayout", "RhinoNestedStackLayout", "RhinoButtonTableLayout", "RhinoDialogPanel", "RhinoScrollableDialogPanel", "RhinoPanelScrollable", "RhinoTableLayout", "RhinoDialogTableLayout", "RhinoPanelTableLayout", "RhinoPropertiesPageTableLayout", "RhinoIndentedPanel", "RhinoIndentedTableLayout", "RhinoGroupBox", "RhinoButtonRow", "AddRemoveButton", "SeparatorStyle", "Context", "OnCheckboxCheckedHandler", "SectionContainer", "PaddingType", "SpacingType", "WidthControlType", "DisablePanelColorStylingProperty", "IHandler"]
# endregion

# region: Imports
from Eto import Drawing
from Eto import Forms
from Rhino import Display
from Rhino import DocObjects
from Rhino import Render
from Rhino import UI
from Rhino.Render import PostEffects
from System import Drawing
from System.Collections import Generic
from System.Collections import ObjectModel
from System.Runtime import CompilerServices
from typing import overload
import enum
import Rhino
import System
# endregion

# region: Exports
__all__ = ["ThumbnailUI", "DataSource", "FactoryBase", "IHasCppImplementation", "IWindow", "ICollapsibleSectionHolder2", "ICollapsibleSectionHolder", "Delegates", "ICollapsibleSection3", "ICollapsibleSection2", "IHeaderButtonHandler", "ICollapsibleSection", "IRdkViewModel", "CollapsibleSectionViewModel", "UndoRecord", "CollapsibleSectionHolderImpl", "CollapsibleSectionImpl", "ContentUI", "ExpandableContentUI", "InternalRdkViewModelFactory", "CREATEFROMCPPPROC", "Factory", "CREATEHOSTFROMCPPPROC"]
# endregion

# region: Imports
from Rhino import PlugIns
from Rhino import UI
from System import Drawing
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: RhinoCommon, Version=8.19.25132.1001

class FactoryBase(object):
    """Base class for CollapsibleSection and ViewModel factories used by the RDK UI

    """
    @overload
    def Get(self, id_: System.Guid) -> System.IntPtr: ...
    @overload
    @staticmethod
    def Register() -> System.System.Array[System.Type]: ...
    @overload
    @staticmethod
    def Register(plugin: PlugIns.PlugIn) -> System.System.Array[System.Type]: ...

class IHasCppImplementation:
    """    """
    @property
    def CppPointer(self) -> System.IntPtr: ...

class IWindow:
    """    """
    @property
    def Caption(self) -> UI.LocalizeStringPair: ...
    @property
    def Created(self) -> bool: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def Parent(self) -> System.IntPtr: ...
    @property
    def Shown(self) -> bool: ...
    @property
    def Window(self) -> System.IntPtr: ...
    @overload
    def Move(self, pos: Drawing.Rectangle, bRepaint: bool, bRepaintBorder: bool) -> None: ...
    @Enabled.setter
    def Enabled(self, value: System.Void): ...
    @Parent.setter
    def Parent(self, value: System.Void): ...
    @Shown.setter
    def Shown(self, value: System.Void): ...

class ICollapsibleSectionHolder2:
    """    """
    @overload
    def EnableHeaderButton(self, s: ICollapsibleSection, index: int, bEnable: bool) -> bool: ...
    @overload
    def SetFullHeightSection(self, sec: ICollapsibleSection) -> None: ...
    @overload
    def ShowHeaderButton(self, s: ICollapsibleSection, index: int, bShow: bool) -> bool: ...

class ICollapsibleSectionHolder:
    """    """
    @overload
    def Add(self, section: ICollapsibleSection) -> None: ...
    @overload
    def ExpandSection(self, section: ICollapsibleSection, expand: bool, ensureVisible: bool) -> None: ...
    @property
    def BottomMargin(self) -> int: ...
    @property
    def LeftMargin(self) -> int: ...
    @property
    def RightMargin(self) -> int: ...
    @property
    def ScrollPosition(self) -> int: ...
    @property
    def SectionCount(self) -> int: ...
    @property
    def Sections(self) -> Generic.IEnumerable: ...
    @property
    def TopMargin(self) -> int: ...
    @overload
    def IsSectionExpanded(self, section: ICollapsibleSection) -> bool: ...
    @overload
    def Remove(self, section: ICollapsibleSection) -> None: ...
    @overload
    def SectionAt(self, index: int) -> ICollapsibleSection: ...
    @BackgroundColor.setter
    def BackgroundColor(self, value: System.Void): ...
    @BottomMargin.setter
    def BottomMargin(self, value: System.Void): ...
    @EmptyText.setter
    def EmptyText(self, value: System.Void): ...
    @LeftMargin.setter
    def LeftMargin(self, value: System.Void): ...
    @RightMargin.setter
    def RightMargin(self, value: System.Void): ...
    @ScrollPosition.setter
    def ScrollPosition(self, value: System.Void): ...
    @SettingsPathSubKey.setter
    def SettingsPathSubKey(self, value: System.Void): ...
    @TopMargin.setter
    def TopMargin(self, value: System.Void): ...
    @overload
    def UpdateAllViews(self, flags: int) -> None: ...

class Delegates(object):
    """    """
    def __init__(self): ...

class ICollapsibleSection3:
    """    """
    @overload
    def UpdateView(self, flags: System.UInt32) -> None: ...

class ICollapsibleSection2:
    """    """
    @overload
    def EnableHeaderButton(self, index: int, bEnable: bool) -> bool: ...
    @overload
    def NewHeaderButtonHandler() -> IHeaderButtonHandler: ...
    @overload
    def OnAttachedToHolder(self, holder: ICollapsibleSectionHolder2) -> None: ...
    @overload
    def OnAttachingToHolder(self, holder: ICollapsibleSectionHolder2) -> None: ...
    @overload
    def OnDetachedFromHolder(self, holder: ICollapsibleSectionHolder2) -> None: ...
    @overload
    def OnDetachingFromHolder(self, holder: ICollapsibleSectionHolder2) -> None: ...
    @overload
    def ShowHeaderButton(self, index: int, bShow: bool) -> bool: ...

class IHeaderButtonHandler:
    """This interface represents a handler for putting custom buttons on the header of IRhinoUiSection.

    """
    @overload
    def ButtonDetails(self, index: int) -> (bool, Drawing.Bitmap, str): ...
    @overload
    def ButtonRect(self, index: int, rectHeader: Drawing.Rectangle) -> Drawing.Rectangle: ...
    @overload
    def DeleteThis() -> None: ...
    @overload
    def OnButtonClicked(self, index: int) -> bool: ...

class ICollapsibleSection:
    """    """
    @property
    def BackgroundColor(self) -> Drawing.Color: ...
    @property
    def Collapsible(self) -> bool: ...
    @property
    def CommandOptionName(self) -> UI.LocalizeStringPair: ...
    @property
    def Height(self) -> int: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def Id(self) -> System.Guid: ...
    @property
    def InitiallyExpanded(self) -> bool: ...
    @property
    def PlugInId(self) -> System.Guid: ...
    @property
    def SettingsTag(self) -> str: ...
    @property
    def ViewModel(self) -> IRdkViewModel: ...
    @property
    def ViewModelId(self) -> System.Guid: ...
    @overload
    def RunScript(self, vm: IRdkViewModel) -> int: ...
    @BackgroundColor.setter
    def BackgroundColor(self, value: System.Void): ...

class IRdkViewModel:
    """    """
    @overload
    def Commit(self, uuidDataType: System.Guid) -> None: ...
    @overload
    def Discard(self, uuidDataType: System.Guid) -> None: ...
    @overload
    def GetData(self, uuidDataType: System.Guid, bForWrite: bool, bAutoChangeBracket: bool) -> object: ...

class CollapsibleSectionViewModel(object):
    """Derive from this class to implement your own view model that wraps around a built in implementation of IRdkViewModel. Use GetData etc to implement your properties.

    """
    def __init__(self, section: ICollapsibleSection): ...
    @overload
    def Commit(self, uuidDataType: System.Guid) -> None: ...
    @overload
    def Discard(self, uuidDataType: System.Guid) -> None: ...
    @property
    def CppPointer(self) -> System.IntPtr: ...
    @overload
    def GetData(self, uuidDataType: System.Guid, bForWrite: bool, bAutoChangeBracket: bool) -> object: ...
    @overload
    def UndoHelper(self, description: str) -> UndoRecord: ...

class UndoRecord(object):
    """Undo Record

    """
    def __init__(self, description: str, viewModel: IRdkViewModel): ...
    @overload
    def Dispose() -> None: ...

class CollapsibleSectionHolderImpl(object):
    """    """
    def __init__(self, client: ICollapsibleSectionHolder): ...
    @overload
    def Dispose() -> None: ...
    @overload
    @staticmethod
    def Find(cpp: System.IntPtr) -> ICollapsibleSectionHolder: ...
    @property
    def CppPointer(self) -> System.IntPtr: ...
    @overload
    def IsSameObject(self, cpp: System.IntPtr) -> bool: ...
    @overload
    @staticmethod
    def NewNativeWrapper(cpp: System.IntPtr) -> ICollapsibleSectionHolder: ...

class CollapsibleSectionImpl(object):
    """    """
    def __init__(self, section: ICollapsibleSection): ...
    @overload
    def __InternalSetParent(self, parent: System.IntPtr) -> None: ...
    @overload
    @staticmethod
    def CreateHostedSection(section: ICollapsibleSection) -> None: ...
    @overload
    def Dispose() -> None: ...
    @overload
    @staticmethod
    def Find(cpp: System.IntPtr) -> ICollapsibleSection: ...
    @property
    def CppPointer(self) -> System.IntPtr: ...
    @property
    def ViewModel(self) -> IRdkViewModel: ...
    @overload
    @staticmethod
    def GetSibling(section: ICollapsibleSection, siblingSectionId: System.Guid) -> ICollapsibleSection: ...
    @overload
    @staticmethod
    def GetSiblings(section: ICollapsibleSection) -> System.Array[ICollapsibleSection]: ...
    @overload
    def IsSameObject(self, cpp: System.IntPtr) -> bool: ...
    @overload
    @staticmethod
    def NewNativeWrapper(cpp: System.IntPtr) -> ICollapsibleSection: ...
    @overload
    def ReplaceClient(self, client: ICollapsibleSection) -> None: ...
    @ViewModel.setter
    def ViewModel(self, value: System.Void): ...
    @property
    def DataChanged(self): ...
    @property
    def ViewModelActivated(self): ...

class ContentUI(object):
    """This class represents the user interface (UI) of a content. A content's UI appears inside an editor which is represented by IRhRdkContentEditor.The UI is the part of the editor which allows the user to view and modify the persistent state of the selected content(s). This interface is implemented by RDK internally in the core content class, CRhRdkCoreContent. If you do not override CRhRdkCoreContent::CreateUI() you do not have to concern yourself with the details.If however, you do want to override CreateUI() to create your own custom UI, then you must derive your UI class from CRhRdkCustomContentUI and implement this interface to support your own UI design. \note CRhRdkCustomContentUI implements some of this interface for you.

    """
    def __init__(self, pContentUI: System.IntPtr): ...
    @overload
    def ContentUIHolder() -> ICollapsibleSectionHolder: ...
    @overload
    def Dispose() -> None: ...
    @overload
    def EditorUuid() -> System.Guid: ...
    @property
    def CppPointer(self) -> System.IntPtr: ...
    @overload
    def IsCreated() -> bool: ...
    @overload
    def IsShown() -> bool: ...
    @overload
    def Uuid() -> System.Guid: ...

class ExpandableContentUI(ContentUI):
    """This class extends ContentUI to represent the default user interface which the RDK provides for a content.This is the UI created by the default implementation of CRhRdkCoreContent::CreateUI(). The main feature of this implementation is a 'holder' containing one or more expandable 'sections' (AKA 'roll-ups').

    """
    @overload
    def AddSection(self, pSection: ICollapsibleSection) -> None: ...
    @overload
    def AddSection(self, pSection: ICollapsibleSection, vm: IRdkViewModel) -> None: ...

class InternalRdkViewModelFactory(FactoryBase):
    """    """
    def __init__(self): ...

class CREATEFROMCPPPROC(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, hwndParent: System.IntPtr, contentUIPointer: System.IntPtr, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> System.IntPtr: ...
    @overload
    def Invoke(self, hwndParent: System.IntPtr, contentUIPointer: System.IntPtr) -> System.IntPtr: ...

class Factory(FactoryBase):
    """    """
    def __init__(self): ...

class CREATEHOSTFROMCPPPROC(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, client: System.IntPtr, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> System.IntPtr: ...
    @overload
    def Invoke(self, client: System.IntPtr) -> System.IntPtr: ...

# endregion

# region: Rhino.UI, Version=8.19.25132.1001

class CollapsibleSectionContainerHandler(Forms.ThemedContainerHandler):
    """    """
    def __init__(self): ...
    @overload
    def AddHeaderButtons(self, buttonDrawables: Generic.List) -> None: ...
    @overload
    def AttachEvent(self, id_: str) -> None: ...
    @property
    def Caption(self) -> str: ...
    @property
    def Collapsible(self) -> bool: ...
    @property
    def Content(self) -> Forms.Control: ...
    @property
    def ContextMenu(self) -> Forms.ContextMenu: ...
    @property
    def Divider(self) -> Divider: ...
    @property
    def Expanded(self) -> bool: ...
    @property
    def Header(self) -> Forms.Control: ...
    @property
    def MinimumSize(self) -> Drawing.Size: ...
    @property
    def Padding(self) -> Drawing.Padding: ...
    @Content.setter
    def Content(self, value: System.Void): ...
    @ContextMenu.setter
    def ContextMenu(self, value: System.Void): ...
    @Expanded.setter
    def Expanded(self, value: System.Void): ...
    @Header.setter
    def Header(self, value: System.Void): ...
    @MinimumSize.setter
    def MinimumSize(self, value: System.Void): ...
    @Padding.setter
    def Padding(self, value: System.Void): ...

class EtoExpanderHandler(Forms.ThemedContainerHandler):
    """    """
    def __init__(self): ...
    @overload
    def AttachEvent(self, id_: str) -> None: ...
    @property
    def Content(self) -> Forms.Control: ...
    @property
    def ContextMenu(self) -> Forms.ContextMenu: ...
    @property
    def Divider(self) -> Divider: ...
    @property
    def Expanded(self) -> bool: ...
    @property
    def Header(self) -> Forms.Control: ...
    @property
    def MinimumSize(self) -> Drawing.Size: ...
    @property
    def Padding(self) -> Drawing.Padding: ...
    @Content.setter
    def Content(self, value: System.Void): ...
    @ContextMenu.setter
    def ContextMenu(self, value: System.Void): ...
    @Expanded.setter
    def Expanded(self, value: System.Void): ...
    @Header.setter
    def Header(self, value: System.Void): ...
    @MinimumSize.setter
    def MinimumSize(self, value: System.Void): ...
    @Padding.setter
    def Padding(self, value: System.Void): ...

class ButtonDrawable(Forms.Drawable):
    """    """
    def __init__(self, hbh: IHeaderButtonHandler, index: int, image: Drawing.Bitmap, tooltip: str): ...
    @property
    def Paint(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class GridWrapMode(enum.Enum):
    Horizontal = 0
    Vertical = 1

class ControlGridLayout(Forms.Panel):
    """    """
    def __init__(self): ...
    @property
    def ArrangeControls(self) -> bool: ...
    @property
    def CenterAlign(self) -> bool: ...
    @property
    def Columns(self) -> int: ...
    @property
    def GridWrapMode(self) -> GridWrapMode: ...
    @property
    def ItemPadding(self) -> Drawing.Padding: ...
    @property
    def Items(self) -> ObjectModel.Collection: ...
    @property
    def ItemSize(self) -> Drawing.Size: ...
    @property
    def Rows(self) -> int: ...
    @ArrangeControls.setter
    def ArrangeControls(self, value: System.Void): ...
    @CenterAlign.setter
    def CenterAlign(self, value: System.Void): ...
    @GridWrapMode.setter
    def GridWrapMode(self, value: System.Void): ...
    @ItemPadding.setter
    def ItemPadding(self, value: System.Void): ...
    @ItemSize.setter
    def ItemSize(self, value: System.Void): ...
    @property
    def RowsChanged(self): ...
    @property
    def ColumnsChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class Divider(Forms.Drawable):
    """    """
    def __init__(self): ...
    @property
    def Color(self) -> Drawing.Color: ...
    @property
    def ForceHorizontalLine(self) -> bool: ...
    @property
    def Orientation(self) -> Forms.Orientation: ...
    @property
    def UnsetColor(self) -> Drawing.Color: ...
    @Color.setter
    def Color(self, value: System.Void): ...
    @ForceHorizontalLine.setter
    def ForceHorizontalLine(self, value: System.Void): ...
    @property
    def Paint(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class PrintWidthGridView(Forms.GridView):
    """    """
    def __init__(self): ...
    @property
    def CellEditing(self): ...
    @property
    def CellEdited(self): ...
    @property
    def CellClick(self): ...
    @property
    def CellDoubleClick(self): ...
    @property
    def SelectionChanged(self): ...
    @property
    def ColumnHeaderClick(self): ...
    @property
    def CellFormatting(self): ...
    @property
    def RowFormatting(self): ...
    @property
    def SelectedItemsChanged(self): ...
    @property
    def SelectedRowsChanged(self): ...
    @property
    def ColumnOrderChanged(self): ...
    @property
    def ColumnWidthChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class Slider(Forms.TableLayout):
    """    """
    @overload
    def __init__(self, parent: Forms.Control): ...
    @overload
    def __init__(self, parent: Forms.Control, usePercentageSign: bool): ...
    @overload
    def __init__(self, parent: Forms.Control, usePercentageSign: bool, text1: str, text2: str): ...
    @property
    def AllowValuesToCross(self) -> bool: ...
    @property
    def AllowValuesToCrossMaxRange(self) -> bool: ...
    @property
    def AllowValuesToCrossMinRange(self) -> bool: ...
    @property
    def AllowValuesToCrossRange(self) -> bool: ...
    @property
    def AlternateText(self) -> str: ...
    @property
    def Decimals(self) -> int: ...
    @property
    def DrawArrows(self) -> bool: ...
    @property
    def DrawEndLines(self) -> bool: ...
    @property
    def DrawNumberUnderPoint(self) -> bool: ...
    @property
    def DrawTextLabels(self) -> bool: ...
    @property
    def DrawTextOnTop(self) -> bool: ...
    @property
    def Height(self) -> int: ...
    @property
    def MarkerPointColor1(self) -> Drawing.Color: ...
    @property
    def MarkerPointColor2(self) -> Drawing.Color: ...
    @property
    def MultipleValues(self) -> bool: ...
    @property
    def Value1(self) -> System.Nullable: ...
    @property
    def Value2(self) -> System.Nullable: ...
    @AllowValuesToCross.setter
    def AllowValuesToCross(self, value: System.Void): ...
    @AllowValuesToCrossMaxRange.setter
    def AllowValuesToCrossMaxRange(self, value: System.Void): ...
    @AllowValuesToCrossMinRange.setter
    def AllowValuesToCrossMinRange(self, value: System.Void): ...
    @AllowValuesToCrossRange.setter
    def AllowValuesToCrossRange(self, value: System.Void): ...
    @AlternateText.setter
    def AlternateText(self, value: System.Void): ...
    @Decimals.setter
    def Decimals(self, value: System.Void): ...
    @DrawArrows.setter
    def DrawArrows(self, value: System.Void): ...
    @DrawEndLines.setter
    def DrawEndLines(self, value: System.Void): ...
    @DrawNumberUnderPoint.setter
    def DrawNumberUnderPoint(self, value: System.Void): ...
    @DrawTextLabels.setter
    def DrawTextLabels(self, value: System.Void): ...
    @DrawTextOnTop.setter
    def DrawTextOnTop(self, value: System.Void): ...
    @Enabled.setter
    def Enabled(self, value: System.Void): ...
    @Height.setter
    def Height(self, value: System.Void): ...
    @MarkerPointColor1.setter
    def MarkerPointColor1(self, value: System.Void): ...
    @MarkerPointColor2.setter
    def MarkerPointColor2(self, value: System.Void): ...
    @MultipleValues.setter
    def MultipleValues(self, value: System.Void): ...
    @Value1.setter
    def Value1(self, value: System.Void): ...
    @Value2.setter
    def Value2(self, value: System.Void): ...
    @overload
    def SetMinMax(self, min_: float, max_: float) -> None: ...
    @overload
    def SetVaries(self, varies: bool) -> None: ...
    @overload
    def SetVaries(self, varies: bool, value: float) -> None: ...
    @property
    def PropertyChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RangeDialog(Forms.Dialog):
    """    """
    def __init__(self, min_: float, max_: float, decimals: int, increment: int, min_range: bool, max_range: bool): ...
    @property
    def Min(self) -> float: ...
    @property
    def Max(self) -> float: ...
    @property
    def Increment(self) -> int: ...
    @property
    def Decimals(self) -> int: ...
    @property
    def DefaultSize(self) -> Drawing.Size: ...
    @DefaultSize.setter
    def DefaultSize(self, value: System.Void): ...
    @property
    def Closed(self): ...
    @property
    def Closing(self): ...
    @property
    def LocationChanged(self): ...
    @property
    def OwnerChanged(self): ...
    @property
    def WindowStateChanged(self): ...
    @property
    def LogicalPixelSizeChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class ImageButton(Forms.Drawable):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, useFrameColors: bool): ...
    @property
    def DisabledImage(self) -> Drawing.Image: ...
    @property
    def HighlightBorderPen(self) -> Drawing.Pen: ...
    @property
    def HighlightBrush(self) -> Drawing.Brush: ...
    @property
    def HoverBorderPen(self) -> Drawing.Pen: ...
    @property
    def HoverBrush(self) -> Drawing.Brush: ...
    @property
    def Image(self) -> Drawing.Image: ...
    @property
    def MaskImageWithBackgroundColorWhenDisabled(self) -> bool: ...
    @property
    def Size(self) -> Drawing.Size: ...
    @DisabledImage.setter
    def DisabledImage(self, value: System.Void): ...
    @HighlightBorderPen.setter
    def HighlightBorderPen(self, value: System.Void): ...
    @HighlightBrush.setter
    def HighlightBrush(self, value: System.Void): ...
    @HoverBorderPen.setter
    def HoverBorderPen(self, value: System.Void): ...
    @HoverBrush.setter
    def HoverBrush(self, value: System.Void): ...
    @Image.setter
    def Image(self, value: System.Void): ...
    @MaskImageWithBackgroundColorWhenDisabled.setter
    def MaskImageWithBackgroundColorWhenDisabled(self, value: System.Void): ...
    @Size.setter
    def Size(self, value: System.Void): ...
    @property
    def Click(self): ...
    @property
    def Paint(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class ImageToolTipButton(ImageButton):
    """    """
    @overload
    def __init__(self, leftToolTip: str, rightToolTip: str): ...
    @overload
    def __init__(self, normalImageResourceId: str, disabledImageResourceId: str, leftToolTip: str, rightToolTip: str): ...
    @property
    def Click(self): ...
    @property
    def Paint(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class LabelSeparator(Forms.Panel):
    """    """
    def __init__(self): ...
    @property
    def Color(self) -> Drawing.Color: ...
    @property
    def Text(self) -> str: ...
    @property
    def UseRhinoColorScheme(self) -> bool: ...
    @Color.setter
    def Color(self, value: System.Void): ...
    @Text.setter
    def Text(self, value: System.Void): ...
    @UseRhinoColorScheme.setter
    def UseRhinoColorScheme(self, value: System.Void): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class LineTypeGridView(Forms.GridView):
    """    """
    def __init__(self, doc: Rhino.RhinoDoc): ...
    @overload
    def AddLineTypeItem(self, lt: DocObjects.Linetype, linetypename: str) -> None: ...
    @property
    def Document(self) -> Rhino.RhinoDoc: ...
    @property
    def LineTypeCollection(self) -> Forms.FilterCollection: ...
    @Document.setter
    def Document(self, value: System.Void): ...
    @LineTypeCollection.setter
    def LineTypeCollection(self, value: System.Void): ...
    @property
    def CellEditing(self): ...
    @property
    def CellEdited(self): ...
    @property
    def CellClick(self): ...
    @property
    def CellDoubleClick(self): ...
    @property
    def SelectionChanged(self): ...
    @property
    def ColumnHeaderClick(self): ...
    @property
    def CellFormatting(self): ...
    @property
    def RowFormatting(self): ...
    @property
    def SelectedItemsChanged(self): ...
    @property
    def SelectedRowsChanged(self): ...
    @property
    def ColumnOrderChanged(self): ...
    @property
    def ColumnWidthChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class LineTypeItem(UI.ViewModel):
    """    """
    def __init__(self, linetypeId: System.Guid): ...
    @property
    def AlwaysModelDistances(self) -> bool: ...
    @property
    def LineTypeId(self) -> System.Guid: ...
    @property
    def LinetypeIndex(self) -> int: ...
    @property
    def Name(self) -> str: ...
    @property
    def OriginalPattern(self) -> str: ...
    @property
    def Pattern(self) -> str: ...
    @AlwaysModelDistances.setter
    def AlwaysModelDistances(self, value: System.Void): ...
    @LinetypeIndex.setter
    def LinetypeIndex(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @OriginalPattern.setter
    def OriginalPattern(self, value: System.Void): ...
    @Pattern.setter
    def Pattern(self, value: System.Void): ...
    @property
    def PropertyChanged(self): ...
    @property
    def ModleUnitsChanged(self): ...
    @property
    def PageUnitsChanged(self): ...

class NumericUpDownWithUnitParsingEventArgs(System.EventArgs):
    """    """
    def __init__(self, previousValue: float, newValue: float, stepperArgs: Forms.StepperEventArgs): ...
    @property
    def NewValue(self) -> float: ...
    @property
    def PreviousValue(self) -> float: ...
    @property
    def StepperArgs(self) -> Forms.StepperEventArgs: ...

class NumericUpDownWithUnitParsingUpdateMode(enum.Enum):
    OnValueChange = 1
    OnEnterOrLoseFocus = 2
    WhenDoneChanging = 8
    Always = 4294967295

class NumericUpDownWithUnitParsing(Forms.MaskedTextStepper):
    """    """
    def __init__(self, showStepper: bool): ...
    @property
    def AlternateText(self) -> str: ...
    @property
    def AlternateTextColor(self) -> Drawing.Color: ...
    @property
    def AutoDetectPropertyPanelEmbedding(self) -> bool: ...
    @property
    def DecimalPlaces(self) -> int: ...
    @property
    def HideAlternateTextWhenValueChanges(self) -> bool: ...
    @property
    def Increment(self) -> float: ...
    @property
    def InvalidTextColor(self) -> Drawing.Color: ...
    @property
    def IsAlternateTextVisible(self) -> bool: ...
    @property
    def IsStepping(self) -> bool: ...
    @property
    def IsTextChanging(self) -> bool: ...
    @property
    def MaximumDecimalPlaces(self) -> int: ...
    @property
    def MaxValue(self) -> float: ...
    @property
    def MinValue(self) -> float: ...
    @property
    def NumericTextColor(self) -> Drawing.Color: ...
    @property
    def Prefix(self) -> str: ...
    @property
    def Suffix(self) -> str: ...
    @property
    def UpdateModeWhenInPanel(self) -> NumericUpDownWithUnitParsingUpdateMode: ...
    @property
    def UseDistanceDisplayMode(self) -> bool: ...
    @property
    def Value(self) -> float: ...
    @property
    def ValueBinding(self) -> Forms.BindableBinding: ...
    @property
    def ValueUpdateMode(self) -> NumericUpDownWithUnitParsingUpdateMode: ...
    @property
    def WantReturn(self) -> bool: ...
    @property
    def WantReturnInPanel(self) -> bool: ...
    @overload
    @staticmethod
    def GetFormatUnitSystem(doc: Rhino.RhinoDoc) -> (Rhino.UnitSystem, UI.DistanceDisplayMode): ...
    @overload
    @staticmethod
    def GetFormatUnitSystem(doc: Rhino.RhinoDoc, pageUnits: bool) -> (Rhino.UnitSystem, UI.DistanceDisplayMode): ...
    @AlternateText.setter
    def AlternateText(self, value: System.Void): ...
    @AlternateTextColor.setter
    def AlternateTextColor(self, value: System.Void): ...
    @AutoDetectPropertyPanelEmbedding.setter
    def AutoDetectPropertyPanelEmbedding(self, value: System.Void): ...
    @DecimalPlaces.setter
    def DecimalPlaces(self, value: System.Void): ...
    @HideAlternateTextWhenValueChanges.setter
    def HideAlternateTextWhenValueChanges(self, value: System.Void): ...
    @Increment.setter
    def Increment(self, value: System.Void): ...
    @InvalidTextColor.setter
    def InvalidTextColor(self, value: System.Void): ...
    @IsAlternateTextVisible.setter
    def IsAlternateTextVisible(self, value: System.Void): ...
    @MaximumDecimalPlaces.setter
    def MaximumDecimalPlaces(self, value: System.Void): ...
    @MaxValue.setter
    def MaxValue(self, value: System.Void): ...
    @MinValue.setter
    def MinValue(self, value: System.Void): ...
    @NumericTextColor.setter
    def NumericTextColor(self, value: System.Void): ...
    @Prefix.setter
    def Prefix(self, value: System.Void): ...
    @Suffix.setter
    def Suffix(self, value: System.Void): ...
    @UseDistanceDisplayMode.setter
    def UseDistanceDisplayMode(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @ValueUpdateMode.setter
    def ValueUpdateMode(self, value: System.Void): ...
    @WantReturn.setter
    def WantReturn(self, value: System.Void): ...
    @WantReturnInPanel.setter
    def WantReturnInPanel(self, value: System.Void): ...
    @overload
    def SetFormatUnitSystem(self, doc: Rhino.RhinoDoc) -> None: ...
    @overload
    def SetFormatUnitSystem(self, unitSystem: Rhino.UnitSystem, distanceDisplayMode: UI.DistanceDisplayMode) -> None: ...
    @overload
    def UseViewModelUnits(self, viewModel: UI.ViewModel) -> None: ...
    @overload
    def UseViewPageUnits(self, viewModel: UI.ViewModel) -> None: ...
    @property
    def SteppingStarted(self): ...
    @property
    def SteppingDone(self): ...
    @property
    def TextChangingStarted(self): ...
    @property
    def TextChangingDone(self): ...
    @property
    def PropertyChanged(self): ...
    @property
    def HideAlternateTextWhenValueChangesChanged(self): ...
    @property
    def AlternateTextChanged(self): ...
    @property
    def PrefixChanged(self): ...
    @property
    def SuffixChanged(self): ...
    @property
    def IncrementChanged(self): ...
    @property
    def WantReturnChanged(self): ...
    @property
    def WantReturnInPanelChanged(self): ...
    @property
    def ValueChanged(self): ...
    @property
    def MinValueChanged(self): ...
    @property
    def MaxValueChanged(self): ...
    @property
    def DecimalPlacesChanged(self): ...
    @property
    def MaximumDecimalPlacesChanged(self): ...
    @property
    def Step(self): ...
    @property
    def TextChanging(self): ...
    @property
    def TextChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class UnitParsingMaskedTextProvider(Forms.VariableMaskedTextProvider):
    """    """
    def __init__(self): ...
    @overload
    def Clear(self, length: int, forward: bool) -> (bool, int): ...
    @overload
    def Delete(self, length: int, forward: bool) -> (bool, int): ...
    @property
    def AlternateText(self) -> str: ...
    @property
    def DecimalPlaces(self) -> int: ...
    @property
    def DisplayText(self) -> str: ...
    @property
    def EditPositions(self) -> Generic.IEnumerable: ...
    @property
    def FormatText(self) -> bool: ...
    @property
    def HideAlternateTextWhenValueChanges(self) -> bool: ...
    @property
    def Increment(self) -> float: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def MaskCompleted(self) -> bool: ...
    @property
    def MaximumDecimalPlaces(self) -> int: ...
    @property
    def MaxValue(self) -> float: ...
    @property
    def MinValue(self) -> float: ...
    @property
    def Parent(self) -> Forms.TextBox: ...
    @property
    def Prefix(self) -> str: ...
    @property
    def PrefixOfset(self) -> int: ...
    @property
    def PreviousValue(self) -> float: ...
    @property
    def ShowAlternateText(self) -> bool: ...
    @property
    def Suffix(self) -> str: ...
    @property
    def SuffixOfset(self) -> int: ...
    @property
    def Text(self) -> str: ...
    @property
    def TextIsValid(self) -> bool: ...
    @property
    def Value(self) -> float: ...
    @overload
    @staticmethod
    def GetDistanceDisplayMode(rhinoDoc: Rhino.RhinoDoc) -> UI.DistanceDisplayMode: ...
    @overload
    @staticmethod
    def GetDistanceDisplayMode(rhinoDoc: Rhino.RhinoDoc, getPageUnits: bool) -> UI.DistanceDisplayMode: ...
    @overload
    def Insert(self, character: System.Char) -> (bool, int): ...
    @overload
    def PopShowAlternateText() -> None: ...
    @overload
    def PushShowAlternateText() -> None: ...
    @overload
    def Replace(self, character: System.Char) -> (bool, int): ...
    @overload
    def RevertValue() -> None: ...
    @AlternateText.setter
    def AlternateText(self, value: System.Void): ...
    @DecimalPlaces.setter
    def DecimalPlaces(self, value: System.Void): ...
    @FormatText.setter
    def FormatText(self, value: System.Void): ...
    @HideAlternateTextWhenValueChanges.setter
    def HideAlternateTextWhenValueChanges(self, value: System.Void): ...
    @Increment.setter
    def Increment(self, value: System.Void): ...
    @MaximumDecimalPlaces.setter
    def MaximumDecimalPlaces(self, value: System.Void): ...
    @MaxValue.setter
    def MaxValue(self, value: System.Void): ...
    @MinValue.setter
    def MinValue(self, value: System.Void): ...
    @Parent.setter
    def Parent(self, value: System.Void): ...
    @Prefix.setter
    def Prefix(self, value: System.Void): ...
    @ShowAlternateText.setter
    def ShowAlternateText(self, value: System.Void): ...
    @Suffix.setter
    def Suffix(self, value: System.Void): ...
    @Text.setter
    def Text(self, value: System.Void): ...
    @TextIsValid.setter
    def TextIsValid(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def SetFormatUnitSystem(self, unitSystem: Rhino.UnitSystem, distanceDisplayMode: UI.DistanceDisplayMode) -> None: ...
    @property
    def TextChanged(self): ...
    @property
    def ValueChanged(self): ...
    @property
    def TextIsValidChanged(self): ...
    @property
    def ShowAlternateTextChanged(self): ...

class RichTextAreaWithAlternateText(Forms.Panel):
    """    """
    def __init__(self): ...
    @property
    def AlternateText(self) -> str: ...
    @property
    def AlternateTextArea(self) -> Forms.TextArea: ...
    @property
    def HideAlternateTextWhenValueChanges(self) -> bool: ...
    @property
    def ReadOnly(self) -> bool: ...
    @property
    def RichTextArea(self) -> Forms.RichTextArea: ...
    @property
    def SelectAllOnGotFocus(self) -> bool: ...
    @property
    def ShowAlternateText(self) -> bool: ...
    @AlternateText.setter
    def AlternateText(self, value: System.Void): ...
    @HideAlternateTextWhenValueChanges.setter
    def HideAlternateTextWhenValueChanges(self, value: System.Void): ...
    @ReadOnly.setter
    def ReadOnly(self, value: System.Void): ...
    @SelectAllOnGotFocus.setter
    def SelectAllOnGotFocus(self, value: System.Void): ...
    @ShowAlternateText.setter
    def ShowAlternateText(self, value: System.Void): ...
    @property
    def TextChanged(self): ...
    @property
    def PropertyChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RenderContentMenu(object):
    """    """
    def __init__(self): ...
    @overload
    @staticmethod
    def AddMenuItem(plugInId: System.Guid, menuItemName: str, menuOrder: int, separatorStyle: SeparatorStyle, isToplevel: bool, icon: Drawing.Icon, executeCommandCallback: System.Func, isEnabledCallback: System.Func) -> None: ...

class EtoCollapsibleSectionHolder2(EtoCollapsibleSectionHolder):
    """    """
    def __init__(self): ...
    @property
    def m_stack(self) -> Forms.StackLayout: ...
    @overload
    def EnableHeaderButton(self, s: ICollapsibleSection, index: int, bEnable: bool) -> bool: ...
    @overload
    def SetFullHeightSection(self, sec: ICollapsibleSection) -> None: ...
    @overload
    def ShowHeaderButton(self, s: ICollapsibleSection, index: int, bShow: bool) -> bool: ...
    @property
    def OnCheckBoxChecked(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class EtoCollapsibleSectionHolder(Forms.Panel):
    """    """
    def __init__(self): ...
    @property
    def m_stack(self) -> Forms.StackLayout: ...
    @overload
    def Add(self, section: ICollapsibleSection) -> None: ...
    @overload
    def FindSectionIndex(self, section: ICollapsibleSection) -> int: ...
    @property
    def Created(self) -> bool: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def HolderParent(self) -> System.IntPtr: ...
    @property
    def Sections(self) -> Generic.IEnumerable: ...
    @property
    def Shown(self) -> bool: ...
    @property
    def UseCheckBoxes(self) -> bool: ...
    @property
    def UseScrollbars(self) -> bool: ...
    @property
    def Uuid(self) -> System.Guid: ...
    @overload
    def Move(self, rect: Drawing.Rectangle, bRepaint: bool, bRepaintNC: bool) -> None: ...
    @overload
    def RegisterSectionCheckBoxes() -> None: ...
    @overload
    def Remove(self, section: ICollapsibleSection) -> None: ...
    @overload
    def SectionAt(self, index: int) -> ICollapsibleSection: ...
    @overload
    def SectionCheckBox(self, caption: str) -> Forms.CheckBox: ...
    @Enabled.setter
    def Enabled(self, value: System.Void): ...
    @HolderParent.setter
    def HolderParent(self, value: System.Void): ...
    @Shown.setter
    def Shown(self, value: System.Void): ...
    @UseCheckBoxes.setter
    def UseCheckBoxes(self, value: System.Void): ...
    @UseScrollbars.setter
    def UseScrollbars(self, value: System.Void): ...
    @overload
    def UnRegisterSectionCheckBoxes() -> None: ...
    @property
    def OnCheckBoxChecked(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class EtoCollapsibleSection2(EtoCollapsibleSection):
    """    """
    @overload
    def EnableHeaderButton(self, index: int, bEnable: bool) -> bool: ...
    @overload
    def HolderVisible(self, visible: bool) -> None: ...
    @overload
    def NewHeaderButtonHandler() -> IHeaderButtonHandler: ...
    @overload
    def OnAttachedToHolder(self, holder: ICollapsibleSectionHolder2) -> None: ...
    @overload
    def OnAttachingToHolder(self, holder: ICollapsibleSectionHolder2) -> None: ...
    @overload
    def OnDetachedFromHolder(self, holder: ICollapsibleSectionHolder2) -> None: ...
    @overload
    def OnDetachingFromHolder(self, holder: ICollapsibleSectionHolder2) -> None: ...
    @overload
    def ShowHeaderButton(self, index: int, bShow: bool) -> bool: ...
    @property
    def DataChanged(self): ...
    @property
    def ViewModelActivated(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class EtoCollapsibleSection3(EtoCollapsibleSection2):
    """    """
    @overload
    def UpdateView(self, flags: System.UInt32) -> None: ...
    @property
    def DataChanged(self): ...
    @property
    def ViewModelActivated(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class EtoCollapsibleSection(Forms.Panel):
    """    """
    def __init__(self): ...
    @overload
    def ApplyStyles() -> None: ...
    @overload
    def CurrentRendererDependent(self, bValue: bool) -> None: ...
    @property
    def Caption(self) -> UI.LocalizeStringPair: ...
    @property
    def Collapsible(self) -> bool: ...
    @property
    def CommandOptionName(self) -> UI.LocalizeStringPair: ...
    @property
    def CppPointer(self) -> System.IntPtr: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def InitiallyExpanded(self) -> bool: ...
    @property
    def PlugInId(self) -> System.Guid: ...
    @property
    def SectionHeight(self) -> int: ...
    @property
    def SettingsTag(self) -> str: ...
    @property
    def ViewModel(self) -> IRdkViewModel: ...
    @property
    def ViewModelId(self) -> System.Guid: ...
    @overload
    def ReplaceCallback(self, callback: ICollapsibleSection) -> None: ...
    @overload
    def RunScript(self, vm: IRdkViewModel) -> int: ...
    @ViewModel.setter
    def ViewModel(self, value: System.Void): ...
    @property
    def DataChanged(self): ...
    @property
    def ViewModelActivated(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class EtoContentUISection3(EtoCollapsibleSection3):
    """    """
    def __init__(self): ...
    @property
    def Hidden(self) -> bool: ...
    @overload
    def GetSelection() -> Render.RenderContentCollection: ...
    @overload
    def SetSelection(self, collection: Render.RenderContentCollection) -> bool: ...
    @property
    def DataChanged(self): ...
    @property
    def ViewModelActivated(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class EtoContentUISection2(EtoCollapsibleSection2):
    """    """
    def __init__(self): ...
    @property
    def Hidden(self) -> bool: ...
    @overload
    def GetSelection() -> Render.RenderContentCollection: ...
    @overload
    def SetSelection(self, collection: Render.RenderContentCollection) -> bool: ...
    @property
    def DataChanged(self): ...
    @property
    def ViewModelActivated(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class EtoContentUISection(EtoCollapsibleSection):
    """    """
    @overload
    def GetSelection() -> Render.RenderContentCollection: ...
    @overload
    def SetSelection(self, collection: Render.RenderContentCollection) -> bool: ...
    @property
    def DataChanged(self): ...
    @property
    def ViewModelActivated(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class EtoPostEffectCollapsibleSection(EtoCollapsibleSection):
    """    """
    @property
    def PostEffectId(self) -> System.Guid: ...
    @property
    def PostEffects(self) -> PostEffects.System.Array[PostEffects.PostEffect]: ...
    @overload
    def GetParameter(self, paramName: str, defaultValue: object) -> object: ...
    @overload
    def GetPostEffects(self, type_: PostEffects.PostEffectType) -> PostEffects.System.Array[PostEffects.PostEffect]: ...
    @overload
    def SetParameter(self, paramName: str, value: object) -> bool: ...
    @property
    def DataChanged(self): ...
    @property
    def ViewModelActivated(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class ViewportControl(Forms.Control):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, viewportTitle: str): ...
    @property
    def Viewport(self) -> Display.RhinoViewport: ...
    @overload
    def Refresh() -> None: ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class PanelWithBorder(Forms.Panel):
    """    """
    def __init__(self): ...
    @property
    def BackgroundColor(self) -> Drawing.Color: ...
    @property
    def BorderColor(self) -> Drawing.Color: ...
    @property
    def BorderThickness(self) -> int: ...
    @property
    def Content(self) -> Forms.Control: ...
    @property
    def Padding(self) -> Drawing.Padding: ...
    @BackgroundColor.setter
    def BackgroundColor(self, value: System.Void): ...
    @BorderColor.setter
    def BorderColor(self, value: System.Void): ...
    @BorderThickness.setter
    def BorderThickness(self, value: System.Void): ...
    @Content.setter
    def Content(self, value: System.Void): ...
    @Padding.setter
    def Padding(self, value: System.Void): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoLayout(object):
    """    """
    @overload
    @staticmethod
    def DisablePanelColorStyling(panel: Forms.Panel) -> None: ...
    @overload
    @staticmethod
    def DisablePanelColorStyling(etoControl: Forms.Control, colorProperty: DisablePanelColorStylingProperty) -> None: ...
    @overload
    @staticmethod
    def EnablePanelColorStyling(panel: Forms.Panel, invalidate: bool) -> None: ...
    @overload
    @staticmethod
    def EnablePanelColorStyling(control: Forms.Control, colorProperty: DisablePanelColorStylingProperty, invalidate: bool) -> None: ...
    @overload
    @staticmethod
    def FixedSize(controlType: WidthControlType) -> Drawing.Size: ...
    @overload
    @staticmethod
    def FixedWidth(controlType: WidthControlType) -> int: ...
    @property
    def SplitterWidth(self) -> int: ...
    @overload
    @staticmethod
    def LabelRow(text: str, editControl: Forms.Control, stretch: bool) -> Forms.TableRow: ...
    @overload
    @staticmethod
    def LabelRow(label: Forms.Label, editControl: Forms.Control, stretch: bool) -> Forms.TableRow: ...
    @overload
    @staticmethod
    def LabelTableLayout(text: str, editControl: Forms.Control, stretch: bool, spacingType: SpacingType) -> Forms.TableLayout: ...
    @overload
    @staticmethod
    def LabelTableLayout(label: Forms.Label, editControl: Forms.Control, stretch: bool, spacingType: SpacingType) -> Forms.TableLayout: ...
    @overload
    @staticmethod
    def NewFileOpenImageButton() -> ImageButton: ...
    @overload
    @staticmethod
    def NewLabel(text: str) -> Forms.Label: ...
    @overload
    @staticmethod
    def NewLabelSeparator(text: str) -> Forms.Label: ...
    @overload
    @staticmethod
    def NewLabelSeparator(text: str, wrapMode: Forms.WrapMode) -> Forms.Label: ...
    @overload
    @staticmethod
    def Padding(paddingType: PaddingType) -> Drawing.Padding: ...
    @overload
    @staticmethod
    def Spacing(spacingType: SpacingType) -> Drawing.Size: ...
    @overload
    @staticmethod
    def StackedSpacing(spacingType: SpacingType) -> int: ...
    @overload
    @staticmethod
    def StackedSpacing(orientation: Forms.Orientation, spacingType: SpacingType) -> int: ...

class StaticAlignedLabel(Forms.Label):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, align: Forms.TextAlignment): ...
    @property
    def TextChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoButtonStackLayout(Forms.StackLayout):
    """    """
    @overload
    def __init__(self, orientation: Forms.Orientation, spacingType: SpacingType): ...
    @overload
    def __init__(self, orientation: Forms.Orientation, spacingType: SpacingType, buttons: Forms.System.Array[Forms.Button]): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoNestedTableLayout(Forms.TableLayout):
    """    """
    @overload
    def __init__(self, spacingType: SpacingType): ...
    @overload
    def __init__(self, spacingType: SpacingType, rows: Forms.System.Array[Forms.TableRow]): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoPanelStackLayout(Forms.StackLayout):
    """    """
    def __init__(self, orientation: Forms.Orientation): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoNestedStackLayout(Forms.StackLayout):
    """    """
    @overload
    def __init__(self, spacingType: SpacingType): ...
    @overload
    def __init__(self, orientation: Forms.Orientation, spacingType: SpacingType): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoButtonTableLayout(Forms.TableLayout):
    """    """
    @overload
    def __init__(self, spacingType: SpacingType): ...
    @overload
    def __init__(self, orientation: Forms.Orientation, spacingType: SpacingType, buttons: Forms.System.Array[Forms.Button]): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoDialogPanel(Forms.Panel):
    """    """
    def __init__(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoScrollableDialogPanel(Forms.Scrollable):
    """    """
    @overload
    def __init__(self, paddingType: PaddingType): ...
    @overload
    def __init__(self, border: bool): ...
    @property
    def Scroll(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoPanelScrollable(Forms.Scrollable):
    """    """
    def __init__(self): ...
    @property
    def Scroll(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoTableLayout(Forms.TableLayout):
    """    """
    def __init__(self, padding: PaddingType, spacing: SpacingType): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoDialogTableLayout(RhinoTableLayout):
    """    """
    def __init__(self, embeddedInRhinoDialogPanel: bool): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoPanelTableLayout(RhinoTableLayout):
    """    """
    def __init__(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoPropertiesPageTableLayout(RhinoTableLayout):
    """    """
    def __init__(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoIndentedPanel(Forms.Panel):
    """    """
    def __init__(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoIndentedTableLayout(Forms.TableLayout):
    """    """
    def __init__(self, spacingType: SpacingType): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoGroupBox(Forms.Panel):
    """    """
    def __init__(self, spacingType: SpacingType): ...
    @property
    def BackgroundColor(self) -> Drawing.Color: ...
    @property
    def Content(self) -> Forms.Control: ...
    @property
    def Padding(self) -> Drawing.Padding: ...
    @property
    def Text(self) -> str: ...
    @BackgroundColor.setter
    def BackgroundColor(self, value: System.Void): ...
    @Content.setter
    def Content(self, value: System.Void): ...
    @Padding.setter
    def Padding(self, value: System.Void): ...
    @Text.setter
    def Text(self, value: System.Void): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class RhinoButtonRow(Forms.StackLayout):
    """    """
    def __init__(self): ...
    @overload
    def AddButton() -> ImageButton: ...
    @overload
    def AddButton(self, button: Forms.Button) -> None: ...
    @overload
    def AddButton(self, tooltip: str) -> ImageButton: ...
    @overload
    def AddButton(self, imageButton: ImageButton) -> None: ...
    @overload
    def AddButton(self, imageResource: str, tooltip: str) -> ImageButton: ...
    @overload
    def AddButton(self, image: Drawing.Image, tooltip: str) -> ImageButton: ...
    @overload
    def AddButton(self, image: Drawing.Image, useOverlay: bool, tooltip: str) -> ImageButton: ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class AddRemoveButton(Forms.SegmentedButton):
    """    """
    def __init__(self, style: str): ...
    @property
    def AddCommand(self) -> Forms.Command: ...
    @property
    def AddEnabled(self) -> bool: ...
    @property
    def AddToolTip(self) -> str: ...
    @property
    def RemoveCommand(self) -> Forms.Command: ...
    @property
    def RemoveEnabled(self) -> bool: ...
    @property
    def RemoveToolTip(self) -> str: ...
    @overload
    def InsertButton(self, resourceId: str, toolTip: str, click: System.Action) -> Forms.ButtonSegmentedItem: ...
    @AddCommand.setter
    def AddCommand(self, value: System.Void): ...
    @AddEnabled.setter
    def AddEnabled(self, value: System.Void): ...
    @AddToolTip.setter
    def AddToolTip(self, value: System.Void): ...
    @RemoveCommand.setter
    def RemoveCommand(self, value: System.Void): ...
    @RemoveEnabled.setter
    def RemoveEnabled(self, value: System.Void): ...
    @RemoveToolTip.setter
    def RemoveToolTip(self, value: System.Void): ...
    @property
    def Added(self): ...
    @property
    def Removed(self): ...
    @property
    def SelectedItemsChanged(self): ...
    @property
    def SelectedIndexesChanged(self): ...
    @property
    def ItemClick(self): ...
    @property
    def SelectedIndexChanged(self): ...
    @property
    def SelectedItemChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class SeparatorStyle(enum.Enum):
    None_ = 0
    Before = 1
    After = 2
    Both = 3

class Context(enum.Enum):
    Unknown = 0
    MainThumbnailList = 1
    MainTree = 2
    EditorPreview = 3
    SubNodeControl = 4
    ColorButton = 5
    CreateNewButton = 6
    ContentControl = 7
    NewContentControl = 8
    NewContentControlDropDown = 9
    BreadcrumbControl = 10
    FloatingPreview = 11
    Spanner = 12
    SpannerModal = 13
    ContentTypeSection = 14
    ContentTypeBrowserNew = 15
    ContentTypeBrowserExisting = 16
    ContentInstanceBrowser = 17
    ToolTipPreview = 18

class OnCheckboxCheckedHandler(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, sender: object, e: System.EventArgs, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, sender: object, e: System.EventArgs) -> None: ...

class SectionContainer(Forms.Expander):
    """    """
    def __init__(self, section: ICollapsibleSection, content: Forms.Control): ...
    @property
    def Interface(self) -> ICollapsibleSection: ...
    @property
    def ExpandedChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyUp(self): ...
    @property
    def TextInput(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def GotFocus(self): ...
    @property
    def LostFocus(self): ...
    @property
    def Shown(self): ...
    @property
    def PreLoad(self): ...
    @property
    def Load(self): ...
    @property
    def LoadComplete(self): ...
    @property
    def UnLoad(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragLeave(self): ...
    @property
    def DragEnd(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def StyleChanged(self): ...

class PaddingType(enum.Enum):
    None_ = 0
    Dialog = 1
    Indented = 2
    RhinoPanel = 3
    RhinoPropertiesPage = 4
    ButtonRow = 5

class SpacingType(enum.Enum):
    Dialog = 0
    Panel = 1
    PropertiesPage = 2
    ButtonRow = 3

class WidthControlType(enum.Enum):
    Numeric = 0
    OrderOfMagnitude = 1
    Text = 2
    AutoSize = 3

class DisablePanelColorStylingProperty(enum.Enum):
    None_ = 0
    Foreground = 1
    Background = 2
    All = 16777215

class IHandler:
    """    """
    @property
    def Caption(self) -> str: ...
    @property
    def Collapsible(self) -> bool: ...

# endregion
