"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["AnnotationException", "SelectionFilterViewModel", "PreviousFilterState"]
# endregion

# region: Imports
from Rhino import DocObjects
from Rhino import UI
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: Rhino.UI, Version=8.19.25132.1001

class AnnotationException(System.Exception):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, msg: str): ...
    @overload
    def __init__(self, msg: str, inner: System.Exception): ...

class SelectionFilterViewModel(UI.ViewModel):
    """    """
    def __init__(self): ...
    @property
    def PreviousFilterState(self) -> PreviousFilterState: ...
    @overload
    def Closing() -> None: ...
    @overload
    def FilterEvent() -> None: ...
    @property
    def Annotations(self) -> bool: ...
    @property
    def Blocks(self) -> bool: ...
    @property
    def CheckBoxEnabledState(self) -> bool: ...
    @property
    def ControlId(self) -> str: ...
    @property
    def ControlIdCheckState(self) -> bool: ...
    @property
    def ControlPoints(self) -> bool: ...
    @property
    def Curves(self) -> bool: ...
    @property
    def Disable(self) -> bool: ...
    @property
    def DisableCheckBoxVisibilityState(self) -> bool: ...
    @property
    def EventSet(self) -> bool: ...
    @property
    def Hatches(self) -> bool: ...
    @property
    def LastControlId(self) -> str: ...
    @property
    def Lights(self) -> bool: ...
    @property
    def LostFocus(self) -> bool: ...
    @property
    def Meshes(self) -> bool: ...
    @property
    def OneShotFilterState(self) -> bool: ...
    @property
    def Others(self) -> bool: ...
    @property
    def PersistentFilterState(self) -> bool: ...
    @property
    def PointClouds(self) -> bool: ...
    @property
    def Points(self) -> bool: ...
    @property
    def PolySurfaces(self) -> bool: ...
    @property
    def SubD(self) -> bool: ...
    @property
    def SubObjects(self) -> bool: ...
    @property
    def Surfaces(self) -> bool: ...
    @property
    def UiLayoutIsDirty(self) -> bool: ...
    @overload
    def GetAppFilterState() -> None: ...
    @overload
    def OneShotSelectionValidateOnLostFocus() -> None: ...
    @overload
    def PlayRightClickState(self, obj: System.Nullable) -> None: ...
    @overload
    def RecordPreviousState() -> None: ...
    @Annotations.setter
    def Annotations(self, value: System.Void): ...
    @Blocks.setter
    def Blocks(self, value: System.Void): ...
    @ControlId.setter
    def ControlId(self, value: System.Void): ...
    @ControlIdCheckState.setter
    def ControlIdCheckState(self, value: System.Void): ...
    @ControlPoints.setter
    def ControlPoints(self, value: System.Void): ...
    @Curves.setter
    def Curves(self, value: System.Void): ...
    @Disable.setter
    def Disable(self, value: System.Void): ...
    @EventSet.setter
    def EventSet(self, value: System.Void): ...
    @Hatches.setter
    def Hatches(self, value: System.Void): ...
    @LastControlId.setter
    def LastControlId(self, value: System.Void): ...
    @Lights.setter
    def Lights(self, value: System.Void): ...
    @LostFocus.setter
    def LostFocus(self, value: System.Void): ...
    @Meshes.setter
    def Meshes(self, value: System.Void): ...
    @OneShotFilterState.setter
    def OneShotFilterState(self, value: System.Void): ...
    @Others.setter
    def Others(self, value: System.Void): ...
    @PointClouds.setter
    def PointClouds(self, value: System.Void): ...
    @Points.setter
    def Points(self, value: System.Void): ...
    @PolySurfaces.setter
    def PolySurfaces(self, value: System.Void): ...
    @SubD.setter
    def SubD(self, value: System.Void): ...
    @SubObjects.setter
    def SubObjects(self, value: System.Void): ...
    @Surfaces.setter
    def Surfaces(self, value: System.Void): ...
    @UiLayoutIsDirty.setter
    def UiLayoutIsDirty(self, value: System.Void): ...
    @overload
    def Shown() -> None: ...
    @property
    def PropertyChanged(self): ...
    @property
    def ModleUnitsChanged(self): ...
    @property
    def PageUnitsChanged(self): ...

class PreviousFilterState(object):
    """    """
    def __init__(self): ...
    @property
    def Annotation(self) -> bool: ...
    @property
    def Blocks(self) -> bool: ...
    @property
    def ControlPoints(self) -> bool: ...
    @property
    def Curves(self) -> bool: ...
    @property
    def GlobalFilterState(self) -> DocObjects.ObjectType: ...
    @property
    def Hatches(self) -> bool: ...
    @property
    def LastSelection(self) -> int: ...
    @property
    def Lights(self) -> bool: ...
    @property
    def Meshes(self) -> bool: ...
    @property
    def OneShot(self) -> bool: ...
    @property
    def OneShotFilterState(self) -> DocObjects.ObjectType: ...
    @property
    def Others(self) -> bool: ...
    @property
    def PointClouds(self) -> bool: ...
    @property
    def Points(self) -> bool: ...
    @property
    def PolySurfaces(self) -> bool: ...
    @property
    def SubD(self) -> bool: ...
    @property
    def Surfaces(self) -> bool: ...
    @Annotation.setter
    def Annotation(self, value: System.Void): ...
    @Blocks.setter
    def Blocks(self, value: System.Void): ...
    @ControlPoints.setter
    def ControlPoints(self, value: System.Void): ...
    @Curves.setter
    def Curves(self, value: System.Void): ...
    @GlobalFilterState.setter
    def GlobalFilterState(self, value: System.Void): ...
    @Hatches.setter
    def Hatches(self, value: System.Void): ...
    @LastSelection.setter
    def LastSelection(self, value: System.Void): ...
    @Lights.setter
    def Lights(self, value: System.Void): ...
    @Meshes.setter
    def Meshes(self, value: System.Void): ...
    @OneShot.setter
    def OneShot(self, value: System.Void): ...
    @OneShotFilterState.setter
    def OneShotFilterState(self, value: System.Void): ...
    @Others.setter
    def Others(self, value: System.Void): ...
    @PointClouds.setter
    def PointClouds(self, value: System.Void): ...
    @Points.setter
    def Points(self, value: System.Void): ...
    @PolySurfaces.setter
    def PolySurfaces(self, value: System.Void): ...
    @SubD.setter
    def SubD(self, value: System.Void): ...
    @Surfaces.setter
    def Surfaces(self, value: System.Void): ...

# endregion
