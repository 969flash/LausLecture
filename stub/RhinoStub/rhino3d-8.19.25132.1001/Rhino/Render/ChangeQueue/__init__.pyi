"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["DisplayRenderSettings", "Environment", "Skylight", "Light", "DynamicObjectTransform", "ClippingPlane", "GroundPlane", "MappingChannel", "MappingChannelCollection", "Mesh", "MeshInstance", "Material", "ChangeQueue", "FrameBufferFillMode", "Event", "AncestryRecord", "BakingFunctions"]
# endregion

# region: Imports
from Rhino import Display
from Rhino import DocObjects
from Rhino import Geometry
from Rhino import Render
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: RhinoCommon, Version=8.19.25132.1001

class DisplayRenderSettings(object):
    """ChangeQueue DisplayRenderSettings

    """
    @property
    def CullBackFaces(self) -> bool: ...
    @property
    def ForceFlatShading(self) -> bool: ...
    @property
    def SceneLightingOn(self) -> bool: ...

class Environment(object):
    """ChangeQueue environment

    """

class Skylight(object):
    """ChangeQueue skylight

    """
    @property
    def Enabled(self) -> bool: ...
    @property
    def ShadowIntensity(self) -> float: ...
    @property
    def UsesCustomEnvironment(self) -> bool: ...
    @overload
    def ToString() -> str: ...

class Light(object):
    """ChangeQueue Light change representation

    """
    @property
    def ChangeType(self) -> Event: ...
    @property
    def Data(self) -> Geometry.Light: ...
    @property
    def Id(self) -> System.Guid: ...
    @property
    def IdCrc(self) -> System.UInt32: ...
    @property
    def MaterialId(self) -> System.UInt32: ...

class DynamicObjectTransform(object):
    """ChangeQueue DynamicObject

    """
    @property
    def MeshInstanceId(self) -> System.UInt32: ...
    @property
    def Transform(self) -> Geometry.Transform: ...
    @overload
    def ToString() -> str: ...

class ClippingPlane(object):
    """ChangeQueue clipping plane

    """
    @property
    def Attributes(self) -> DocObjects.ObjectAttributes: ...
    @property
    def ClipViewports(self) -> Display.System.Array[Display.RhinoViewport]: ...
    @property
    def Id(self) -> System.Guid: ...
    @property
    def IsEnabled(self) -> bool: ...
    @property
    def Plane(self) -> Geometry.Plane: ...
    @property
    def ViewIds(self) -> Generic.List: ...

class GroundPlane(object):
    """ChangeQueue ground plane

    """
    @property
    def Altitude(self) -> float: ...
    @property
    def Crc(self) -> System.UInt32: ...
    @property
    def Enabled(self) -> bool: ...
    @property
    def IsShadowOnly(self) -> bool: ...
    @property
    def MaterialId(self) -> System.UInt32: ...
    @property
    def ShowUnderside(self) -> bool: ...
    @property
    def TextureOffset(self) -> Geometry.Vector2d: ...
    @property
    def TextureRotation(self) -> float: ...
    @property
    def TextureScale(self) -> Geometry.Vector2d: ...

class MappingChannel(object):
    """Mapping Channel for a ChangeQueue Mesh

    """
    @property
    def Channel(self) -> int: ...
    @property
    def Local(self) -> Geometry.Transform: ...
    @property
    def Mapping(self) -> Render.TextureMapping: ...

class MappingChannelCollection(object):
    """MappingChannels for a Mesh

    """
    @property
    def Channels(self) -> Generic.IEnumerable: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> MappingChannel: ...
    @property
    def SingleMapping(self) -> MappingChannel: ...

class Mesh(object):
    """Representation of ChangeQueue Mesh

    """
    @property
    def Attributes(self) -> DocObjects.ObjectAttributes: ...
    @property
    def Mapping(self) -> MappingChannelCollection: ...
    @property
    def Mappings(self) -> System.Array[MappingChannel]: ...
    @property
    def Object(self) -> DocObjects.RhinoObject: ...
    @property
    def OcsTransform(self) -> Geometry.Transform: ...
    @property
    def SingleMapping(self) -> MappingChannel: ...
    @property
    def SingleMesh(self) -> Geometry.Mesh: ...
    @overload
    def GetMeshes() -> Geometry.System.Array[Geometry.Mesh]: ...
    @overload
    def Id() -> System.Guid: ...

class MeshInstance(object):
    """Representation of ChangeQueue MeshInstance

    """
    @property
    def Ancestry(self) -> System.Array[AncestryRecord]: ...
    @property
    def CastShadows(self) -> bool: ...
    @property
    def Decals(self) -> Render.Decals: ...
    @property
    def GroupId(self) -> System.UInt32: ...
    @property
    def InstanceId(self) -> System.UInt32: ...
    @property
    def MaterialId(self) -> System.UInt32: ...
    @property
    def MeshId(self) -> System.Guid: ...
    @property
    def MeshIndex(self) -> int: ...
    @property
    def ObjectAttributes(self) -> DocObjects.ObjectAttributes: ...
    @property
    def OcsTransform(self) -> Geometry.Transform: ...
    @property
    def ParentId(self) -> System.Guid: ...
    @property
    def ReceiveShadows(self) -> bool: ...
    @property
    def RenderMaterial(self) -> Render.RenderMaterial: ...
    @property
    def RootId(self) -> System.Guid: ...
    @property
    def Transform(self) -> Geometry.Transform: ...

class Material(object):
    """Representation of a Material through the change queue

    """
    @property
    def Id(self) -> System.UInt32: ...
    @property
    def MeshIndex(self) -> int: ...
    @property
    def MeshInstanceId(self) -> System.UInt32: ...

class ChangeQueue(object):
    """Base class for ChangeQueue. Generally used by render plugins to build interactive updating of scenes that are being rendered.

    """
    @overload
    def AreViewsEqual(self, aView: DocObjects.ViewInfo, bView: DocObjects.ViewInfo) -> bool: ...
    @overload
    @staticmethod
    def ConvertCameraBasedLightToWorld(changequeue: ChangeQueue, light: Light, vp: DocObjects.ViewInfo) -> None: ...
    @overload
    @staticmethod
    def CrcFromGuid(guid: System.Guid) -> System.UInt32: ...
    @overload
    def CreateWorld() -> None: ...
    @overload
    def CreateWorld(self, bFlushWhenReady: bool) -> None: ...
    @overload
    def Dispose() -> None: ...
    @overload
    def EnvironmentForid(self, crc: System.UInt32) -> Render.RenderEnvironment: ...
    @overload
    def EnvironmentFromOriginalInstanceId(self, id_: System.Guid) -> Render.RenderEnvironment: ...
    @overload
    def EnvironmentIdForUsage(self, usage: Render.Usage) -> System.UInt32: ...
    @overload
    def Flush() -> None: ...
    @property
    def DisplayPipelineAttributes(self) -> Display.DisplayPipelineAttributes: ...
    @property
    def IsPreview(self) -> bool: ...
    @property
    def ViewId(self) -> System.Guid: ...
    @overload
    def GetQueueGroundPlane() -> GroundPlane: ...
    @overload
    def GetQueueRenderSettings() -> Render.RenderSettings: ...
    @overload
    def GetQueueSceneBoundingBox() -> Geometry.BoundingBox: ...
    @overload
    def GetQueueSkylight() -> Skylight: ...
    @overload
    def GetQueueSun() -> Geometry.Light: ...
    @overload
    def GetQueueView() -> DocObjects.ViewInfo: ...
    @overload
    def MaterialFromId(self, crc: System.UInt32) -> Render.RenderMaterial: ...
    @overload
    def MaterialFromOriginalInstanceId(self, id_: System.Guid) -> Render.RenderMaterial: ...
    @overload
    def OneShot() -> None: ...
    @overload
    def TextureForId(self, crc: System.UInt32) -> Render.RenderTexture: ...
    @overload
    def TextureFromOriginalInstanceId(self, id_: System.Guid) -> Render.RenderTexture: ...

class FrameBufferFillMode(enum.Enum):
    None_ = 0
    DefaultColor = 1
    SolidColor = 2
    Gradient2Color = 3
    Gradient4Color = 4
    Bitmap = 5
    Renderer = 6
    Transparent = 7
    Force32Bit = 4294967295

class Event(enum.Enum):
    Added = 0
    Deleted = 1
    Undeleted = 2
    Modified = 3
    Sorted = 4

class AncestryRecord(object):
    """Information about the ancestry of a MeshInstance

    """
    def __init__(self): ...
    @overload
    def Dispose() -> None: ...
    @property
    def DefinitionId(self) -> System.Guid: ...
    @property
    def ReferenceAttributes(self) -> DocObjects.ObjectAttributes: ...
    @property
    def ReferenceId(self) -> System.Guid: ...
    @property
    def Transform(self) -> Geometry.Transform: ...

class BakingFunctions(enum.Enum):
    None_ = 0
    Decals = 1
    ProceduralTextures = 2
    CustomObjectMappings = 4
    WcsBasedMappings = 8
    MultipleMappingChannels = 16
    NoRepeatTextures = 32
    All = 4294967295

# endregion
