"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["ValueTaskSourceOnCompletedFlags", "ValueTaskSourceStatus", "IValueTaskSource", "ManualResetValueTaskSourceCore"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: System.Private.CoreLib, Version=7.0.0.0

class ValueTaskSourceOnCompletedFlags(enum.Enum):
    None_ = 0
    UseSchedulingContext = 1
    FlowExecutionContext = 2

class ValueTaskSourceStatus(enum.Enum):
    Pending = 0
    Succeeded = 1
    Faulted = 2
    Canceled = 3

class IValueTaskSource:
    """    """
    @overload
    def GetResult(self, token: System.Int16) -> None: ...
    @overload
    def GetStatus(self, token: System.Int16) -> ValueTaskSourceStatus: ...
    @overload
    def OnCompleted(self, continuation: System.Action, state: object, token: System.Int16, flags: ValueTaskSourceOnCompletedFlags) -> None: ...

class IValueTaskSource:
    """    IValueTaskSource[TResult]
    """
    @overload
    def GetResult(self, token: System.Int16) -> TResult: ...
    @overload
    def GetStatus(self, token: System.Int16) -> ValueTaskSourceStatus: ...
    @overload
    def OnCompleted(self, continuation: System.Action, state: object, token: System.Int16, flags: ValueTaskSourceOnCompletedFlags) -> None: ...

class ManualResetValueTaskSourceCore(System.ValueType):
    """    ManualResetValueTaskSourceCore[TResult]
    """
    @property
    def RunContinuationsAsynchronously(self) -> bool: ...
    @property
    def Version(self) -> System.Int16: ...
    @overload
    def GetResult(self, token: System.Int16) -> TResult: ...
    @overload
    def GetStatus(self, token: System.Int16) -> ValueTaskSourceStatus: ...
    @overload
    def OnCompleted(self, continuation: System.Action, state: object, token: System.Int16, flags: ValueTaskSourceOnCompletedFlags) -> None: ...
    @overload
    def Reset() -> None: ...
    @RunContinuationsAsynchronously.setter
    def RunContinuationsAsynchronously(self, value: System.Void): ...
    @overload
    def SetException(self, error: System.Exception) -> None: ...
    @overload
    def SetResult(self, result: TResult) -> None: ...

# endregion
