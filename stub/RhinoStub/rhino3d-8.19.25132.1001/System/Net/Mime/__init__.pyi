"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["TransferEncoding", "ContentDisposition", "ContentType", "DispositionTypeNames", "MediaTypeNames", "Text", "Application", "Image"]
# endregion

# region: Imports
from System.Collections import Specialized
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: System.Net.Mail, Version=7.0.0.0

class TransferEncoding(enum.Enum):
    QuotedPrintable = 0
    Base64 = 1
    SevenBit = 2
    EightBit = 3
    Unknown = -1

class ContentDisposition(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, disposition: str): ...
    @overload
    def Equals(self, rparam: object) -> bool: ...
    @property
    def CreationDate(self) -> System.DateTime: ...
    @property
    def DispositionType(self) -> str: ...
    @property
    def FileName(self) -> str: ...
    @property
    def Inline(self) -> bool: ...
    @property
    def ModificationDate(self) -> System.DateTime: ...
    @property
    def Parameters(self) -> Specialized.StringDictionary: ...
    @property
    def ReadDate(self) -> System.DateTime: ...
    @property
    def Size(self) -> System.Int64: ...
    @overload
    def GetHashCode() -> int: ...
    @CreationDate.setter
    def CreationDate(self, value: System.Void): ...
    @DispositionType.setter
    def DispositionType(self, value: System.Void): ...
    @FileName.setter
    def FileName(self, value: System.Void): ...
    @Inline.setter
    def Inline(self, value: System.Void): ...
    @ModificationDate.setter
    def ModificationDate(self, value: System.Void): ...
    @ReadDate.setter
    def ReadDate(self, value: System.Void): ...
    @Size.setter
    def Size(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class ContentType(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, contentType: str): ...
    @overload
    def Equals(self, rparam: object) -> bool: ...
    @property
    def Boundary(self) -> str: ...
    @property
    def CharSet(self) -> str: ...
    @property
    def MediaType(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Parameters(self) -> Specialized.StringDictionary: ...
    @overload
    def GetHashCode() -> int: ...
    @Boundary.setter
    def Boundary(self, value: System.Void): ...
    @CharSet.setter
    def CharSet(self, value: System.Void): ...
    @MediaType.setter
    def MediaType(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class DispositionTypeNames(object):
    """    """
    @property
    def Inline(self) -> str: ...
    @property
    def Attachment(self) -> str: ...

class MediaTypeNames(object):
    """    """

class Text(object):
    """    """
    @property
    def Plain(self) -> str: ...
    @property
    def Html(self) -> str: ...
    @property
    def Xml(self) -> str: ...
    @property
    def RichText(self) -> str: ...

class Application(object):
    """    """
    @property
    def Soap(self) -> str: ...
    @property
    def Octet(self) -> str: ...
    @property
    def Rtf(self) -> str: ...
    @property
    def Pdf(self) -> str: ...
    @property
    def Zip(self) -> str: ...
    @property
    def Json(self) -> str: ...
    @property
    def Xml(self) -> str: ...

class Image(object):
    """    """
    @property
    def Gif(self) -> str: ...
    @property
    def Tiff(self) -> str: ...
    @property
    def Jpeg(self) -> str: ...

# endregion
