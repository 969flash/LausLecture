"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["ManagedPEBuilder", "PEBuilder", "DebugDirectoryBuilder", "PdbChecksumDebugDirectoryData", "PEDirectoriesBuilder", "PEHeaderBuilder", "ResourceSectionBuilder", "SectionLocation", "CoffHeader", "CorFlags", "CorHeader", "CodeViewDebugDirectoryData", "DebugDirectoryEntry", "DebugDirectoryEntryType", "DirectoryEntry", "Machine", "Characteristics", "PEMagic", "Subsystem", "DllCharacteristics", "SectionCharacteristics", "PEHeader", "PEHeaders", "PEMemoryBlock", "PEReader", "PEStreamOptions", "SectionHeader"]
# endregion

# region: Imports
from System import IO
from System.Collections import Immutable
from System.Reflection import Metadata
from System.Reflection.Metadata import Ecma335
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: System.Reflection.Metadata, Version=7.0.0.0

class ManagedPEBuilder(PEBuilder):
    """    """
    def __init__(self, header: PEHeaderBuilder, metadataRootBuilder: Ecma335.MetadataRootBuilder, ilStream: Metadata.BlobBuilder, mappedFieldData: Metadata.BlobBuilder, managedResources: Metadata.BlobBuilder, nativeResources: ResourceSectionBuilder, debugDirectoryBuilder: DebugDirectoryBuilder, strongNameSignatureSize: int, entryPoint: Metadata.MethodDefinitionHandle, flags: CorFlags, deterministicIdProvider: System.Func): ...
    @property
    def ManagedResourcesDataAlignment(self) -> int: ...
    @property
    def MappedFieldDataAlignment(self) -> int: ...
    @overload
    def Sign(self, peImage: Metadata.BlobBuilder, signatureProvider: System.Func) -> None: ...

class PEBuilder(object):
    """    """
    @property
    def Header(self) -> PEHeaderBuilder: ...
    @property
    def IdProvider(self) -> System.Func: ...
    @property
    def IsDeterministic(self) -> bool: ...
    @overload
    def Serialize(self, builder: Metadata.BlobBuilder) -> Metadata.BlobContentId: ...

class DebugDirectoryBuilder(object):
    """    """
    def __init__(self): ...
    @overload
    def AddCodeViewEntry(self, pdbPath: str, pdbContentId: Metadata.BlobContentId, portablePdbVersion: System.UInt16) -> None: ...
    @overload
    def AddCodeViewEntry(self, pdbPath: str, pdbContentId: Metadata.BlobContentId, portablePdbVersion: System.UInt16, age: int) -> None: ...
    @overload
    def AddEmbeddedPortablePdbEntry(self, debugMetadata: Metadata.BlobBuilder, portablePdbVersion: System.UInt16) -> None: ...
    @overload
    def AddEntry(self, type_: DebugDirectoryEntryType, version: System.UInt32, stamp: System.UInt32) -> None: ...
    @overload
    def AddEntry(self, type_: DebugDirectoryEntryType, version: System.UInt32, stamp: System.UInt32, data: TData, dataSerializer: System.Action) -> None: ...
    @overload
    def AddPdbChecksumEntry(self, algorithmName: str, checksum: Immutable.ImmutableArray) -> None: ...
    @overload
    def AddReproducibleEntry() -> None: ...

class PdbChecksumDebugDirectoryData(System.ValueType):
    """    """
    @property
    def AlgorithmName(self) -> str: ...
    @property
    def Checksum(self) -> Immutable.ImmutableArray: ...

class PEDirectoriesBuilder(object):
    """    """
    def __init__(self): ...
    @property
    def AddressOfEntryPoint(self) -> int: ...
    @property
    def BaseRelocationTable(self) -> DirectoryEntry: ...
    @property
    def BoundImportTable(self) -> DirectoryEntry: ...
    @property
    def CopyrightTable(self) -> DirectoryEntry: ...
    @property
    def CorHeaderTable(self) -> DirectoryEntry: ...
    @property
    def DebugTable(self) -> DirectoryEntry: ...
    @property
    def DelayImportTable(self) -> DirectoryEntry: ...
    @property
    def ExceptionTable(self) -> DirectoryEntry: ...
    @property
    def ExportTable(self) -> DirectoryEntry: ...
    @property
    def GlobalPointerTable(self) -> DirectoryEntry: ...
    @property
    def ImportAddressTable(self) -> DirectoryEntry: ...
    @property
    def ImportTable(self) -> DirectoryEntry: ...
    @property
    def LoadConfigTable(self) -> DirectoryEntry: ...
    @property
    def ResourceTable(self) -> DirectoryEntry: ...
    @property
    def ThreadLocalStorageTable(self) -> DirectoryEntry: ...
    @AddressOfEntryPoint.setter
    def AddressOfEntryPoint(self, value: System.Void): ...
    @BaseRelocationTable.setter
    def BaseRelocationTable(self, value: System.Void): ...
    @BoundImportTable.setter
    def BoundImportTable(self, value: System.Void): ...
    @CopyrightTable.setter
    def CopyrightTable(self, value: System.Void): ...
    @CorHeaderTable.setter
    def CorHeaderTable(self, value: System.Void): ...
    @DebugTable.setter
    def DebugTable(self, value: System.Void): ...
    @DelayImportTable.setter
    def DelayImportTable(self, value: System.Void): ...
    @ExceptionTable.setter
    def ExceptionTable(self, value: System.Void): ...
    @ExportTable.setter
    def ExportTable(self, value: System.Void): ...
    @GlobalPointerTable.setter
    def GlobalPointerTable(self, value: System.Void): ...
    @ImportAddressTable.setter
    def ImportAddressTable(self, value: System.Void): ...
    @ImportTable.setter
    def ImportTable(self, value: System.Void): ...
    @LoadConfigTable.setter
    def LoadConfigTable(self, value: System.Void): ...
    @ResourceTable.setter
    def ResourceTable(self, value: System.Void): ...
    @ThreadLocalStorageTable.setter
    def ThreadLocalStorageTable(self, value: System.Void): ...

class PEHeaderBuilder(object):
    """    """
    def __init__(self, machine: Machine, sectionAlignment: int, fileAlignment: int, imageBase: System.UInt64, majorLinkerVersion: System.Byte, minorLinkerVersion: System.Byte, majorOperatingSystemVersion: System.UInt16, minorOperatingSystemVersion: System.UInt16, majorImageVersion: System.UInt16, minorImageVersion: System.UInt16, majorSubsystemVersion: System.UInt16, minorSubsystemVersion: System.UInt16, subsystem: Subsystem, dllCharacteristics: DllCharacteristics, imageCharacteristics: Characteristics, sizeOfStackReserve: System.UInt64, sizeOfStackCommit: System.UInt64, sizeOfHeapReserve: System.UInt64, sizeOfHeapCommit: System.UInt64): ...
    @overload
    @staticmethod
    def CreateExecutableHeader() -> PEHeaderBuilder: ...
    @overload
    @staticmethod
    def CreateLibraryHeader() -> PEHeaderBuilder: ...
    @property
    def DllCharacteristics(self) -> DllCharacteristics: ...
    @property
    def FileAlignment(self) -> int: ...
    @property
    def ImageBase(self) -> System.UInt64: ...
    @property
    def ImageCharacteristics(self) -> Characteristics: ...
    @property
    def Machine(self) -> Machine: ...
    @property
    def MajorImageVersion(self) -> System.UInt16: ...
    @property
    def MajorLinkerVersion(self) -> System.Byte: ...
    @property
    def MajorOperatingSystemVersion(self) -> System.UInt16: ...
    @property
    def MajorSubsystemVersion(self) -> System.UInt16: ...
    @property
    def MinorImageVersion(self) -> System.UInt16: ...
    @property
    def MinorLinkerVersion(self) -> System.Byte: ...
    @property
    def MinorOperatingSystemVersion(self) -> System.UInt16: ...
    @property
    def MinorSubsystemVersion(self) -> System.UInt16: ...
    @property
    def SectionAlignment(self) -> int: ...
    @property
    def SizeOfHeapCommit(self) -> System.UInt64: ...
    @property
    def SizeOfHeapReserve(self) -> System.UInt64: ...
    @property
    def SizeOfStackCommit(self) -> System.UInt64: ...
    @property
    def SizeOfStackReserve(self) -> System.UInt64: ...
    @property
    def Subsystem(self) -> Subsystem: ...

class ResourceSectionBuilder(object):
    """    """

class SectionLocation(System.ValueType):
    """    """
    def __init__(self, relativeVirtualAddress: int, pointerToRawData: int): ...
    @property
    def PointerToRawData(self) -> int: ...
    @property
    def RelativeVirtualAddress(self) -> int: ...

class CoffHeader(object):
    """    """
    @property
    def Characteristics(self) -> Characteristics: ...
    @property
    def Machine(self) -> Machine: ...
    @property
    def NumberOfSections(self) -> System.Int16: ...
    @property
    def NumberOfSymbols(self) -> int: ...
    @property
    def PointerToSymbolTable(self) -> int: ...
    @property
    def SizeOfOptionalHeader(self) -> System.Int16: ...
    @property
    def TimeDateStamp(self) -> int: ...

class CorFlags(enum.Enum):
    ILOnly = 1
    Requires32Bit = 2
    ILLibrary = 4
    StrongNameSigned = 8
    NativeEntryPoint = 16
    TrackDebugData = 65536
    Prefers32Bit = 131072

class CorHeader(object):
    """    """
    @property
    def CodeManagerTableDirectory(self) -> DirectoryEntry: ...
    @property
    def EntryPointTokenOrRelativeVirtualAddress(self) -> int: ...
    @property
    def ExportAddressTableJumpsDirectory(self) -> DirectoryEntry: ...
    @property
    def Flags(self) -> CorFlags: ...
    @property
    def MajorRuntimeVersion(self) -> System.UInt16: ...
    @property
    def ManagedNativeHeaderDirectory(self) -> DirectoryEntry: ...
    @property
    def MetadataDirectory(self) -> DirectoryEntry: ...
    @property
    def MinorRuntimeVersion(self) -> System.UInt16: ...
    @property
    def ResourcesDirectory(self) -> DirectoryEntry: ...
    @property
    def StrongNameSignatureDirectory(self) -> DirectoryEntry: ...
    @property
    def VtableFixupsDirectory(self) -> DirectoryEntry: ...

class CodeViewDebugDirectoryData(System.ValueType):
    """    """
    @property
    def Age(self) -> int: ...
    @property
    def Guid(self) -> System.Guid: ...
    @property
    def Path(self) -> str: ...

class DebugDirectoryEntry(System.ValueType):
    """    """
    def __init__(self, stamp: System.UInt32, majorVersion: System.UInt16, minorVersion: System.UInt16, type_: DebugDirectoryEntryType, dataSize: int, dataRelativeVirtualAddress: int, dataPointer: int): ...
    @property
    def DataPointer(self) -> int: ...
    @property
    def DataRelativeVirtualAddress(self) -> int: ...
    @property
    def DataSize(self) -> int: ...
    @property
    def IsPortableCodeView(self) -> bool: ...
    @property
    def MajorVersion(self) -> System.UInt16: ...
    @property
    def MinorVersion(self) -> System.UInt16: ...
    @property
    def Stamp(self) -> System.UInt32: ...
    @property
    def Type(self) -> DebugDirectoryEntryType: ...

class DebugDirectoryEntryType(enum.Enum):
    Unknown = 0
    Coff = 1
    CodeView = 2
    Reproducible = 16
    EmbeddedPortablePdb = 17
    PdbChecksum = 19

class DirectoryEntry(System.ValueType):
    """    """
    def __init__(self, relativeVirtualAddress: int, size: int): ...
    @property
    def RelativeVirtualAddress(self) -> int: ...
    @property
    def Size(self) -> int: ...

class Machine(enum.Enum):
    Unknown = 0
    I386 = 332
    WceMipsV2 = 361
    Alpha = 388
    SH3 = 418
    SH3Dsp = 419
    SH3E = 420
    SH4 = 422
    SH5 = 424
    Arm = 448
    Thumb = 450
    ArmThumb2 = 452
    AM33 = 467
    PowerPC = 496
    PowerPCFP = 497
    IA64 = 512
    MIPS16 = 614
    Alpha64 = 644
    MipsFpu = 870
    MipsFpu16 = 1126
    Tricore = 1312
    Ebc = 3772
    LoongArch32 = 25138
    LoongArch64 = 25188
    Amd64 = 34404
    M32R = 36929
    Arm64 = 43620

class Characteristics(enum.Enum):
    RelocsStripped = 1
    ExecutableImage = 2
    LineNumsStripped = 4
    LocalSymsStripped = 8
    AggressiveWSTrim = 16
    LargeAddressAware = 32
    BytesReversedLo = 128
    Bit32Machine = 256
    DebugStripped = 512
    RemovableRunFromSwap = 1024
    NetRunFromSwap = 2048
    System = 4096
    Dll = 8192
    UpSystemOnly = 16384
    BytesReversedHi = 32768

class PEMagic(enum.Enum):
    PE32 = 267
    PE32Plus = 523

class Subsystem(enum.Enum):
    Unknown = 0
    Native = 1
    WindowsGui = 2
    WindowsCui = 3
    OS2Cui = 5
    PosixCui = 7
    NativeWindows = 8
    WindowsCEGui = 9
    EfiApplication = 10
    EfiBootServiceDriver = 11
    EfiRuntimeDriver = 12
    EfiRom = 13
    Xbox = 14
    WindowsBootApplication = 16

class DllCharacteristics(enum.Enum):
    ProcessInit = 1
    ProcessTerm = 2
    ThreadInit = 4
    ThreadTerm = 8
    HighEntropyVirtualAddressSpace = 32
    DynamicBase = 64
    NxCompatible = 256
    NoIsolation = 512
    NoSeh = 1024
    NoBind = 2048
    AppContainer = 4096
    WdmDriver = 8192
    TerminalServerAware = 32768

class SectionCharacteristics(enum.Enum):
    TypeReg = 0
    TypeDSect = 1
    TypeNoLoad = 2
    TypeGroup = 4
    TypeNoPad = 8
    TypeCopy = 16
    ContainsCode = 32
    ContainsInitializedData = 64
    ContainsUninitializedData = 128
    LinkerOther = 256
    LinkerInfo = 512
    TypeOver = 1024
    LinkerRemove = 2048
    LinkerComdat = 4096
    MemProtected = 16384
    NoDeferSpecExc = 16384
    GPRel = 32768
    MemFardata = 32768
    MemSysheap = 65536
    MemPurgeable = 131072
    Mem16Bit = 131072
    MemLocked = 262144
    MemPreload = 524288
    Align1Bytes = 1048576
    Align2Bytes = 2097152
    Align4Bytes = 3145728
    Align8Bytes = 4194304
    Align16Bytes = 5242880
    Align32Bytes = 6291456
    Align64Bytes = 7340032
    Align128Bytes = 8388608
    Align256Bytes = 9437184
    Align512Bytes = 10485760
    Align1024Bytes = 11534336
    Align2048Bytes = 12582912
    Align4096Bytes = 13631488
    Align8192Bytes = 14680064
    AlignMask = 15728640
    LinkerNRelocOvfl = 16777216
    MemDiscardable = 33554432
    MemNotCached = 67108864
    MemNotPaged = 134217728
    MemShared = 268435456
    MemExecute = 536870912
    MemRead = 1073741824
    MemWrite = 2147483648

class PEHeader(object):
    """    """
    @property
    def AddressOfEntryPoint(self) -> int: ...
    @property
    def BaseOfCode(self) -> int: ...
    @property
    def BaseOfData(self) -> int: ...
    @property
    def BaseRelocationTableDirectory(self) -> DirectoryEntry: ...
    @property
    def BoundImportTableDirectory(self) -> DirectoryEntry: ...
    @property
    def CertificateTableDirectory(self) -> DirectoryEntry: ...
    @property
    def CheckSum(self) -> System.UInt32: ...
    @property
    def CopyrightTableDirectory(self) -> DirectoryEntry: ...
    @property
    def CorHeaderTableDirectory(self) -> DirectoryEntry: ...
    @property
    def DebugTableDirectory(self) -> DirectoryEntry: ...
    @property
    def DelayImportTableDirectory(self) -> DirectoryEntry: ...
    @property
    def DllCharacteristics(self) -> DllCharacteristics: ...
    @property
    def ExceptionTableDirectory(self) -> DirectoryEntry: ...
    @property
    def ExportTableDirectory(self) -> DirectoryEntry: ...
    @property
    def FileAlignment(self) -> int: ...
    @property
    def GlobalPointerTableDirectory(self) -> DirectoryEntry: ...
    @property
    def ImageBase(self) -> System.UInt64: ...
    @property
    def ImportAddressTableDirectory(self) -> DirectoryEntry: ...
    @property
    def ImportTableDirectory(self) -> DirectoryEntry: ...
    @property
    def LoadConfigTableDirectory(self) -> DirectoryEntry: ...
    @property
    def Magic(self) -> PEMagic: ...
    @property
    def MajorImageVersion(self) -> System.UInt16: ...
    @property
    def MajorLinkerVersion(self) -> System.Byte: ...
    @property
    def MajorOperatingSystemVersion(self) -> System.UInt16: ...
    @property
    def MajorSubsystemVersion(self) -> System.UInt16: ...
    @property
    def MinorImageVersion(self) -> System.UInt16: ...
    @property
    def MinorLinkerVersion(self) -> System.Byte: ...
    @property
    def MinorOperatingSystemVersion(self) -> System.UInt16: ...
    @property
    def MinorSubsystemVersion(self) -> System.UInt16: ...
    @property
    def NumberOfRvaAndSizes(self) -> int: ...
    @property
    def ResourceTableDirectory(self) -> DirectoryEntry: ...
    @property
    def SectionAlignment(self) -> int: ...
    @property
    def SizeOfCode(self) -> int: ...
    @property
    def SizeOfHeaders(self) -> int: ...
    @property
    def SizeOfHeapCommit(self) -> System.UInt64: ...
    @property
    def SizeOfHeapReserve(self) -> System.UInt64: ...
    @property
    def SizeOfImage(self) -> int: ...
    @property
    def SizeOfInitializedData(self) -> int: ...
    @property
    def SizeOfStackCommit(self) -> System.UInt64: ...
    @property
    def SizeOfStackReserve(self) -> System.UInt64: ...
    @property
    def SizeOfUninitializedData(self) -> int: ...
    @property
    def Subsystem(self) -> Subsystem: ...
    @property
    def ThreadLocalStorageTableDirectory(self) -> DirectoryEntry: ...

class PEHeaders(object):
    """    """
    @overload
    def __init__(self, peStream: IO.Stream): ...
    @overload
    def __init__(self, peStream: IO.Stream, size: int): ...
    @overload
    def __init__(self, peStream: IO.Stream, size: int, isLoadedImage: bool): ...
    @property
    def CoffHeader(self) -> CoffHeader: ...
    @property
    def CoffHeaderStartOffset(self) -> int: ...
    @property
    def CorHeader(self) -> CorHeader: ...
    @property
    def CorHeaderStartOffset(self) -> int: ...
    @property
    def IsCoffOnly(self) -> bool: ...
    @property
    def IsConsoleApplication(self) -> bool: ...
    @property
    def IsDll(self) -> bool: ...
    @property
    def IsExe(self) -> bool: ...
    @property
    def MetadataSize(self) -> int: ...
    @property
    def MetadataStartOffset(self) -> int: ...
    @property
    def PEHeader(self) -> PEHeader: ...
    @property
    def PEHeaderStartOffset(self) -> int: ...
    @property
    def SectionHeaders(self) -> Immutable.ImmutableArray: ...
    @overload
    def GetContainingSectionIndex(self, relativeVirtualAddress: int) -> int: ...
    @overload
    def TryGetDirectoryOffset(self, directory: DirectoryEntry) -> (bool, int): ...

class PEMemoryBlock(System.ValueType):
    """    """
    @property
    def Length(self) -> int: ...
    @property
    def Pointer(self) -> System.Byte: ...
    @overload
    def GetContent() -> Immutable.ImmutableArray: ...
    @overload
    def GetContent(self, start: int, length: int) -> Immutable.ImmutableArray: ...
    @overload
    def GetReader() -> Metadata.BlobReader: ...
    @overload
    def GetReader(self, start: int, length: int) -> Metadata.BlobReader: ...

class PEReader(object):
    """    """
    @overload
    def __init__(self, peStream: IO.Stream): ...
    @overload
    def __init__(self, peImage: Immutable.ImmutableArray): ...
    @overload
    def __init__(self, peImage: System.Byte, size: int): ...
    @overload
    def __init__(self, peStream: IO.Stream, options: PEStreamOptions): ...
    @overload
    def __init__(self, peImage: System.Byte, size: int, isLoadedImage: bool): ...
    @overload
    def __init__(self, peStream: IO.Stream, options: PEStreamOptions, size: int): ...
    @overload
    def Dispose() -> None: ...
    @property
    def HasMetadata(self) -> bool: ...
    @property
    def IsEntireImageAvailable(self) -> bool: ...
    @property
    def IsLoadedImage(self) -> bool: ...
    @property
    def PEHeaders(self) -> PEHeaders: ...
    @overload
    def GetEntireImage() -> PEMemoryBlock: ...
    @overload
    def GetMetadata() -> PEMemoryBlock: ...
    @overload
    def GetSectionData(self, relativeVirtualAddress: int) -> PEMemoryBlock: ...
    @overload
    def GetSectionData(self, sectionName: str) -> PEMemoryBlock: ...
    @overload
    def ReadCodeViewDebugDirectoryData(self, entry: DebugDirectoryEntry) -> CodeViewDebugDirectoryData: ...
    @overload
    def ReadDebugDirectory() -> Immutable.ImmutableArray: ...
    @overload
    def ReadEmbeddedPortablePdbDebugDirectoryData(self, entry: DebugDirectoryEntry) -> Metadata.MetadataReaderProvider: ...
    @overload
    def ReadPdbChecksumDebugDirectoryData(self, entry: DebugDirectoryEntry) -> PdbChecksumDebugDirectoryData: ...
    @overload
    def TryOpenAssociatedPortablePdb(self, peImagePath: str, pdbFileStreamProvider: System.Func) -> (bool, Metadata.MetadataReaderProvider, str): ...

class PEStreamOptions(enum.Enum):
    Default = 0
    LeaveOpen = 1
    PrefetchMetadata = 2
    PrefetchEntireImage = 4
    IsLoadedImage = 8

class SectionHeader(System.ValueType):
    """    """
    @property
    def Name(self) -> str: ...
    @property
    def NumberOfLineNumbers(self) -> System.UInt16: ...
    @property
    def NumberOfRelocations(self) -> System.UInt16: ...
    @property
    def PointerToLineNumbers(self) -> int: ...
    @property
    def PointerToRawData(self) -> int: ...
    @property
    def PointerToRelocations(self) -> int: ...
    @property
    def SectionCharacteristics(self) -> SectionCharacteristics: ...
    @property
    def SizeOfRawData(self) -> int: ...
    @property
    def VirtualAddress(self) -> int: ...
    @property
    def VirtualSize(self) -> int: ...

# endregion
