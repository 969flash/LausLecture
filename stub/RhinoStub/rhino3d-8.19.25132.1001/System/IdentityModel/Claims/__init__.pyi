"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Claim", "ClaimSet", "ClaimTypes", "DefaultClaimSet", "Rights", "WindowsClaimSet", "X509CertificateClaimSet"]
# endregion

# region: Imports
from System.Collections import Generic
from System.Runtime import CompilerServices
from System.Security import Principal
from System.Security.Cryptography import X509Certificates
from typing import overload
import System
# endregion

# region: System.Private.ServiceModel, Version=4.9.0.0

class Claim(object):
    """    """
    def __init__(self, claimType: str, resource: object, right: str): ...
    @overload
    @staticmethod
    def CreateDnsClaim(dns: str) -> Claim: ...
    @overload
    @staticmethod
    def CreateHashClaim(hash_: System.System.Array[System.Byte]) -> Claim: ...
    @overload
    @staticmethod
    def CreateNameClaim(name: str) -> Claim: ...
    @overload
    @staticmethod
    def CreateSpnClaim(spn: str) -> Claim: ...
    @overload
    @staticmethod
    def CreateThumbprintClaim(thumbprint: System.System.Array[System.Byte]) -> Claim: ...
    @overload
    @staticmethod
    def CreateUpnClaim(upn: str) -> Claim: ...
    @overload
    @staticmethod
    def CreateUriClaim(uri: System.Uri) -> Claim: ...
    @overload
    @staticmethod
    def CreateWindowsSidClaim(sid: Principal.SecurityIdentifier) -> Claim: ...
    @overload
    @staticmethod
    def CreateX500DistinguishedNameClaim(x500DistinguishedName: X509Certificates.X500DistinguishedName) -> Claim: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def ClaimType(self) -> str: ...
    @property
    def DefaultComparer(self) -> Generic.IEqualityComparer: ...
    @property
    def Resource(self) -> object: ...
    @property
    def Right(self) -> str: ...
    @property
    def System(self) -> Claim: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def ToString() -> str: ...

class ClaimSet(object):
    """    """
    @overload
    def ContainsClaim(self, claim: Claim) -> bool: ...
    @overload
    def ContainsClaim(self, claim: Claim, comparer: Generic.IEqualityComparer) -> bool: ...
    @overload
    def FindClaims(self, claimType: str, right: str) -> Generic.IEnumerable: ...
    @property
    def Count(self) -> int: ...
    @property
    def Issuer(self) -> ClaimSet: ...
    @property
    def Item(self) -> Claim: ...
    @property
    def System(self) -> ClaimSet: ...
    @property
    def Windows(self) -> ClaimSet: ...
    @overload
    def GetEnumerator() -> Generic.IEnumerator: ...

class ClaimTypes(object):
    """    """
    @property
    def Anonymous(self) -> str: ...
    @property
    def Authentication(self) -> str: ...
    @property
    def AuthorizationDecision(self) -> str: ...
    @property
    def Country(self) -> str: ...
    @property
    def DateOfBirth(self) -> str: ...
    @property
    def DenyOnlySid(self) -> str: ...
    @property
    def Dns(self) -> str: ...
    @property
    def Email(self) -> str: ...
    @property
    def Gender(self) -> str: ...
    @property
    def GivenName(self) -> str: ...
    @property
    def Hash(self) -> str: ...
    @property
    def HomePhone(self) -> str: ...
    @property
    def Locality(self) -> str: ...
    @property
    def MobilePhone(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIdentifier(self) -> str: ...
    @property
    def OtherPhone(self) -> str: ...
    @property
    def PostalCode(self) -> str: ...
    @property
    def PPID(self) -> str: ...
    @property
    def Rsa(self) -> str: ...
    @property
    def Sid(self) -> str: ...
    @property
    def Spn(self) -> str: ...
    @property
    def StateOrProvince(self) -> str: ...
    @property
    def StreetAddress(self) -> str: ...
    @property
    def Surname(self) -> str: ...
    @property
    def System(self) -> str: ...
    @property
    def Thumbprint(self) -> str: ...
    @property
    def Upn(self) -> str: ...
    @property
    def Uri(self) -> str: ...
    @property
    def Webpage(self) -> str: ...
    @property
    def X500DistinguishedName(self) -> str: ...

class DefaultClaimSet(ClaimSet):
    """    """
    @overload
    def __init__(self, claims: System.Array[Claim]): ...
    @overload
    def __init__(self, claims: Generic.IList): ...
    @overload
    def __init__(self, issuer: ClaimSet, claims: System.Array[Claim]): ...
    @overload
    def __init__(self, issuer: ClaimSet, claims: Generic.IList): ...
    @overload
    def ContainsClaim(self, claim: Claim) -> bool: ...
    @overload
    def FindClaims(self, claimType: str, right: str) -> Generic.IEnumerable: ...
    @property
    def Count(self) -> int: ...
    @property
    def Issuer(self) -> ClaimSet: ...
    @property
    def Item(self) -> Claim: ...
    @overload
    def GetEnumerator() -> Generic.IEnumerator: ...
    @overload
    def ToString() -> str: ...

class Rights(object):
    """    """
    @property
    def Identity(self) -> str: ...
    @property
    def PossessProperty(self) -> str: ...

class WindowsClaimSet(ClaimSet):
    """    """
    @overload
    def __init__(self, windowsIdentity: Principal.WindowsIdentity): ...
    @overload
    def __init__(self, windowsIdentity: Principal.WindowsIdentity, includeWindowsGroups: bool): ...
    @overload
    def __init__(self, windowsIdentity: Principal.WindowsIdentity, expirationTime: System.DateTime): ...
    @overload
    def __init__(self, windowsIdentity: Principal.WindowsIdentity, includeWindowsGroups: bool, expirationTime: System.DateTime): ...
    @overload
    def __init__(self, windowsIdentity: Principal.WindowsIdentity, authenticationType: str, includeWindowsGroups: bool, expirationTime: System.DateTime): ...
    @overload
    def Dispose() -> None: ...
    @overload
    def FindClaims(self, claimType: str, right: str) -> Generic.IEnumerable: ...
    @property
    def Count(self) -> int: ...
    @property
    def ExpirationTime(self) -> System.DateTime: ...
    @property
    def Issuer(self) -> ClaimSet: ...
    @property
    def Item(self) -> Claim: ...
    @property
    def WindowsIdentity(self) -> Principal.WindowsIdentity: ...
    @overload
    def GetEnumerator() -> Generic.IEnumerator: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def TryCreateWindowsSidClaim(windowsIdentity: Principal.WindowsIdentity) -> (bool, Claim): ...

class X509CertificateClaimSet(ClaimSet):
    """    """
    def __init__(self, certificate: X509Certificates.X509Certificate2): ...
    @overload
    def Dispose() -> None: ...
    @overload
    def FindClaims(self, claimType: str, right: str) -> Generic.IEnumerable: ...
    @property
    def Count(self) -> int: ...
    @property
    def ExpirationTime(self) -> System.DateTime: ...
    @property
    def Issuer(self) -> ClaimSet: ...
    @property
    def Item(self) -> Claim: ...
    @property
    def X509Certificate(self) -> X509Certificates.X509Certificate2: ...
    @overload
    def GetEnumerator() -> Generic.IEnumerator: ...
    @overload
    def ToString() -> str: ...

# endregion
