"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["SqlChars", "SqlDateTime", "SqlDecimal", "SqlDouble", "SqlGuid", "SqlInt16", "SqlInt32", "SqlInt64", "SqlMoney", "SqlSingle", "SqlCompareOptions", "SqlString", "StorageState", "SqlTypeException", "SqlNullValueException", "SqlTruncateException", "SqlNotFilledException", "SqlAlreadyFilledException", "SqlXml", "INullable", "SqlBinary", "SqlBoolean", "SqlByte", "SqlBytes"]
# endregion

# region: Imports
from System import Globalization
from System import IO
from System import Xml
from System.Runtime import CompilerServices
from System.Xml import Schema
from typing import overload
import enum
import System
# endregion

# region: System.Data.Common, Version=7.0.0.0

class SqlChars(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, buffer: System.System.Array[System.Char]): ...
    @overload
    def __init__(self, value: SqlString): ...
    @property
    def Buffer(self) -> System.System.Array[System.Char]: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Item(self) -> System.Char: ...
    @property
    def Length(self) -> System.Int64: ...
    @property
    def MaxLength(self) -> System.Int64: ...
    @property
    def Null(self) -> SqlChars: ...
    @property
    def Storage(self) -> StorageState: ...
    @property
    def Value(self) -> System.System.Array[System.Char]: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    def Read(self, offset: System.Int64, buffer: System.System.Array[System.Char], offsetInBuffer: int, count: int) -> System.Int64: ...
    @Item.setter
    def Item(self, value: System.Void): ...
    @overload
    def SetLength(self, value: System.Int64) -> None: ...
    @overload
    def SetNull() -> None: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def Write(self, offset: System.Int64, buffer: System.System.Array[System.Char], offsetInBuffer: int, count: int) -> None: ...

class SqlDateTime(System.ValueType):
    """    """
    @overload
    def __init__(self, value: System.DateTime): ...
    @overload
    def __init__(self, dayTicks: int, timeTicks: int): ...
    @overload
    def __init__(self, year: int, month: int, day: int): ...
    @overload
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int): ...
    @overload
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, millisecond: float): ...
    @overload
    def __init__(self, year: int, month: int, day: int, hour: int, minute: int, second: int, bilisecond: int): ...
    @property
    def SQLTicksPerSecond(self) -> int: ...
    @property
    def SQLTicksPerMinute(self) -> int: ...
    @property
    def SQLTicksPerHour(self) -> int: ...
    @property
    def MinValue(self) -> SqlDateTime: ...
    @property
    def MaxValue(self) -> SqlDateTime: ...
    @property
    def Null(self) -> SqlDateTime: ...
    @overload
    @staticmethod
    def Add(x: SqlDateTime, t: System.TimeSpan) -> SqlDateTime: ...
    @overload
    def CompareTo(self, value: SqlDateTime) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    def Equals(self, other: SqlDateTime) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlDateTime, y: SqlDateTime) -> SqlBoolean: ...
    @property
    def DayTicks(self) -> int: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def TimeTicks(self) -> int: ...
    @property
    def Value(self) -> System.DateTime: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlDateTime, y: SqlDateTime) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlDateTime, y: SqlDateTime) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlDateTime, y: SqlDateTime) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlDateTime, y: SqlDateTime) -> SqlBoolean: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlDateTime, y: SqlDateTime) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlDateTime: ...
    @overload
    @staticmethod
    def Subtract(x: SqlDateTime, t: System.TimeSpan) -> SqlDateTime: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...

class SqlDecimal(System.ValueType):
    """    """
    @overload
    def __init__(self, value: System.Decimal): ...
    @overload
    def __init__(self, value: int): ...
    @overload
    def __init__(self, value: System.Int64): ...
    @overload
    def __init__(self, dVal: float): ...
    @overload
    def __init__(self, bPrecision: System.Byte, bScale: System.Byte, fPositive: bool, bits: System.System.Array[int]): ...
    @overload
    def __init__(self, bPrecision: System.Byte, bScale: System.Byte, fPositive: bool, data1: int, data2: int, data3: int, data4: int): ...
    @property
    def MaxPrecision(self) -> System.Byte: ...
    @property
    def MaxScale(self) -> System.Byte: ...
    @property
    def Null(self) -> SqlDecimal: ...
    @property
    def MinValue(self) -> SqlDecimal: ...
    @property
    def MaxValue(self) -> SqlDecimal: ...
    @overload
    @staticmethod
    def Abs(n: SqlDecimal) -> SqlDecimal: ...
    @overload
    @staticmethod
    def Add(x: SqlDecimal, y: SqlDecimal) -> SqlDecimal: ...
    @overload
    @staticmethod
    def AdjustScale(n: SqlDecimal, digits: int, fRound: bool) -> SqlDecimal: ...
    @overload
    @staticmethod
    def Ceiling(n: SqlDecimal) -> SqlDecimal: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    def CompareTo(self, value: SqlDecimal) -> int: ...
    @overload
    @staticmethod
    def ConvertToPrecScale(n: SqlDecimal, precision: int, scale: int) -> SqlDecimal: ...
    @overload
    @staticmethod
    def Divide(x: SqlDecimal, y: SqlDecimal) -> SqlDecimal: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    def Equals(self, other: SqlDecimal) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlDecimal, y: SqlDecimal) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Floor(n: SqlDecimal) -> SqlDecimal: ...
    @property
    def BinData(self) -> System.System.Array[System.Byte]: ...
    @property
    def Data(self) -> System.System.Array[int]: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def IsPositive(self) -> bool: ...
    @property
    def Precision(self) -> System.Byte: ...
    @property
    def Scale(self) -> System.Byte: ...
    @property
    def Value(self) -> System.Decimal: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlDecimal, y: SqlDecimal) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlDecimal, y: SqlDecimal) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlDecimal, y: SqlDecimal) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlDecimal, y: SqlDecimal) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Multiply(x: SqlDecimal, y: SqlDecimal) -> SqlDecimal: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlDecimal, y: SqlDecimal) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlDecimal: ...
    @overload
    @staticmethod
    def Power(n: SqlDecimal, exp: float) -> SqlDecimal: ...
    @overload
    @staticmethod
    def Round(n: SqlDecimal, position: int) -> SqlDecimal: ...
    @overload
    @staticmethod
    def Sign(n: SqlDecimal) -> SqlInt32: ...
    @overload
    @staticmethod
    def Subtract(x: SqlDecimal, y: SqlDecimal) -> SqlDecimal: ...
    @overload
    def ToDouble() -> float: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def Truncate(n: SqlDecimal, position: int) -> SqlDecimal: ...
    @overload
    def WriteTdsValue(self, destination: System.Span) -> int: ...

class SqlDouble(System.ValueType):
    """    """
    def __init__(self, value: float): ...
    @property
    def Null(self) -> SqlDouble: ...
    @property
    def Zero(self) -> SqlDouble: ...
    @property
    def MinValue(self) -> SqlDouble: ...
    @property
    def MaxValue(self) -> SqlDouble: ...
    @overload
    @staticmethod
    def Add(x: SqlDouble, y: SqlDouble) -> SqlDouble: ...
    @overload
    def CompareTo(self, value: SqlDouble) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    @staticmethod
    def Divide(x: SqlDouble, y: SqlDouble) -> SqlDouble: ...
    @overload
    def Equals(self, other: SqlDouble) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlDouble, y: SqlDouble) -> SqlBoolean: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Value(self) -> float: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlDouble, y: SqlDouble) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlDouble, y: SqlDouble) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlDouble, y: SqlDouble) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlDouble, y: SqlDouble) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Multiply(x: SqlDouble, y: SqlDouble) -> SqlDouble: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlDouble, y: SqlDouble) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlDouble: ...
    @overload
    @staticmethod
    def Subtract(x: SqlDouble, y: SqlDouble) -> SqlDouble: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...

class SqlGuid(System.ValueType):
    """    """
    @overload
    def __init__(self, value: System.System.Array[System.Byte]): ...
    @overload
    def __init__(self, s: str): ...
    @overload
    def __init__(self, g: System.Guid): ...
    @overload
    def __init__(self, a: int, b: System.Int16, c: System.Int16, d: System.Byte, e: System.Byte, f: System.Byte, g: System.Byte, h: System.Byte, i: System.Byte, j: System.Byte, k: System.Byte): ...
    @property
    def Null(self) -> SqlGuid: ...
    @overload
    def CompareTo(self, value: SqlGuid) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    def Equals(self, other: SqlGuid) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlGuid, y: SqlGuid) -> SqlBoolean: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Value(self) -> System.Guid: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlGuid, y: SqlGuid) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlGuid, y: SqlGuid) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlGuid, y: SqlGuid) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlGuid, y: SqlGuid) -> SqlBoolean: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlGuid, y: SqlGuid) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlGuid: ...
    @overload
    def ToByteArray() -> System.System.Array[System.Byte]: ...
    @overload
    def ToSqlBinary() -> SqlBinary: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...

class SqlInt16(System.ValueType):
    """    """
    def __init__(self, value: System.Int16): ...
    @property
    def Null(self) -> SqlInt16: ...
    @property
    def Zero(self) -> SqlInt16: ...
    @property
    def MinValue(self) -> SqlInt16: ...
    @property
    def MaxValue(self) -> SqlInt16: ...
    @overload
    @staticmethod
    def Add(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...
    @overload
    @staticmethod
    def BitwiseAnd(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...
    @overload
    @staticmethod
    def BitwiseOr(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...
    @overload
    def CompareTo(self, value: SqlInt16) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    @staticmethod
    def Divide(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...
    @overload
    def Equals(self, other: SqlInt16) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlInt16, y: SqlInt16) -> SqlBoolean: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Value(self) -> System.Int16: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlInt16, y: SqlInt16) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlInt16, y: SqlInt16) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlInt16, y: SqlInt16) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlInt16, y: SqlInt16) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Mod(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...
    @overload
    @staticmethod
    def Modulus(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...
    @overload
    @staticmethod
    def Multiply(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlInt16, y: SqlInt16) -> SqlBoolean: ...
    @overload
    @staticmethod
    def OnesComplement(x: SqlInt16) -> SqlInt16: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlInt16: ...
    @overload
    @staticmethod
    def Subtract(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def Xor(x: SqlInt16, y: SqlInt16) -> SqlInt16: ...

class SqlInt32(System.ValueType):
    """    """
    def __init__(self, value: int): ...
    @property
    def Null(self) -> SqlInt32: ...
    @property
    def Zero(self) -> SqlInt32: ...
    @property
    def MinValue(self) -> SqlInt32: ...
    @property
    def MaxValue(self) -> SqlInt32: ...
    @overload
    @staticmethod
    def Add(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...
    @overload
    @staticmethod
    def BitwiseAnd(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...
    @overload
    @staticmethod
    def BitwiseOr(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...
    @overload
    def CompareTo(self, value: SqlInt32) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    @staticmethod
    def Divide(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...
    @overload
    def Equals(self, other: SqlInt32) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlInt32, y: SqlInt32) -> SqlBoolean: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Value(self) -> int: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlInt32, y: SqlInt32) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlInt32, y: SqlInt32) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlInt32, y: SqlInt32) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlInt32, y: SqlInt32) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Mod(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...
    @overload
    @staticmethod
    def Modulus(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...
    @overload
    @staticmethod
    def Multiply(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlInt32, y: SqlInt32) -> SqlBoolean: ...
    @overload
    @staticmethod
    def OnesComplement(x: SqlInt32) -> SqlInt32: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlInt32: ...
    @overload
    @staticmethod
    def Subtract(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def Xor(x: SqlInt32, y: SqlInt32) -> SqlInt32: ...

class SqlInt64(System.ValueType):
    """    """
    def __init__(self, value: System.Int64): ...
    @property
    def Null(self) -> SqlInt64: ...
    @property
    def Zero(self) -> SqlInt64: ...
    @property
    def MinValue(self) -> SqlInt64: ...
    @property
    def MaxValue(self) -> SqlInt64: ...
    @overload
    @staticmethod
    def Add(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...
    @overload
    @staticmethod
    def BitwiseAnd(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...
    @overload
    @staticmethod
    def BitwiseOr(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...
    @overload
    def CompareTo(self, value: SqlInt64) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    @staticmethod
    def Divide(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...
    @overload
    def Equals(self, other: SqlInt64) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlInt64, y: SqlInt64) -> SqlBoolean: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Value(self) -> System.Int64: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlInt64, y: SqlInt64) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlInt64, y: SqlInt64) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlInt64, y: SqlInt64) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlInt64, y: SqlInt64) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Mod(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...
    @overload
    @staticmethod
    def Modulus(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...
    @overload
    @staticmethod
    def Multiply(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlInt64, y: SqlInt64) -> SqlBoolean: ...
    @overload
    @staticmethod
    def OnesComplement(x: SqlInt64) -> SqlInt64: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlInt64: ...
    @overload
    @staticmethod
    def Subtract(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def Xor(x: SqlInt64, y: SqlInt64) -> SqlInt64: ...

class SqlMoney(System.ValueType):
    """    """
    @overload
    def __init__(self, value: int): ...
    @overload
    def __init__(self, value: System.Int64): ...
    @overload
    def __init__(self, value: System.Decimal): ...
    @overload
    def __init__(self, value: float): ...
    @property
    def Null(self) -> SqlMoney: ...
    @property
    def Zero(self) -> SqlMoney: ...
    @property
    def MinValue(self) -> SqlMoney: ...
    @property
    def MaxValue(self) -> SqlMoney: ...
    @overload
    @staticmethod
    def Add(x: SqlMoney, y: SqlMoney) -> SqlMoney: ...
    @overload
    def CompareTo(self, value: SqlMoney) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    @staticmethod
    def Divide(x: SqlMoney, y: SqlMoney) -> SqlMoney: ...
    @overload
    def Equals(self, other: SqlMoney) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlMoney, y: SqlMoney) -> SqlBoolean: ...
    @overload
    @staticmethod
    def FromTdsValue(value: System.Int64) -> SqlMoney: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Value(self) -> System.Decimal: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def GetTdsValue() -> System.Int64: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlMoney, y: SqlMoney) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlMoney, y: SqlMoney) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlMoney, y: SqlMoney) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlMoney, y: SqlMoney) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Multiply(x: SqlMoney, y: SqlMoney) -> SqlMoney: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlMoney, y: SqlMoney) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlMoney: ...
    @overload
    @staticmethod
    def Subtract(x: SqlMoney, y: SqlMoney) -> SqlMoney: ...
    @overload
    def ToDecimal() -> System.Decimal: ...
    @overload
    def ToDouble() -> float: ...
    @overload
    def ToInt32() -> int: ...
    @overload
    def ToInt64() -> System.Int64: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...

class SqlSingle(System.ValueType):
    """    """
    @overload
    def __init__(self, value: System.Single): ...
    @overload
    def __init__(self, value: float): ...
    @property
    def Null(self) -> SqlSingle: ...
    @property
    def Zero(self) -> SqlSingle: ...
    @property
    def MinValue(self) -> SqlSingle: ...
    @property
    def MaxValue(self) -> SqlSingle: ...
    @overload
    @staticmethod
    def Add(x: SqlSingle, y: SqlSingle) -> SqlSingle: ...
    @overload
    def CompareTo(self, value: SqlSingle) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    @staticmethod
    def Divide(x: SqlSingle, y: SqlSingle) -> SqlSingle: ...
    @overload
    def Equals(self, other: SqlSingle) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlSingle, y: SqlSingle) -> SqlBoolean: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Value(self) -> System.Single: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlSingle, y: SqlSingle) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlSingle, y: SqlSingle) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlSingle, y: SqlSingle) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlSingle, y: SqlSingle) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Multiply(x: SqlSingle, y: SqlSingle) -> SqlSingle: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlSingle, y: SqlSingle) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlSingle: ...
    @overload
    @staticmethod
    def Subtract(x: SqlSingle, y: SqlSingle) -> SqlSingle: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...

class SqlCompareOptions(enum.Enum):
    None_ = 0
    IgnoreCase = 1
    IgnoreNonSpace = 2
    IgnoreKanaType = 8
    IgnoreWidth = 16
    BinarySort2 = 16384
    BinarySort = 32768

class SqlString(System.ValueType):
    """    """
    @overload
    def __init__(self, data: str): ...
    @overload
    def __init__(self, data: str, lcid: int): ...
    @overload
    def __init__(self, lcid: int, compareOptions: SqlCompareOptions, data: System.System.Array[System.Byte]): ...
    @overload
    def __init__(self, data: str, lcid: int, compareOptions: SqlCompareOptions): ...
    @overload
    def __init__(self, lcid: int, compareOptions: SqlCompareOptions, data: System.System.Array[System.Byte], fUnicode: bool): ...
    @overload
    def __init__(self, lcid: int, compareOptions: SqlCompareOptions, data: System.System.Array[System.Byte], index: int, count: int): ...
    @overload
    def __init__(self, lcid: int, compareOptions: SqlCompareOptions, data: System.System.Array[System.Byte], index: int, count: int, fUnicode: bool): ...
    @property
    def Null(self) -> SqlString: ...
    @property
    def IgnoreCase(self) -> int: ...
    @property
    def IgnoreWidth(self) -> int: ...
    @property
    def IgnoreNonSpace(self) -> int: ...
    @property
    def IgnoreKanaType(self) -> int: ...
    @property
    def BinarySort(self) -> int: ...
    @property
    def BinarySort2(self) -> int: ...
    @overload
    @staticmethod
    def Add(x: SqlString, y: SqlString) -> SqlString: ...
    @overload
    def Clone() -> SqlString: ...
    @overload
    @staticmethod
    def CompareOptionsFromSqlCompareOptions(compareOptions: SqlCompareOptions) -> Globalization.CompareOptions: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    def CompareTo(self, value: SqlString) -> int: ...
    @overload
    @staticmethod
    def Concat(x: SqlString, y: SqlString) -> SqlString: ...
    @overload
    def Equals(self, other: SqlString) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlString, y: SqlString) -> SqlBoolean: ...
    @property
    def CompareInfo(self) -> Globalization.CompareInfo: ...
    @property
    def CultureInfo(self) -> Globalization.CultureInfo: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def LCID(self) -> int: ...
    @property
    def SqlCompareOptions(self) -> SqlCompareOptions: ...
    @property
    def Value(self) -> str: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def GetNonUnicodeBytes() -> System.System.Array[System.Byte]: ...
    @overload
    def GetUnicodeBytes() -> System.System.Array[System.Byte]: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlString, y: SqlString) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlString, y: SqlString) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlString, y: SqlString) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlString, y: SqlString) -> SqlBoolean: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlString, y: SqlString) -> SqlBoolean: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDateTime() -> SqlDateTime: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlGuid() -> SqlGuid: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToString() -> str: ...

class StorageState(enum.Enum):
    Buffer = 0
    Stream = 1
    UnmanagedBuffer = 2

class SqlTypeException(System.SystemException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, e: System.Exception): ...

class SqlNullValueException(SqlTypeException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, e: System.Exception): ...

class SqlTruncateException(SqlTypeException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, e: System.Exception): ...

class SqlNotFilledException(SqlTypeException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, e: System.Exception): ...

class SqlAlreadyFilledException(SqlTypeException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, e: System.Exception): ...

class SqlXml(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, value: Xml.XmlReader): ...
    @overload
    def __init__(self, value: IO.Stream): ...
    @overload
    def CreateReader() -> Xml.XmlReader: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Null(self) -> SqlXml: ...
    @property
    def Value(self) -> str: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...

class INullable:
    """    """
    @property
    def IsNull(self) -> bool: ...

class SqlBinary(System.ValueType):
    """    """
    def __init__(self, value: System.System.Array[System.Byte]): ...
    @property
    def Null(self) -> SqlBinary: ...
    @overload
    @staticmethod
    def Add(x: SqlBinary, y: SqlBinary) -> SqlBinary: ...
    @overload
    def CompareTo(self, value: SqlBinary) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    @staticmethod
    def Concat(x: SqlBinary, y: SqlBinary) -> SqlBinary: ...
    @overload
    def Equals(self, other: SqlBinary) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlBinary, y: SqlBinary) -> SqlBoolean: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Item(self) -> System.Byte: ...
    @property
    def Length(self) -> int: ...
    @property
    def Value(self) -> System.System.Array[System.Byte]: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlBinary, y: SqlBinary) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlBinary, y: SqlBinary) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlBinary, y: SqlBinary) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlBinary, y: SqlBinary) -> SqlBoolean: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlBinary, y: SqlBinary) -> SqlBoolean: ...
    @overload
    def ToSqlGuid() -> SqlGuid: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def WrapBytes(bytes_: System.System.Array[System.Byte]) -> SqlBinary: ...

class SqlBoolean(System.ValueType):
    """    """
    @overload
    def __init__(self, value: bool): ...
    @overload
    def __init__(self, value: int): ...
    @property
    def True_(self) -> SqlBoolean: ...
    @property
    def False_(self) -> SqlBoolean: ...
    @property
    def Null(self) -> SqlBoolean: ...
    @property
    def Zero(self) -> SqlBoolean: ...
    @property
    def One(self) -> SqlBoolean: ...
    @overload
    @staticmethod
    def And(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...
    @overload
    def CompareTo(self, value: SqlBoolean) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    def Equals(self, other: SqlBoolean) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...
    @property
    def ByteValue(self) -> System.Byte: ...
    @property
    def IsFalse(self) -> bool: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def IsTrue(self) -> bool: ...
    @property
    def Value(self) -> bool: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEquals(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEquals(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...
    @overload
    @staticmethod
    def OnesComplement(x: SqlBoolean) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Or(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlBoolean: ...
    @overload
    def ToSqlByte() -> SqlByte: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def Xor(x: SqlBoolean, y: SqlBoolean) -> SqlBoolean: ...

class SqlByte(System.ValueType):
    """    """
    def __init__(self, value: System.Byte): ...
    @property
    def Null(self) -> SqlByte: ...
    @property
    def Zero(self) -> SqlByte: ...
    @property
    def MinValue(self) -> SqlByte: ...
    @property
    def MaxValue(self) -> SqlByte: ...
    @overload
    @staticmethod
    def Add(x: SqlByte, y: SqlByte) -> SqlByte: ...
    @overload
    @staticmethod
    def BitwiseAnd(x: SqlByte, y: SqlByte) -> SqlByte: ...
    @overload
    @staticmethod
    def BitwiseOr(x: SqlByte, y: SqlByte) -> SqlByte: ...
    @overload
    def CompareTo(self, value: SqlByte) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @overload
    @staticmethod
    def Divide(x: SqlByte, y: SqlByte) -> SqlByte: ...
    @overload
    def Equals(self, other: SqlByte) -> bool: ...
    @overload
    def Equals(self, value: object) -> bool: ...
    @overload
    @staticmethod
    def Equals(x: SqlByte, y: SqlByte) -> SqlBoolean: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Value(self) -> System.Byte: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GreaterThan(x: SqlByte, y: SqlByte) -> SqlBoolean: ...
    @overload
    @staticmethod
    def GreaterThanOrEqual(x: SqlByte, y: SqlByte) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThan(x: SqlByte, y: SqlByte) -> SqlBoolean: ...
    @overload
    @staticmethod
    def LessThanOrEqual(x: SqlByte, y: SqlByte) -> SqlBoolean: ...
    @overload
    @staticmethod
    def Mod(x: SqlByte, y: SqlByte) -> SqlByte: ...
    @overload
    @staticmethod
    def Modulus(x: SqlByte, y: SqlByte) -> SqlByte: ...
    @overload
    @staticmethod
    def Multiply(x: SqlByte, y: SqlByte) -> SqlByte: ...
    @overload
    @staticmethod
    def NotEquals(x: SqlByte, y: SqlByte) -> SqlBoolean: ...
    @overload
    @staticmethod
    def OnesComplement(x: SqlByte) -> SqlByte: ...
    @overload
    @staticmethod
    def Parse(s: str) -> SqlByte: ...
    @overload
    @staticmethod
    def Subtract(x: SqlByte, y: SqlByte) -> SqlByte: ...
    @overload
    def ToSqlBoolean() -> SqlBoolean: ...
    @overload
    def ToSqlDecimal() -> SqlDecimal: ...
    @overload
    def ToSqlDouble() -> SqlDouble: ...
    @overload
    def ToSqlInt16() -> SqlInt16: ...
    @overload
    def ToSqlInt32() -> SqlInt32: ...
    @overload
    def ToSqlInt64() -> SqlInt64: ...
    @overload
    def ToSqlMoney() -> SqlMoney: ...
    @overload
    def ToSqlSingle() -> SqlSingle: ...
    @overload
    def ToSqlString() -> SqlString: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def Xor(x: SqlByte, y: SqlByte) -> SqlByte: ...

class SqlBytes(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, buffer: System.System.Array[System.Byte]): ...
    @overload
    def __init__(self, value: SqlBinary): ...
    @overload
    def __init__(self, s: IO.Stream): ...
    @property
    def Buffer(self) -> System.System.Array[System.Byte]: ...
    @property
    def IsNull(self) -> bool: ...
    @property
    def Item(self) -> System.Byte: ...
    @property
    def Length(self) -> System.Int64: ...
    @property
    def MaxLength(self) -> System.Int64: ...
    @property
    def Null(self) -> SqlBytes: ...
    @property
    def Storage(self) -> StorageState: ...
    @property
    def Stream(self) -> IO.Stream: ...
    @property
    def Value(self) -> System.System.Array[System.Byte]: ...
    @overload
    @staticmethod
    def GetXsdType(schemaSet: Schema.XmlSchemaSet) -> Xml.XmlQualifiedName: ...
    @overload
    def Read(self, offset: System.Int64, buffer: System.System.Array[System.Byte], offsetInBuffer: int, count: int) -> System.Int64: ...
    @Item.setter
    def Item(self, value: System.Void): ...
    @Stream.setter
    def Stream(self, value: System.Void): ...
    @overload
    def SetLength(self, value: System.Int64) -> None: ...
    @overload
    def SetNull() -> None: ...
    @overload
    def ToSqlBinary() -> SqlBinary: ...
    @overload
    def Write(self, offset: System.Int64, buffer: System.System.Array[System.Byte], offsetInBuffer: int, count: int) -> None: ...

# endregion
