"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["ArrangedElementCollection", "LayoutEngine", "TableLayoutSettingsTypeConverter"]
# endregion

# region: Imports
from System import Collections
from System import ComponentModel
from System import Globalization
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import System
# endregion

# region: System.Windows.Forms, Version=7.0.0.0

class ArrangedElementCollection(object):
    """    """
    @overload
    def CopyTo(self, array: System.Array, index: int) -> None: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Count(self) -> int: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @overload
    def GetEnumerator() -> Collections.IEnumerator: ...
    @overload
    def GetHashCode() -> int: ...

class LayoutEngine(object):
    """    """
    @overload
    def InitLayout(self, child: object, specified: Forms.BoundsSpecified) -> None: ...
    @overload
    def Layout(self, container: object, layoutEventArgs: Forms.LayoutEventArgs) -> bool: ...

class TableLayoutSettingsTypeConverter(ComponentModel.TypeConverter):
    """    """
    def __init__(self): ...
    @overload
    def CanConvertFrom(self, context: ComponentModel.ITypeDescriptorContext, sourceType: System.Type) -> bool: ...
    @overload
    def CanConvertTo(self, context: ComponentModel.ITypeDescriptorContext, destinationType: System.Type) -> bool: ...
    @overload
    def ConvertFrom(self, context: ComponentModel.ITypeDescriptorContext, culture: Globalization.CultureInfo, value: object) -> object: ...
    @overload
    def ConvertTo(self, context: ComponentModel.ITypeDescriptorContext, culture: Globalization.CultureInfo, value: object, destinationType: System.Type) -> object: ...

# endregion
