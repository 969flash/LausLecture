"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Metafile", "ColorAdjustType", "ColorChannelFlag", "ColorMap", "ColorMapType", "ColorMatrixFlag", "ColorMode", "EmfPlusRecordType", "EmfType", "Encoder", "EncoderParameterValueType", "EncoderValue", "FrameDimension", "ImageCodecFlags", "ImageFlags", "ImageFormat", "ImageLockMode", "MetafileType", "PaletteFlags", "PixelFormat", "PlayRecordCallback", "PropertyItem", "WmfPlaceableFileHeader", "BitmapData", "ColorMatrix", "ColorPalette", "EncoderParameter", "EncoderParameters", "ImageAttributes", "ImageCodecInfo", "MetafileFrameUnit", "MetafileHeader", "MetaHeader"]
# endregion

# region: Imports
from System import Drawing
from System import IO
from System.Drawing import Drawing2D
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: System.Drawing.Common, Version=7.0.0.0

class Metafile(Drawing.Image):
    """    """
    @overload
    def __init__(self, filename: str): ...
    @overload
    def __init__(self, stream: IO.Stream): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr): ...
    @overload
    def __init__(self, hmetafile: System.IntPtr, wmfHeader: WmfPlaceableFileHeader): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle): ...
    @overload
    def __init__(self, henhmetafile: System.IntPtr, deleteEmf: bool): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, emfType: EmfType): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, type_: EmfType): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, emfType: EmfType, description: str): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, type_: EmfType): ...
    @overload
    def __init__(self, hmetafile: System.IntPtr, wmfHeader: WmfPlaceableFileHeader, deleteWmf: bool): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, type_: EmfType, description: str): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, type_: EmfType, description: str): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit, type_: EmfType): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit, type_: EmfType): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit, type_: EmfType): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit, type_: EmfType): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit, desc: str): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit, type_: EmfType): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit, type_: EmfType): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit, type_: EmfType, desc: str): ...
    @overload
    def __init__(self, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit, type_: EmfType, description: str): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit, description: str): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit, type_: EmfType, description: str): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.RectangleF, frameUnit: MetafileFrameUnit, type_: EmfType, description: str): ...
    @overload
    def __init__(self, fileName: str, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit, type_: EmfType, description: str): ...
    @overload
    def __init__(self, stream: IO.Stream, referenceHdc: System.IntPtr, frameRect: Drawing.Rectangle, frameUnit: MetafileFrameUnit, type_: EmfType, description: str): ...
    @overload
    def GetHenhmetafile() -> System.IntPtr: ...
    @overload
    def GetMetafileHeader() -> MetafileHeader: ...
    @overload
    @staticmethod
    def GetMetafileHeader(fileName: str) -> MetafileHeader: ...
    @overload
    @staticmethod
    def GetMetafileHeader(henhmetafile: System.IntPtr) -> MetafileHeader: ...
    @overload
    @staticmethod
    def GetMetafileHeader(stream: IO.Stream) -> MetafileHeader: ...
    @overload
    @staticmethod
    def GetMetafileHeader(hmetafile: System.IntPtr, wmfHeader: WmfPlaceableFileHeader) -> MetafileHeader: ...
    @overload
    def PlayRecord(self, recordType: EmfPlusRecordType, flags: int, dataSize: int, data: System.System.Array[System.Byte]) -> None: ...

class ColorAdjustType(enum.Enum):
    Default = 0
    Bitmap = 1
    Brush = 2
    Pen = 3
    Text = 4
    Count = 5
    Any = 6

class ColorChannelFlag(enum.Enum):
    ColorChannelC = 0
    ColorChannelM = 1
    ColorChannelY = 2
    ColorChannelK = 3
    ColorChannelLast = 4

class ColorMap(object):
    """    """
    def __init__(self): ...
    @property
    def NewColor(self) -> Drawing.Color: ...
    @property
    def OldColor(self) -> Drawing.Color: ...
    @NewColor.setter
    def NewColor(self, value: System.Void): ...
    @OldColor.setter
    def OldColor(self, value: System.Void): ...

class ColorMapType(enum.Enum):
    Default = 0
    Brush = 1

class ColorMatrixFlag(enum.Enum):
    Default = 0
    SkipGrays = 1
    AltGrays = 2

class ColorMode(enum.Enum):
    Argb32Mode = 0
    Argb64Mode = 1

class EmfPlusRecordType(enum.Enum):
    EmfMin = 1
    EmfHeader = 1
    EmfPolyBezier = 2
    EmfPolygon = 3
    EmfPolyline = 4
    EmfPolyBezierTo = 5
    EmfPolyLineTo = 6
    EmfPolyPolyline = 7
    EmfPolyPolygon = 8
    EmfSetWindowExtEx = 9
    EmfSetWindowOrgEx = 10
    EmfSetViewportExtEx = 11
    EmfSetViewportOrgEx = 12
    EmfSetBrushOrgEx = 13
    EmfEof = 14
    EmfSetPixelV = 15
    EmfSetMapperFlags = 16
    EmfSetMapMode = 17
    EmfSetBkMode = 18
    EmfSetPolyFillMode = 19
    EmfSetROP2 = 20
    EmfSetStretchBltMode = 21
    EmfSetTextAlign = 22
    EmfSetColorAdjustment = 23
    EmfSetTextColor = 24
    EmfSetBkColor = 25
    EmfOffsetClipRgn = 26
    EmfMoveToEx = 27
    EmfSetMetaRgn = 28
    EmfExcludeClipRect = 29
    EmfIntersectClipRect = 30
    EmfScaleViewportExtEx = 31
    EmfScaleWindowExtEx = 32
    EmfSaveDC = 33
    EmfRestoreDC = 34
    EmfSetWorldTransform = 35
    EmfModifyWorldTransform = 36
    EmfSelectObject = 37
    EmfCreatePen = 38
    EmfCreateBrushIndirect = 39
    EmfDeleteObject = 40
    EmfAngleArc = 41
    EmfEllipse = 42
    EmfRectangle = 43
    EmfRoundRect = 44
    EmfRoundArc = 45
    EmfChord = 46
    EmfPie = 47
    EmfSelectPalette = 48
    EmfCreatePalette = 49
    EmfSetPaletteEntries = 50
    EmfResizePalette = 51
    EmfRealizePalette = 52
    EmfExtFloodFill = 53
    EmfLineTo = 54
    EmfArcTo = 55
    EmfPolyDraw = 56
    EmfSetArcDirection = 57
    EmfSetMiterLimit = 58
    EmfBeginPath = 59
    EmfEndPath = 60
    EmfCloseFigure = 61
    EmfFillPath = 62
    EmfStrokeAndFillPath = 63
    EmfStrokePath = 64
    EmfFlattenPath = 65
    EmfWidenPath = 66
    EmfSelectClipPath = 67
    EmfAbortPath = 68
    EmfReserved069 = 69
    EmfGdiComment = 70
    EmfFillRgn = 71
    EmfFrameRgn = 72
    EmfInvertRgn = 73
    EmfPaintRgn = 74
    EmfExtSelectClipRgn = 75
    EmfBitBlt = 76
    EmfStretchBlt = 77
    EmfMaskBlt = 78
    EmfPlgBlt = 79
    EmfSetDIBitsToDevice = 80
    EmfStretchDIBits = 81
    EmfExtCreateFontIndirect = 82
    EmfExtTextOutA = 83
    EmfExtTextOutW = 84
    EmfPolyBezier16 = 85
    EmfPolygon16 = 86
    EmfPolyline16 = 87
    EmfPolyBezierTo16 = 88
    EmfPolylineTo16 = 89
    EmfPolyPolyline16 = 90
    EmfPolyPolygon16 = 91
    EmfPolyDraw16 = 92
    EmfCreateMonoBrush = 93
    EmfCreateDibPatternBrushPt = 94
    EmfExtCreatePen = 95
    EmfPolyTextOutA = 96
    EmfPolyTextOutW = 97
    EmfSetIcmMode = 98
    EmfCreateColorSpace = 99
    EmfSetColorSpace = 100
    EmfDeleteColorSpace = 101
    EmfGlsRecord = 102
    EmfGlsBoundedRecord = 103
    EmfPixelFormat = 104
    EmfDrawEscape = 105
    EmfExtEscape = 106
    EmfStartDoc = 107
    EmfSmallTextOut = 108
    EmfForceUfiMapping = 109
    EmfNamedEscpae = 110
    EmfColorCorrectPalette = 111
    EmfSetIcmProfileA = 112
    EmfSetIcmProfileW = 113
    EmfAlphaBlend = 114
    EmfSetLayout = 115
    EmfTransparentBlt = 116
    EmfReserved117 = 117
    EmfGradientFill = 118
    EmfSetLinkedUfis = 119
    EmfSetTextJustification = 120
    EmfColorMatchToTargetW = 121
    EmfCreateColorSpaceW = 122
    EmfMax = 122
    Invalid = 16384
    EmfPlusRecordBase = 16384
    Header = 16385
    Min = 16385
    EndOfFile = 16386
    Comment = 16387
    GetDC = 16388
    MultiFormatStart = 16389
    MultiFormatSection = 16390
    MultiFormatEnd = 16391
    Object = 16392
    Clear = 16393
    FillRects = 16394
    DrawRects = 16395
    FillPolygon = 16396
    DrawLines = 16397
    FillEllipse = 16398
    DrawEllipse = 16399
    FillPie = 16400
    DrawPie = 16401
    DrawArc = 16402
    FillRegion = 16403
    FillPath = 16404
    DrawPath = 16405
    FillClosedCurve = 16406
    DrawClosedCurve = 16407
    DrawCurve = 16408
    DrawBeziers = 16409
    DrawImage = 16410
    DrawImagePoints = 16411
    DrawString = 16412
    SetRenderingOrigin = 16413
    SetAntiAliasMode = 16414
    SetTextRenderingHint = 16415
    SetTextContrast = 16416
    SetInterpolationMode = 16417
    SetPixelOffsetMode = 16418
    SetCompositingMode = 16419
    SetCompositingQuality = 16420
    Save = 16421
    Restore = 16422
    BeginContainer = 16423
    BeginContainerNoParams = 16424
    EndContainer = 16425
    SetWorldTransform = 16426
    ResetWorldTransform = 16427
    MultiplyWorldTransform = 16428
    TranslateWorldTransform = 16429
    ScaleWorldTransform = 16430
    RotateWorldTransform = 16431
    SetPageTransform = 16432
    ResetClip = 16433
    SetClipRect = 16434
    SetClipPath = 16435
    SetClipRegion = 16436
    OffsetClip = 16437
    Max = 16438
    DrawDriverString = 16438
    Total = 16439
    WmfRecordBase = 65536
    WmfSaveDC = 65566
    WmfRealizePalette = 65589
    WmfSetPalEntries = 65591
    WmfCreatePalette = 65783
    WmfSetBkMode = 65794
    WmfSetMapMode = 65795
    WmfSetROP2 = 65796
    WmfSetRelAbs = 65797
    WmfSetPolyFillMode = 65798
    WmfSetStretchBltMode = 65799
    WmfSetTextCharExtra = 65800
    WmfRestoreDC = 65831
    WmfInvertRegion = 65834
    WmfPaintRegion = 65835
    WmfSelectClipRegion = 65836
    WmfSelectObject = 65837
    WmfSetTextAlign = 65838
    WmfResizePalette = 65849
    WmfDibCreatePatternBrush = 65858
    WmfSetLayout = 65865
    WmfDeleteObject = 66032
    WmfCreatePatternBrush = 66041
    WmfSetBkColor = 66049
    WmfSetTextColor = 66057
    WmfSetTextJustification = 66058
    WmfSetWindowOrg = 66059
    WmfSetWindowExt = 66060
    WmfSetViewportOrg = 66061
    WmfSetViewportExt = 66062
    WmfOffsetWindowOrg = 66063
    WmfOffsetViewportOrg = 66065
    WmfLineTo = 66067
    WmfMoveTo = 66068
    WmfOffsetCilpRgn = 66080
    WmfFillRegion = 66088
    WmfSetMapperFlags = 66097
    WmfSelectPalette = 66100
    WmfCreatePenIndirect = 66298
    WmfCreateFontIndirect = 66299
    WmfCreateBrushIndirect = 66300
    WmfPolygon = 66340
    WmfPolyline = 66341
    WmfScaleWindowExt = 66576
    WmfScaleViewportExt = 66578
    WmfExcludeClipRect = 66581
    WmfIntersectClipRect = 66582
    WmfEllipse = 66584
    WmfFloodFill = 66585
    WmfRectangle = 66587
    WmfSetPixel = 66591
    WmfFrameRegion = 66601
    WmfAnimatePalette = 66614
    WmfTextOut = 66849
    WmfPolyPolygon = 66872
    WmfExtFloodFill = 66888
    WmfRoundRect = 67100
    WmfPatBlt = 67101
    WmfEscape = 67110
    WmfCreateRegion = 67327
    WmfArc = 67607
    WmfPie = 67610
    WmfChord = 67632
    WmfBitBlt = 67874
    WmfDibBitBlt = 67904
    WmfExtTextOut = 68146
    WmfStretchBlt = 68387
    WmfDibStretchBlt = 68417
    WmfSetDibToDev = 68915
    WmfStretchDib = 69443

class EmfType(enum.Enum):
    EmfOnly = 3
    EmfPlusOnly = 4
    EmfPlusDual = 5

class Encoder(object):
    """    """
    def __init__(self, guid: System.Guid): ...
    @property
    def Compression(self) -> Encoder: ...
    @property
    def ColorDepth(self) -> Encoder: ...
    @property
    def ScanMethod(self) -> Encoder: ...
    @property
    def Version(self) -> Encoder: ...
    @property
    def RenderMethod(self) -> Encoder: ...
    @property
    def Quality(self) -> Encoder: ...
    @property
    def Transformation(self) -> Encoder: ...
    @property
    def LuminanceTable(self) -> Encoder: ...
    @property
    def ChrominanceTable(self) -> Encoder: ...
    @property
    def SaveFlag(self) -> Encoder: ...
    @property
    def ColorSpace(self) -> Encoder: ...
    @property
    def ImageItems(self) -> Encoder: ...
    @property
    def SaveAsCmyk(self) -> Encoder: ...
    @property
    def Guid(self) -> System.Guid: ...

class EncoderParameterValueType(enum.Enum):
    ValueTypeByte = 1
    ValueTypeAscii = 2
    ValueTypeShort = 3
    ValueTypeLong = 4
    ValueTypeRational = 5
    ValueTypeLongRange = 6
    ValueTypeUndefined = 7
    ValueTypeRationalRange = 8
    ValueTypePointer = 9

class EncoderValue(enum.Enum):
    ColorTypeCMYK = 0
    ColorTypeYCCK = 1
    CompressionLZW = 2
    CompressionCCITT3 = 3
    CompressionCCITT4 = 4
    CompressionRle = 5
    CompressionNone = 6
    ScanMethodInterlaced = 7
    ScanMethodNonInterlaced = 8
    VersionGif87 = 9
    VersionGif89 = 10
    RenderProgressive = 11
    RenderNonProgressive = 12
    TransformRotate90 = 13
    TransformRotate180 = 14
    TransformRotate270 = 15
    TransformFlipHorizontal = 16
    TransformFlipVertical = 17
    MultiFrame = 18
    LastFrame = 19
    Flush = 20
    FrameDimensionTime = 21
    FrameDimensionResolution = 22
    FrameDimensionPage = 23

class FrameDimension(object):
    """    """
    def __init__(self, guid: System.Guid): ...
    @overload
    def Equals(self, o: object) -> bool: ...
    @property
    def Guid(self) -> System.Guid: ...
    @property
    def Page(self) -> FrameDimension: ...
    @property
    def Resolution(self) -> FrameDimension: ...
    @property
    def Time(self) -> FrameDimension: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def ToString() -> str: ...

class ImageCodecFlags(enum.Enum):
    Encoder = 1
    Decoder = 2
    SupportBitmap = 4
    SupportVector = 8
    SeekableEncode = 16
    BlockingDecode = 32
    Builtin = 65536
    System = 131072
    User = 262144

class ImageFlags(enum.Enum):
    None_ = 0
    Scalable = 1
    HasAlpha = 2
    HasTranslucent = 4
    PartiallyScalable = 8
    ColorSpaceRgb = 16
    ColorSpaceCmyk = 32
    ColorSpaceGray = 64
    ColorSpaceYcbcr = 128
    ColorSpaceYcck = 256
    HasRealDpi = 4096
    HasRealPixelSize = 8192
    ReadOnly = 65536
    Caching = 131072

class ImageFormat(object):
    """    """
    def __init__(self, guid: System.Guid): ...
    @overload
    def Equals(self, o: object) -> bool: ...
    @property
    def Bmp(self) -> ImageFormat: ...
    @property
    def Emf(self) -> ImageFormat: ...
    @property
    def Exif(self) -> ImageFormat: ...
    @property
    def Gif(self) -> ImageFormat: ...
    @property
    def Guid(self) -> System.Guid: ...
    @property
    def Heif(self) -> ImageFormat: ...
    @property
    def Icon(self) -> ImageFormat: ...
    @property
    def Jpeg(self) -> ImageFormat: ...
    @property
    def MemoryBmp(self) -> ImageFormat: ...
    @property
    def Png(self) -> ImageFormat: ...
    @property
    def Tiff(self) -> ImageFormat: ...
    @property
    def Webp(self) -> ImageFormat: ...
    @property
    def Wmf(self) -> ImageFormat: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def ToString() -> str: ...

class ImageLockMode(enum.Enum):
    ReadOnly = 1
    WriteOnly = 2
    ReadWrite = 3
    UserInputBuffer = 4

class MetafileType(enum.Enum):
    Invalid = 0
    Wmf = 1
    WmfPlaceable = 2
    Emf = 3
    EmfPlusOnly = 4
    EmfPlusDual = 5

class PaletteFlags(enum.Enum):
    HasAlpha = 1
    GrayScale = 2
    Halftone = 4

class PixelFormat(enum.Enum):
    DontCare = 0
    Undefined = 0
    Max = 15
    Indexed = 65536
    Gdi = 131072
    Format16bppRgb555 = 135173
    Format16bppRgb565 = 135174
    Format24bppRgb = 137224
    Format32bppRgb = 139273
    Format1bppIndexed = 196865
    Format4bppIndexed = 197634
    Format8bppIndexed = 198659
    Alpha = 262144
    Format16bppArgb1555 = 397319
    PAlpha = 524288
    Format32bppPArgb = 925707
    Extended = 1048576
    Format16bppGrayScale = 1052676
    Format48bppRgb = 1060876
    Format64bppPArgb = 1851406
    Canonical = 2097152
    Format32bppArgb = 2498570
    Format64bppArgb = 3424269

class PlayRecordCallback(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, recordType: EmfPlusRecordType, flags: int, dataSize: int, recordData: System.IntPtr, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, recordType: EmfPlusRecordType, flags: int, dataSize: int, recordData: System.IntPtr) -> None: ...

class PropertyItem(object):
    """    """
    @property
    def Id(self) -> int: ...
    @property
    def Len(self) -> int: ...
    @property
    def Type(self) -> System.Int16: ...
    @property
    def Value(self) -> System.System.Array[System.Byte]: ...
    @Id.setter
    def Id(self, value: System.Void): ...
    @Len.setter
    def Len(self, value: System.Void): ...
    @Type.setter
    def Type(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...

class WmfPlaceableFileHeader(object):
    """    """
    def __init__(self): ...
    @property
    def BboxBottom(self) -> System.Int16: ...
    @property
    def BboxLeft(self) -> System.Int16: ...
    @property
    def BboxRight(self) -> System.Int16: ...
    @property
    def BboxTop(self) -> System.Int16: ...
    @property
    def Checksum(self) -> System.Int16: ...
    @property
    def Hmf(self) -> System.Int16: ...
    @property
    def Inch(self) -> System.Int16: ...
    @property
    def Key(self) -> int: ...
    @property
    def Reserved(self) -> int: ...
    @BboxBottom.setter
    def BboxBottom(self, value: System.Void): ...
    @BboxLeft.setter
    def BboxLeft(self, value: System.Void): ...
    @BboxRight.setter
    def BboxRight(self, value: System.Void): ...
    @BboxTop.setter
    def BboxTop(self, value: System.Void): ...
    @Checksum.setter
    def Checksum(self, value: System.Void): ...
    @Hmf.setter
    def Hmf(self, value: System.Void): ...
    @Inch.setter
    def Inch(self, value: System.Void): ...
    @Key.setter
    def Key(self, value: System.Void): ...
    @Reserved.setter
    def Reserved(self, value: System.Void): ...

class BitmapData(object):
    """    """
    def __init__(self): ...
    @property
    def Height(self) -> int: ...
    @property
    def PixelFormat(self) -> PixelFormat: ...
    @property
    def Reserved(self) -> int: ...
    @property
    def Scan0(self) -> System.IntPtr: ...
    @property
    def Stride(self) -> int: ...
    @property
    def Width(self) -> int: ...
    @Height.setter
    def Height(self, value: System.Void): ...
    @PixelFormat.setter
    def PixelFormat(self, value: System.Void): ...
    @Reserved.setter
    def Reserved(self, value: System.Void): ...
    @Scan0.setter
    def Scan0(self, value: System.Void): ...
    @Stride.setter
    def Stride(self, value: System.Void): ...
    @Width.setter
    def Width(self, value: System.Void): ...

class ColorMatrix(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, newColorMatrix: System.System.Array[System.System.Array[System.Single]]): ...
    @property
    def Item(self) -> System.Single: ...
    @property
    def Matrix00(self) -> System.Single: ...
    @property
    def Matrix01(self) -> System.Single: ...
    @property
    def Matrix02(self) -> System.Single: ...
    @property
    def Matrix03(self) -> System.Single: ...
    @property
    def Matrix04(self) -> System.Single: ...
    @property
    def Matrix10(self) -> System.Single: ...
    @property
    def Matrix11(self) -> System.Single: ...
    @property
    def Matrix12(self) -> System.Single: ...
    @property
    def Matrix13(self) -> System.Single: ...
    @property
    def Matrix14(self) -> System.Single: ...
    @property
    def Matrix20(self) -> System.Single: ...
    @property
    def Matrix21(self) -> System.Single: ...
    @property
    def Matrix22(self) -> System.Single: ...
    @property
    def Matrix23(self) -> System.Single: ...
    @property
    def Matrix24(self) -> System.Single: ...
    @property
    def Matrix30(self) -> System.Single: ...
    @property
    def Matrix31(self) -> System.Single: ...
    @property
    def Matrix32(self) -> System.Single: ...
    @property
    def Matrix33(self) -> System.Single: ...
    @property
    def Matrix34(self) -> System.Single: ...
    @property
    def Matrix40(self) -> System.Single: ...
    @property
    def Matrix41(self) -> System.Single: ...
    @property
    def Matrix42(self) -> System.Single: ...
    @property
    def Matrix43(self) -> System.Single: ...
    @property
    def Matrix44(self) -> System.Single: ...
    @Item.setter
    def Item(self, value: System.Void): ...
    @Matrix00.setter
    def Matrix00(self, value: System.Void): ...
    @Matrix01.setter
    def Matrix01(self, value: System.Void): ...
    @Matrix02.setter
    def Matrix02(self, value: System.Void): ...
    @Matrix03.setter
    def Matrix03(self, value: System.Void): ...
    @Matrix04.setter
    def Matrix04(self, value: System.Void): ...
    @Matrix10.setter
    def Matrix10(self, value: System.Void): ...
    @Matrix11.setter
    def Matrix11(self, value: System.Void): ...
    @Matrix12.setter
    def Matrix12(self, value: System.Void): ...
    @Matrix13.setter
    def Matrix13(self, value: System.Void): ...
    @Matrix14.setter
    def Matrix14(self, value: System.Void): ...
    @Matrix20.setter
    def Matrix20(self, value: System.Void): ...
    @Matrix21.setter
    def Matrix21(self, value: System.Void): ...
    @Matrix22.setter
    def Matrix22(self, value: System.Void): ...
    @Matrix23.setter
    def Matrix23(self, value: System.Void): ...
    @Matrix24.setter
    def Matrix24(self, value: System.Void): ...
    @Matrix30.setter
    def Matrix30(self, value: System.Void): ...
    @Matrix31.setter
    def Matrix31(self, value: System.Void): ...
    @Matrix32.setter
    def Matrix32(self, value: System.Void): ...
    @Matrix33.setter
    def Matrix33(self, value: System.Void): ...
    @Matrix34.setter
    def Matrix34(self, value: System.Void): ...
    @Matrix40.setter
    def Matrix40(self, value: System.Void): ...
    @Matrix41.setter
    def Matrix41(self, value: System.Void): ...
    @Matrix42.setter
    def Matrix42(self, value: System.Void): ...
    @Matrix43.setter
    def Matrix43(self, value: System.Void): ...
    @Matrix44.setter
    def Matrix44(self, value: System.Void): ...

class ColorPalette(object):
    """    """
    @property
    def Entries(self) -> Drawing.System.Array[Drawing.Color]: ...
    @property
    def Flags(self) -> int: ...

class EncoderParameter(object):
    """    """
    @overload
    def __init__(self, encoder: Encoder, value: System.Byte): ...
    @overload
    def __init__(self, encoder: Encoder, value: System.System.Array[System.Int64]): ...
    @overload
    def __init__(self, encoder: Encoder, value: System.System.Array[System.Int16]): ...
    @overload
    def __init__(self, encoder: Encoder, value: str): ...
    @overload
    def __init__(self, encoder: Encoder, value: System.System.Array[System.Byte]): ...
    @overload
    def __init__(self, encoder: Encoder, value: System.Int64): ...
    @overload
    def __init__(self, encoder: Encoder, value: System.Int16): ...
    @overload
    def __init__(self, encoder: Encoder, rangebegin: System.Int64, rangeend: System.Int64): ...
    @overload
    def __init__(self, encoder: Encoder, value: System.System.Array[System.Byte], undefined: bool): ...
    @overload
    def __init__(self, encoder: Encoder, value: System.Byte, undefined: bool): ...
    @overload
    def __init__(self, encoder: Encoder, numerator: System.System.Array[int], denominator: System.System.Array[int]): ...
    @overload
    def __init__(self, encoder: Encoder, rangebegin: System.System.Array[System.Int64], rangeend: System.System.Array[System.Int64]): ...
    @overload
    def __init__(self, encoder: Encoder, numerator: int, denominator: int): ...
    @overload
    def __init__(self, encoder: Encoder, NumberOfValues: int, Type: int, Value: int): ...
    @overload
    def __init__(self, encoder: Encoder, numberValues: int, type_: EncoderParameterValueType, value: System.IntPtr): ...
    @overload
    def __init__(self, encoder: Encoder, numerator1: int, demoninator1: int, numerator2: int, demoninator2: int): ...
    @overload
    def __init__(self, encoder: Encoder, numerator1: System.System.Array[int], denominator1: System.System.Array[int], numerator2: System.System.Array[int], denominator2: System.System.Array[int]): ...
    @overload
    def Dispose() -> None: ...
    @property
    def Encoder(self) -> Encoder: ...
    @property
    def NumberOfValues(self) -> int: ...
    @property
    def Type(self) -> EncoderParameterValueType: ...
    @property
    def ValueType(self) -> EncoderParameterValueType: ...
    @Encoder.setter
    def Encoder(self, value: System.Void): ...

class EncoderParameters(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, count: int): ...
    @overload
    def Dispose() -> None: ...
    @property
    def Param(self) -> System.Array[EncoderParameter]: ...
    @Param.setter
    def Param(self, value: System.Void): ...

class ImageAttributes(object):
    """    """
    def __init__(self): ...
    @overload
    def ClearBrushRemapTable() -> None: ...
    @overload
    def ClearColorKey() -> None: ...
    @overload
    def ClearColorKey(self, type_: ColorAdjustType) -> None: ...
    @overload
    def ClearColorMatrix() -> None: ...
    @overload
    def ClearColorMatrix(self, type_: ColorAdjustType) -> None: ...
    @overload
    def ClearGamma() -> None: ...
    @overload
    def ClearGamma(self, type_: ColorAdjustType) -> None: ...
    @overload
    def ClearNoOp() -> None: ...
    @overload
    def ClearNoOp(self, type_: ColorAdjustType) -> None: ...
    @overload
    def ClearOutputChannel() -> None: ...
    @overload
    def ClearOutputChannel(self, type_: ColorAdjustType) -> None: ...
    @overload
    def ClearOutputChannelColorProfile() -> None: ...
    @overload
    def ClearOutputChannelColorProfile(self, type_: ColorAdjustType) -> None: ...
    @overload
    def ClearRemapTable() -> None: ...
    @overload
    def ClearRemapTable(self, type_: ColorAdjustType) -> None: ...
    @overload
    def ClearThreshold() -> None: ...
    @overload
    def ClearThreshold(self, type_: ColorAdjustType) -> None: ...
    @overload
    def Clone() -> object: ...
    @overload
    def Dispose() -> None: ...
    @overload
    def GetAdjustedPalette(self, palette: ColorPalette, type_: ColorAdjustType) -> None: ...
    @overload
    def SetBrushRemapTable(self, map_: System.Array[ColorMap]) -> None: ...
    @overload
    def SetColorKey(self, colorLow: Drawing.Color, colorHigh: Drawing.Color) -> None: ...
    @overload
    def SetColorKey(self, colorLow: Drawing.Color, colorHigh: Drawing.Color, type_: ColorAdjustType) -> None: ...
    @overload
    def SetColorMatrices(self, newColorMatrix: ColorMatrix, grayMatrix: ColorMatrix) -> None: ...
    @overload
    def SetColorMatrices(self, newColorMatrix: ColorMatrix, grayMatrix: ColorMatrix, flags: ColorMatrixFlag) -> None: ...
    @overload
    def SetColorMatrices(self, newColorMatrix: ColorMatrix, grayMatrix: ColorMatrix, mode: ColorMatrixFlag, type_: ColorAdjustType) -> None: ...
    @overload
    def SetColorMatrix(self, newColorMatrix: ColorMatrix) -> None: ...
    @overload
    def SetColorMatrix(self, newColorMatrix: ColorMatrix, flags: ColorMatrixFlag) -> None: ...
    @overload
    def SetColorMatrix(self, newColorMatrix: ColorMatrix, mode: ColorMatrixFlag, type_: ColorAdjustType) -> None: ...
    @overload
    def SetGamma(self, gamma: System.Single) -> None: ...
    @overload
    def SetGamma(self, gamma: System.Single, type_: ColorAdjustType) -> None: ...
    @overload
    def SetNoOp() -> None: ...
    @overload
    def SetNoOp(self, type_: ColorAdjustType) -> None: ...
    @overload
    def SetOutputChannel(self, flags: ColorChannelFlag) -> None: ...
    @overload
    def SetOutputChannel(self, flags: ColorChannelFlag, type_: ColorAdjustType) -> None: ...
    @overload
    def SetOutputChannelColorProfile(self, colorProfileFilename: str) -> None: ...
    @overload
    def SetOutputChannelColorProfile(self, colorProfileFilename: str, type_: ColorAdjustType) -> None: ...
    @overload
    def SetRemapTable(self, map_: System.Array[ColorMap]) -> None: ...
    @overload
    def SetRemapTable(self, map_: System.Array[ColorMap], type_: ColorAdjustType) -> None: ...
    @overload
    def SetThreshold(self, threshold: System.Single) -> None: ...
    @overload
    def SetThreshold(self, threshold: System.Single, type_: ColorAdjustType) -> None: ...
    @overload
    def SetWrapMode(self, mode: Drawing2D.WrapMode) -> None: ...
    @overload
    def SetWrapMode(self, mode: Drawing2D.WrapMode, color: Drawing.Color) -> None: ...
    @overload
    def SetWrapMode(self, mode: Drawing2D.WrapMode, color: Drawing.Color, clamp: bool) -> None: ...

class ImageCodecInfo(object):
    """    """
    @property
    def Clsid(self) -> System.Guid: ...
    @property
    def CodecName(self) -> str: ...
    @property
    def DllName(self) -> str: ...
    @property
    def FilenameExtension(self) -> str: ...
    @property
    def Flags(self) -> ImageCodecFlags: ...
    @property
    def FormatDescription(self) -> str: ...
    @property
    def FormatID(self) -> System.Guid: ...
    @property
    def MimeType(self) -> str: ...
    @property
    def SignatureMasks(self) -> System.System.Array[System.System.Array[System.Byte]]: ...
    @property
    def SignaturePatterns(self) -> System.System.Array[System.System.Array[System.Byte]]: ...
    @property
    def Version(self) -> int: ...
    @overload
    @staticmethod
    def GetImageDecoders() -> System.Array[ImageCodecInfo]: ...
    @overload
    @staticmethod
    def GetImageEncoders() -> System.Array[ImageCodecInfo]: ...
    @Clsid.setter
    def Clsid(self, value: System.Void): ...
    @CodecName.setter
    def CodecName(self, value: System.Void): ...
    @DllName.setter
    def DllName(self, value: System.Void): ...
    @FilenameExtension.setter
    def FilenameExtension(self, value: System.Void): ...
    @Flags.setter
    def Flags(self, value: System.Void): ...
    @FormatDescription.setter
    def FormatDescription(self, value: System.Void): ...
    @FormatID.setter
    def FormatID(self, value: System.Void): ...
    @MimeType.setter
    def MimeType(self, value: System.Void): ...
    @SignatureMasks.setter
    def SignatureMasks(self, value: System.Void): ...
    @SignaturePatterns.setter
    def SignaturePatterns(self, value: System.Void): ...
    @Version.setter
    def Version(self, value: System.Void): ...

class MetafileFrameUnit(enum.Enum):
    Pixel = 2
    Point = 3
    Inch = 4
    Document = 5
    Millimeter = 6
    GdiCompatible = 7

class MetafileHeader(object):
    """    """
    @property
    def Bounds(self) -> Drawing.Rectangle: ...
    @property
    def DpiX(self) -> System.Single: ...
    @property
    def DpiY(self) -> System.Single: ...
    @property
    def EmfPlusHeaderSize(self) -> int: ...
    @property
    def LogicalDpiX(self) -> int: ...
    @property
    def LogicalDpiY(self) -> int: ...
    @property
    def MetafileSize(self) -> int: ...
    @property
    def Type(self) -> MetafileType: ...
    @property
    def Version(self) -> int: ...
    @property
    def WmfHeader(self) -> MetaHeader: ...
    @overload
    def IsDisplay() -> bool: ...
    @overload
    def IsEmf() -> bool: ...
    @overload
    def IsEmfOrEmfPlus() -> bool: ...
    @overload
    def IsEmfPlus() -> bool: ...
    @overload
    def IsEmfPlusDual() -> bool: ...
    @overload
    def IsEmfPlusOnly() -> bool: ...
    @overload
    def IsWmf() -> bool: ...
    @overload
    def IsWmfPlaceable() -> bool: ...

class MetaHeader(object):
    """    """
    def __init__(self): ...
    @property
    def HeaderSize(self) -> System.Int16: ...
    @property
    def MaxRecord(self) -> int: ...
    @property
    def NoObjects(self) -> System.Int16: ...
    @property
    def NoParameters(self) -> System.Int16: ...
    @property
    def Size(self) -> int: ...
    @property
    def Type(self) -> System.Int16: ...
    @property
    def Version(self) -> System.Int16: ...
    @HeaderSize.setter
    def HeaderSize(self, value: System.Void): ...
    @MaxRecord.setter
    def MaxRecord(self, value: System.Void): ...
    @NoObjects.setter
    def NoObjects(self, value: System.Void): ...
    @NoParameters.setter
    def NoParameters(self, value: System.Void): ...
    @Size.setter
    def Size(self, value: System.Void): ...
    @Type.setter
    def Type(self, value: System.Void): ...
    @Version.setter
    def Version(self, value: System.Void): ...

# endregion
