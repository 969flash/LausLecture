"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["IPropertyValueUIService", "PaintValueEventArgs", "PropertyValueUIHandler", "PropertyValueUIItem", "PropertyValueUIItemInvokeHandler", "UITypeEditor", "UITypeEditorEditStyle"]
# endregion

# region: Imports
from System import Collections
from System import ComponentModel
from System import Drawing
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: Exports
__all__ = ["CategoryNameCollection"]
# endregion

# region: Imports
from System import Collections
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: System.Drawing.Common, Version=7.0.0.0

class CategoryNameCollection(Collections.ReadOnlyCollectionBase):
    """    """
    @overload
    def __init__(self, value: CategoryNameCollection): ...
    @overload
    def __init__(self, value: System.System.Array[str]): ...
    @overload
    def Contains(self, value: str) -> bool: ...
    @overload
    def CopyTo(self, array: System.System.Array[str], index: int) -> None: ...
    @property
    def Item(self) -> str: ...
    @overload
    def IndexOf(self, value: str) -> int: ...

# endregion

# region: System.Windows.Forms, Version=7.0.0.0

class IPropertyValueUIService:
    """    """
    @overload
    def AddPropertyValueUIHandler(self, newHandler: PropertyValueUIHandler) -> None: ...
    @overload
    def GetPropertyUIValueItems(self, context: ComponentModel.ITypeDescriptorContext, propDesc: ComponentModel.PropertyDescriptor) -> System.Array[PropertyValueUIItem]: ...
    @overload
    def NotifyPropertyValueUIItemsChanged() -> None: ...
    @overload
    def RemovePropertyValueUIHandler(self, newHandler: PropertyValueUIHandler) -> None: ...
    @property
    def PropertyUIValueItemsChanged(self): ...

class PaintValueEventArgs(System.EventArgs):
    """    """
    def __init__(self, context: ComponentModel.ITypeDescriptorContext, value: object, graphics: Drawing.Graphics, bounds: Drawing.Rectangle): ...
    @property
    def Bounds(self) -> Drawing.Rectangle: ...
    @property
    def Context(self) -> ComponentModel.ITypeDescriptorContext: ...
    @property
    def Graphics(self) -> Drawing.Graphics: ...
    @property
    def Value(self) -> object: ...

class PropertyValueUIHandler(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, context: ComponentModel.ITypeDescriptorContext, propDesc: ComponentModel.PropertyDescriptor, valueUIItemList: Collections.ArrayList, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, context: ComponentModel.ITypeDescriptorContext, propDesc: ComponentModel.PropertyDescriptor, valueUIItemList: Collections.ArrayList) -> None: ...

class PropertyValueUIItem(object):
    """    """
    def __init__(self, uiItemImage: Drawing.Image, handler: PropertyValueUIItemInvokeHandler, tooltip: str): ...
    @property
    def Image(self) -> Drawing.Image: ...
    @property
    def InvokeHandler(self) -> PropertyValueUIItemInvokeHandler: ...
    @property
    def ToolTip(self) -> str: ...
    @overload
    def Reset() -> None: ...

class PropertyValueUIItemInvokeHandler(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, context: ComponentModel.ITypeDescriptorContext, descriptor: ComponentModel.PropertyDescriptor, invokedItem: PropertyValueUIItem, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, context: ComponentModel.ITypeDescriptorContext, descriptor: ComponentModel.PropertyDescriptor, invokedItem: PropertyValueUIItem) -> None: ...

class UITypeEditor(object):
    """    """
    def __init__(self): ...
    @overload
    def EditValue(self, provider: System.IServiceProvider, value: object) -> object: ...
    @overload
    def EditValue(self, context: ComponentModel.ITypeDescriptorContext, provider: System.IServiceProvider, value: object) -> object: ...
    @property
    def IsDropDownResizable(self) -> bool: ...
    @overload
    def GetEditStyle() -> UITypeEditorEditStyle: ...
    @overload
    def GetEditStyle(self, context: ComponentModel.ITypeDescriptorContext) -> UITypeEditorEditStyle: ...
    @overload
    def GetPaintValueSupported() -> bool: ...
    @overload
    def GetPaintValueSupported(self, context: ComponentModel.ITypeDescriptorContext) -> bool: ...
    @overload
    def PaintValue(self, e: PaintValueEventArgs) -> None: ...
    @overload
    def PaintValue(self, value: object, canvas: Drawing.Graphics, rectangle: Drawing.Rectangle) -> None: ...

class UITypeEditorEditStyle(enum.Enum):
    None_ = 1
    Modal = 2
    DropDown = 3

# endregion
