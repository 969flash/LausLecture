"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Permissions"]
# endregion

# region: Imports
from typing import overload
# endregion

# region: Exports
__all__ = ["Schema", "AttachableMemberIdentifier", "AttachablePropertyServices", "XamlObjectEventArgs", "IAmbientProvider", "AmbientPropertyValue", "IAttachedPropertyStore", "IDestinationTypeProvider", "INamespacePrefixLookup", "XamlNodeType", "XamlObjectWriter", "XamlObjectWriterSettings", "XamlReaderSettings", "XamlXmlReader", "XamlXmlReaderSettings", "IRootObjectProvider", "IXamlLineInfo", "IXamlLineInfoConsumer", "IXamlNameProvider", "IXamlNameResolver", "IXamlNamespaceResolver", "IXamlObjectWriterFactory", "IXamlSchemaContextProvider", "NamespaceDeclaration", "IXamlIndexingReader", "XamlBackgroundReader", "XamlNodeList", "XamlNodeQueue", "XamlDirective", "XamlDeferringLoader", "XamlException", "XamlParseException", "XamlObjectWriterException", "XamlDuplicateMemberException", "XamlInternalException", "XamlSchemaException", "XamlObjectReaderException", "XamlXmlWriterException", "XamlLanguage", "XamlMember", "XamlObjectReader", "XamlObjectReaderSettings", "XamlReader", "XamlSchemaContext", "XamlSchemaContextSettings", "XamlServices", "XamlType", "XamlWriter", "XamlWriterSettings", "XamlXmlWriter", "XamlXmlWriterSettings"]
# endregion

# region: Imports
from System import ComponentModel
from System import IO
from System import Reflection
from System import Xml
from System.Collections import Generic
from System.Collections import ObjectModel
from System.Runtime import CompilerServices
from System.Runtime import Serialization
from System.Windows import Markup
from System.Xaml import Permissions
from System.Xaml import Schema
from typing import overload
import enum
import System
# endregion

# region: Exports
__all__ = ["Permissions"]
# endregion

# region: Imports
from typing import overload
# endregion

# region: System.Xaml, Version=7.0.0.0

class AttachableMemberIdentifier(object):
    """    """
    def __init__(self, declaringType: System.Type, memberName: str): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def Equals(self, other: AttachableMemberIdentifier) -> bool: ...
    @property
    def DeclaringType(self) -> System.Type: ...
    @property
    def MemberName(self) -> str: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def ToString() -> str: ...

class AttachablePropertyServices(object):
    """    """
    @overload
    @staticmethod
    def CopyPropertiesTo(instance: object, array: Generic.System.Array[Generic.KeyValuePair], index: int) -> None: ...
    @overload
    @staticmethod
    def GetAttachedPropertyCount(instance: object) -> int: ...
    @overload
    @staticmethod
    def RemoveProperty(instance: object, name: AttachableMemberIdentifier) -> bool: ...
    @overload
    @staticmethod
    def SetProperty(instance: object, name: AttachableMemberIdentifier, value: object) -> None: ...
    @overload
    @staticmethod
    def TryGetProperty(instance: object, name: AttachableMemberIdentifier) -> (bool, object): ...
    @overload
    @staticmethod
    def TryGetProperty(instance: object, name: AttachableMemberIdentifier) -> (bool, T): ...

class XamlObjectEventArgs(System.EventArgs):
    """    """
    def __init__(self, instance: object): ...
    @property
    def ElementLineNumber(self) -> int: ...
    @property
    def ElementLinePosition(self) -> int: ...
    @property
    def Instance(self) -> object: ...
    @property
    def SourceBamlUri(self) -> System.Uri: ...

class IAmbientProvider:
    """    """
    @overload
    def GetAllAmbientValues(self, types: System.Array[XamlType]) -> Generic.IEnumerable: ...
    @overload
    def GetAllAmbientValues(self, ceilingTypes: Generic.IEnumerable, properties: System.Array[XamlMember]) -> Generic.IEnumerable: ...
    @overload
    def GetAllAmbientValues(self, ceilingTypes: Generic.IEnumerable, searchLiveStackOnly: bool, types: Generic.IEnumerable, properties: System.Array[XamlMember]) -> Generic.IEnumerable: ...
    @overload
    def GetFirstAmbientValue(self, types: System.Array[XamlType]) -> object: ...
    @overload
    def GetFirstAmbientValue(self, ceilingTypes: Generic.IEnumerable, properties: System.Array[XamlMember]) -> AmbientPropertyValue: ...

class AmbientPropertyValue(object):
    """    """
    def __init__(self, property_: XamlMember, value: object): ...
    @property
    def RetrievedProperty(self) -> XamlMember: ...
    @property
    def Value(self) -> object: ...

class IAttachedPropertyStore:
    """    """
    @overload
    def CopyPropertiesTo(self, array: Generic.System.Array[Generic.KeyValuePair], index: int) -> None: ...
    @property
    def PropertyCount(self) -> int: ...
    @overload
    def RemoveProperty(self, attachableMemberIdentifier: AttachableMemberIdentifier) -> bool: ...
    @overload
    def SetProperty(self, attachableMemberIdentifier: AttachableMemberIdentifier, value: object) -> None: ...
    @overload
    def TryGetProperty(self, attachableMemberIdentifier: AttachableMemberIdentifier) -> (bool, object): ...

class IDestinationTypeProvider:
    """    """
    @overload
    def GetDestinationType() -> System.Type: ...

class INamespacePrefixLookup:
    """    """
    @overload
    def LookupPrefix(self, ns: str) -> str: ...

class XamlNodeType(enum.Enum):
    None_ = 0
    StartObject = 1
    GetObject = 2
    EndObject = 3
    StartMember = 4
    EndMember = 5
    Value = 6
    NamespaceDeclaration = 7

class XamlObjectWriter(XamlWriter):
    """    """
    @overload
    def __init__(self, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, schemaContext: XamlSchemaContext, settings: XamlObjectWriterSettings): ...
    @overload
    def Clear() -> None: ...
    @property
    def Result(self) -> object: ...
    @property
    def RootNameScope(self) -> Markup.INameScope: ...
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...
    @property
    def ShouldProvideLineInfo(self) -> bool: ...
    @overload
    def SetLineInfo(self, lineNumber: int, linePosition: int) -> None: ...
    @overload
    def WriteEndMember() -> None: ...
    @overload
    def WriteEndObject() -> None: ...
    @overload
    def WriteGetObject() -> None: ...
    @overload
    def WriteNamespace(self, namespaceDeclaration: NamespaceDeclaration) -> None: ...
    @overload
    def WriteStartMember(self, property_: XamlMember) -> None: ...
    @overload
    def WriteStartObject(self, xamlType: XamlType) -> None: ...
    @overload
    def WriteValue(self, value: object) -> None: ...

class XamlObjectWriterSettings(XamlWriterSettings):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, settings: XamlObjectWriterSettings): ...
    @property
    def AccessLevel(self) -> Permissions.XamlAccessLevel: ...
    @property
    def AfterBeginInitHandler(self) -> System.EventHandler: ...
    @property
    def AfterEndInitHandler(self) -> System.EventHandler: ...
    @property
    def AfterPropertiesHandler(self) -> System.EventHandler: ...
    @property
    def BeforePropertiesHandler(self) -> System.EventHandler: ...
    @property
    def ExternalNameScope(self) -> Markup.INameScope: ...
    @property
    def IgnoreCanConvert(self) -> bool: ...
    @property
    def PreferUnconvertedDictionaryKeys(self) -> bool: ...
    @property
    def RegisterNamesOnExternalNamescope(self) -> bool: ...
    @property
    def RootObjectInstance(self) -> object: ...
    @property
    def SkipDuplicatePropertyCheck(self) -> bool: ...
    @property
    def SkipProvideValueOnRoot(self) -> bool: ...
    @property
    def SourceBamlUri(self) -> System.Uri: ...
    @property
    def XamlSetValueHandler(self) -> System.EventHandler: ...
    @AccessLevel.setter
    def AccessLevel(self, value: System.Void): ...
    @AfterBeginInitHandler.setter
    def AfterBeginInitHandler(self, value: System.Void): ...
    @AfterEndInitHandler.setter
    def AfterEndInitHandler(self, value: System.Void): ...
    @AfterPropertiesHandler.setter
    def AfterPropertiesHandler(self, value: System.Void): ...
    @BeforePropertiesHandler.setter
    def BeforePropertiesHandler(self, value: System.Void): ...
    @ExternalNameScope.setter
    def ExternalNameScope(self, value: System.Void): ...
    @IgnoreCanConvert.setter
    def IgnoreCanConvert(self, value: System.Void): ...
    @PreferUnconvertedDictionaryKeys.setter
    def PreferUnconvertedDictionaryKeys(self, value: System.Void): ...
    @RegisterNamesOnExternalNamescope.setter
    def RegisterNamesOnExternalNamescope(self, value: System.Void): ...
    @RootObjectInstance.setter
    def RootObjectInstance(self, value: System.Void): ...
    @SkipDuplicatePropertyCheck.setter
    def SkipDuplicatePropertyCheck(self, value: System.Void): ...
    @SkipProvideValueOnRoot.setter
    def SkipProvideValueOnRoot(self, value: System.Void): ...
    @SourceBamlUri.setter
    def SourceBamlUri(self, value: System.Void): ...
    @XamlSetValueHandler.setter
    def XamlSetValueHandler(self, value: System.Void): ...

class XamlReaderSettings(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, settings: XamlReaderSettings): ...
    @property
    def AllowProtectedMembersOnRoot(self) -> bool: ...
    @property
    def BaseUri(self) -> System.Uri: ...
    @property
    def IgnoreUidsOnPropertyElements(self) -> bool: ...
    @property
    def LocalAssembly(self) -> Reflection.Assembly: ...
    @property
    def ProvideLineInfo(self) -> bool: ...
    @property
    def ValuesMustBeString(self) -> bool: ...
    @AllowProtectedMembersOnRoot.setter
    def AllowProtectedMembersOnRoot(self, value: System.Void): ...
    @BaseUri.setter
    def BaseUri(self, value: System.Void): ...
    @IgnoreUidsOnPropertyElements.setter
    def IgnoreUidsOnPropertyElements(self, value: System.Void): ...
    @LocalAssembly.setter
    def LocalAssembly(self, value: System.Void): ...
    @ProvideLineInfo.setter
    def ProvideLineInfo(self, value: System.Void): ...
    @ValuesMustBeString.setter
    def ValuesMustBeString(self, value: System.Void): ...

class XamlXmlReader(XamlReader):
    """    """
    @overload
    def __init__(self, xmlReader: Xml.XmlReader): ...
    @overload
    def __init__(self, fileName: str): ...
    @overload
    def __init__(self, stream: IO.Stream): ...
    @overload
    def __init__(self, textReader: IO.TextReader): ...
    @overload
    def __init__(self, xmlReader: Xml.XmlReader, settings: XamlXmlReaderSettings): ...
    @overload
    def __init__(self, xmlReader: Xml.XmlReader, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, fileName: str, settings: XamlXmlReaderSettings): ...
    @overload
    def __init__(self, fileName: str, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, stream: IO.Stream, settings: XamlXmlReaderSettings): ...
    @overload
    def __init__(self, stream: IO.Stream, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, textReader: IO.TextReader, settings: XamlXmlReaderSettings): ...
    @overload
    def __init__(self, textReader: IO.TextReader, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, xmlReader: Xml.XmlReader, schemaContext: XamlSchemaContext, settings: XamlXmlReaderSettings): ...
    @overload
    def __init__(self, fileName: str, schemaContext: XamlSchemaContext, settings: XamlXmlReaderSettings): ...
    @overload
    def __init__(self, stream: IO.Stream, schemaContext: XamlSchemaContext, settings: XamlXmlReaderSettings): ...
    @overload
    def __init__(self, textReader: IO.TextReader, schemaContext: XamlSchemaContext, settings: XamlXmlReaderSettings): ...
    @property
    def HasLineInfo(self) -> bool: ...
    @property
    def IsEof(self) -> bool: ...
    @property
    def LineNumber(self) -> int: ...
    @property
    def LinePosition(self) -> int: ...
    @property
    def Member(self) -> XamlMember: ...
    @property
    def Namespace(self) -> NamespaceDeclaration: ...
    @property
    def NodeType(self) -> XamlNodeType: ...
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...
    @property
    def Type(self) -> XamlType: ...
    @property
    def Value(self) -> object: ...
    @overload
    def Read() -> bool: ...

class XamlXmlReaderSettings(XamlReaderSettings):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, settings: XamlXmlReaderSettings): ...
    @property
    def CloseInput(self) -> bool: ...
    @property
    def SkipXmlCompatibilityProcessing(self) -> bool: ...
    @property
    def XmlLang(self) -> str: ...
    @property
    def XmlSpacePreserve(self) -> bool: ...
    @CloseInput.setter
    def CloseInput(self, value: System.Void): ...
    @SkipXmlCompatibilityProcessing.setter
    def SkipXmlCompatibilityProcessing(self, value: System.Void): ...
    @XmlLang.setter
    def XmlLang(self, value: System.Void): ...
    @XmlSpacePreserve.setter
    def XmlSpacePreserve(self, value: System.Void): ...

class IRootObjectProvider:
    """    """
    @property
    def RootObject(self) -> object: ...

class IXamlLineInfo:
    """    """
    @property
    def HasLineInfo(self) -> bool: ...
    @property
    def LineNumber(self) -> int: ...
    @property
    def LinePosition(self) -> int: ...

class IXamlLineInfoConsumer:
    """    """
    @property
    def ShouldProvideLineInfo(self) -> bool: ...
    @overload
    def SetLineInfo(self, lineNumber: int, linePosition: int) -> None: ...

class IXamlNameProvider:
    """    """
    @overload
    def GetName(self, value: object) -> str: ...

class IXamlNameResolver:
    """    """
    @property
    def IsFixupTokenAvailable(self) -> bool: ...
    @overload
    def GetAllNamesAndValuesInScope() -> Generic.IEnumerable: ...
    @overload
    def GetFixupToken(self, names: Generic.IEnumerable) -> object: ...
    @overload
    def GetFixupToken(self, names: Generic.IEnumerable, canAssignDirectly: bool) -> object: ...
    @overload
    def Resolve(self, name: str) -> object: ...
    @overload
    def Resolve(self, name: str) -> (object, bool): ...
    @property
    def OnNameScopeInitializationComplete(self): ...

class IXamlNamespaceResolver:
    """    """
    @overload
    def GetNamespace(self, prefix: str) -> str: ...
    @overload
    def GetNamespacePrefixes() -> Generic.IEnumerable: ...

class IXamlObjectWriterFactory:
    """    """
    @overload
    def GetParentSettings() -> XamlObjectWriterSettings: ...
    @overload
    def GetXamlObjectWriter(self, settings: XamlObjectWriterSettings) -> XamlObjectWriter: ...

class IXamlSchemaContextProvider:
    """    """
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...

class NamespaceDeclaration(object):
    """    """
    def __init__(self, ns: str, prefix: str): ...
    @property
    def Namespace(self) -> str: ...
    @property
    def Prefix(self) -> str: ...

class IXamlIndexingReader:
    """    """
    @property
    def Count(self) -> int: ...
    @property
    def CurrentIndex(self) -> int: ...
    @CurrentIndex.setter
    def CurrentIndex(self, value: System.Void): ...

class XamlBackgroundReader(XamlReader):
    """    """
    def __init__(self, wrappedReader: XamlReader): ...
    @property
    def HasLineInfo(self) -> bool: ...
    @property
    def IsEof(self) -> bool: ...
    @property
    def LineNumber(self) -> int: ...
    @property
    def LinePosition(self) -> int: ...
    @property
    def Member(self) -> XamlMember: ...
    @property
    def Namespace(self) -> NamespaceDeclaration: ...
    @property
    def NodeType(self) -> XamlNodeType: ...
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...
    @property
    def Type(self) -> XamlType: ...
    @property
    def Value(self) -> object: ...
    @overload
    def Read() -> bool: ...
    @overload
    def StartThread() -> None: ...
    @overload
    def StartThread(self, threadName: str) -> None: ...

class XamlNodeList(object):
    """    """
    @overload
    def __init__(self, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, schemaContext: XamlSchemaContext, size: int): ...
    @overload
    def Clear() -> None: ...
    @property
    def Count(self) -> int: ...
    @property
    def Writer(self) -> XamlWriter: ...
    @overload
    def GetReader() -> XamlReader: ...

class XamlNodeQueue(object):
    """    """
    def __init__(self, schemaContext: XamlSchemaContext): ...
    @property
    def Count(self) -> int: ...
    @property
    def IsEmpty(self) -> bool: ...
    @property
    def Reader(self) -> XamlReader: ...
    @property
    def Writer(self) -> XamlWriter: ...

class XamlDirective(XamlMember):
    """    """
    @overload
    def __init__(self, xamlNamespace: str, name: str): ...
    @overload
    def __init__(self, xamlNamespaces: Generic.IEnumerable, name: str, xamlType: XamlType, typeConverter: Schema.XamlValueConverter, allowedLocation: Schema.AllowedMemberLocations): ...
    @property
    def AllowedLocation(self) -> Schema.AllowedMemberLocations: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def GetXamlNamespaces() -> Generic.IList: ...
    @overload
    def ToString() -> str: ...

class XamlDeferringLoader(object):
    """    """
    @overload
    def Load(self, xamlReader: XamlReader, serviceProvider: System.IServiceProvider) -> object: ...
    @overload
    def Save(self, value: object, serviceProvider: System.IServiceProvider) -> XamlReader: ...

class XamlException(System.Exception):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception, lineNumber: int, linePosition: int): ...
    @property
    def LineNumber(self) -> int: ...
    @property
    def LinePosition(self) -> int: ...
    @property
    def Message(self) -> str: ...
    @overload
    def GetObjectData(self, info: Serialization.SerializationInfo, context: Serialization.StreamingContext) -> None: ...

class XamlParseException(XamlException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class XamlObjectWriterException(XamlException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class XamlDuplicateMemberException(XamlException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, member: XamlMember, type_: XamlType): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...
    @property
    def DuplicateMember(self) -> XamlMember: ...
    @property
    def ParentType(self) -> XamlType: ...
    @overload
    def GetObjectData(self, info: Serialization.SerializationInfo, context: Serialization.StreamingContext) -> None: ...
    @DuplicateMember.setter
    def DuplicateMember(self, value: System.Void): ...
    @ParentType.setter
    def ParentType(self, value: System.Void): ...

class XamlInternalException(XamlException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class XamlSchemaException(XamlException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class XamlObjectReaderException(XamlException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class XamlXmlWriterException(XamlException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class XamlLanguage(object):
    """    """
    @property
    def Xaml2006Namespace(self) -> str: ...
    @property
    def Xml1998Namespace(self) -> str: ...
    @property
    def AllDirectives(self) -> ObjectModel.ReadOnlyCollection: ...
    @property
    def AllTypes(self) -> ObjectModel.ReadOnlyCollection: ...
    @property
    def Arguments(self) -> XamlDirective: ...
    @property
    def Array(self) -> XamlType: ...
    @property
    def AsyncRecords(self) -> XamlDirective: ...
    @property
    def Base(self) -> XamlDirective: ...
    @property
    def Boolean(self) -> XamlType: ...
    @property
    def Byte(self) -> XamlType: ...
    @property
    def Char(self) -> XamlType: ...
    @property
    def Class(self) -> XamlDirective: ...
    @property
    def ClassAttributes(self) -> XamlDirective: ...
    @property
    def ClassModifier(self) -> XamlDirective: ...
    @property
    def Code(self) -> XamlDirective: ...
    @property
    def ConnectionId(self) -> XamlDirective: ...
    @property
    def Decimal(self) -> XamlType: ...
    @property
    def Double(self) -> XamlType: ...
    @property
    def FactoryMethod(self) -> XamlDirective: ...
    @property
    def FieldModifier(self) -> XamlDirective: ...
    @property
    def Initialization(self) -> XamlDirective: ...
    @property
    def Int16(self) -> XamlType: ...
    @property
    def Int32(self) -> XamlType: ...
    @property
    def Int64(self) -> XamlType: ...
    @property
    def Items(self) -> XamlDirective: ...
    @property
    def Key(self) -> XamlDirective: ...
    @property
    def Lang(self) -> XamlDirective: ...
    @property
    def Member(self) -> XamlType: ...
    @property
    def Members(self) -> XamlDirective: ...
    @property
    def Name(self) -> XamlDirective: ...
    @property
    def Null(self) -> XamlType: ...
    @property
    def Object(self) -> XamlType: ...
    @property
    def PositionalParameters(self) -> XamlDirective: ...
    @property
    def Property(self) -> XamlType: ...
    @property
    def Reference(self) -> XamlType: ...
    @property
    def Shared(self) -> XamlDirective: ...
    @property
    def Single(self) -> XamlType: ...
    @property
    def Space(self) -> XamlDirective: ...
    @property
    def Static(self) -> XamlType: ...
    @property
    def String(self) -> XamlType: ...
    @property
    def Subclass(self) -> XamlDirective: ...
    @property
    def SynchronousMode(self) -> XamlDirective: ...
    @property
    def TimeSpan(self) -> XamlType: ...
    @property
    def Type(self) -> XamlType: ...
    @property
    def TypeArguments(self) -> XamlDirective: ...
    @property
    def Uid(self) -> XamlDirective: ...
    @property
    def UnknownContent(self) -> XamlDirective: ...
    @property
    def Uri(self) -> XamlType: ...
    @property
    def XamlNamespaces(self) -> Generic.IList: ...
    @property
    def XData(self) -> XamlType: ...
    @property
    def XmlNamespaces(self) -> Generic.IList: ...

class XamlMember(object):
    """    """
    @overload
    def __init__(self, propertyInfo: Reflection.PropertyInfo, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, eventInfo: Reflection.EventInfo, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, name: str, declaringType: XamlType, isAttachable: bool): ...
    @overload
    def __init__(self, propertyInfo: Reflection.PropertyInfo, schemaContext: XamlSchemaContext, invoker: Schema.XamlMemberInvoker): ...
    @overload
    def __init__(self, eventInfo: Reflection.EventInfo, schemaContext: XamlSchemaContext, invoker: Schema.XamlMemberInvoker): ...
    @overload
    def __init__(self, attachableEventName: str, adder: Reflection.MethodInfo, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, attachablePropertyName: str, getter: Reflection.MethodInfo, setter: Reflection.MethodInfo, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, attachableEventName: str, adder: Reflection.MethodInfo, schemaContext: XamlSchemaContext, invoker: Schema.XamlMemberInvoker): ...
    @overload
    def __init__(self, attachablePropertyName: str, getter: Reflection.MethodInfo, setter: Reflection.MethodInfo, schemaContext: XamlSchemaContext, invoker: Schema.XamlMemberInvoker): ...
    @overload
    def Equals(self, other: XamlMember) -> bool: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def DeclaringType(self) -> XamlType: ...
    @property
    def DeferringLoader(self) -> Schema.XamlValueConverter: ...
    @property
    def DependsOn(self) -> Generic.IList: ...
    @property
    def Invoker(self) -> Schema.XamlMemberInvoker: ...
    @property
    def IsAmbient(self) -> bool: ...
    @property
    def IsAttachable(self) -> bool: ...
    @property
    def IsDirective(self) -> bool: ...
    @property
    def IsEvent(self) -> bool: ...
    @property
    def IsNameValid(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsReadPublic(self) -> bool: ...
    @property
    def IsUnknown(self) -> bool: ...
    @property
    def IsWriteOnly(self) -> bool: ...
    @property
    def IsWritePublic(self) -> bool: ...
    @property
    def MarkupExtensionBracketCharacters(self) -> Generic.IReadOnlyDictionary: ...
    @property
    def Name(self) -> str: ...
    @property
    def PreferredXamlNamespace(self) -> str: ...
    @property
    def SerializationVisibility(self) -> ComponentModel.DesignerSerializationVisibility: ...
    @property
    def TargetType(self) -> XamlType: ...
    @property
    def Type(self) -> XamlType: ...
    @property
    def TypeConverter(self) -> Schema.XamlValueConverter: ...
    @property
    def UnderlyingMember(self) -> Reflection.MemberInfo: ...
    @property
    def ValueSerializer(self) -> Schema.XamlValueConverter: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def GetXamlNamespaces() -> Generic.IList: ...
    @overload
    def ToString() -> str: ...

class XamlObjectReader(XamlReader):
    """    """
    @overload
    def __init__(self, instance: object): ...
    @overload
    def __init__(self, instance: object, settings: XamlObjectReaderSettings): ...
    @overload
    def __init__(self, instance: object, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, instance: object, schemaContext: XamlSchemaContext, settings: XamlObjectReaderSettings): ...
    @property
    def Instance(self) -> object: ...
    @property
    def IsEof(self) -> bool: ...
    @property
    def Member(self) -> XamlMember: ...
    @property
    def Namespace(self) -> NamespaceDeclaration: ...
    @property
    def NodeType(self) -> XamlNodeType: ...
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...
    @property
    def Type(self) -> XamlType: ...
    @property
    def Value(self) -> object: ...
    @overload
    def Read() -> bool: ...

class XamlObjectReaderSettings(XamlReaderSettings):
    """    """
    def __init__(self): ...
    @property
    def RequireExplicitContentVisibility(self) -> bool: ...
    @RequireExplicitContentVisibility.setter
    def RequireExplicitContentVisibility(self, value: System.Void): ...

class XamlReader(object):
    """    """
    @overload
    def Close() -> None: ...
    @property
    def IsEof(self) -> bool: ...
    @property
    def Member(self) -> XamlMember: ...
    @property
    def Namespace(self) -> NamespaceDeclaration: ...
    @property
    def NodeType(self) -> XamlNodeType: ...
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...
    @property
    def Type(self) -> XamlType: ...
    @property
    def Value(self) -> object: ...
    @overload
    def Read() -> bool: ...
    @overload
    def ReadSubtree() -> XamlReader: ...
    @overload
    def Skip() -> None: ...

class XamlSchemaContext(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, settings: XamlSchemaContextSettings): ...
    @overload
    def __init__(self, referenceAssemblies: Generic.IEnumerable): ...
    @overload
    def __init__(self, referenceAssemblies: Generic.IEnumerable, settings: XamlSchemaContextSettings): ...
    @property
    def FullyQualifyAssemblyNamesInClrNamespaces(self) -> bool: ...
    @property
    def ReferenceAssemblies(self) -> Generic.IList: ...
    @property
    def SupportMarkupExtensionsWithDuplicateArity(self) -> bool: ...
    @overload
    def GetAllXamlNamespaces() -> Generic.IEnumerable: ...
    @overload
    def GetAllXamlTypes(self, xamlNamespace: str) -> Generic.ICollection: ...
    @overload
    def GetPreferredPrefix(self, xmlns: str) -> str: ...
    @overload
    def GetXamlDirective(self, xamlNamespace: str, name: str) -> XamlDirective: ...
    @overload
    def GetXamlType(self, xamlTypeName: Schema.XamlTypeName) -> XamlType: ...
    @overload
    def GetXamlType(self, type_: System.Type) -> XamlType: ...
    @overload
    def TryGetCompatibleXamlNamespace(self, xamlNamespace: str) -> (bool, str): ...

class XamlSchemaContextSettings(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, settings: XamlSchemaContextSettings): ...
    @property
    def FullyQualifyAssemblyNamesInClrNamespaces(self) -> bool: ...
    @property
    def SupportMarkupExtensionsWithDuplicateArity(self) -> bool: ...
    @FullyQualifyAssemblyNamesInClrNamespaces.setter
    def FullyQualifyAssemblyNamesInClrNamespaces(self, value: System.Void): ...
    @SupportMarkupExtensionsWithDuplicateArity.setter
    def SupportMarkupExtensionsWithDuplicateArity(self, value: System.Void): ...

class XamlServices(object):
    """    """
    @overload
    @staticmethod
    def Load(fileName: str) -> object: ...
    @overload
    @staticmethod
    def Load(stream: IO.Stream) -> object: ...
    @overload
    @staticmethod
    def Load(textReader: IO.TextReader) -> object: ...
    @overload
    @staticmethod
    def Load(xmlReader: Xml.XmlReader) -> object: ...
    @overload
    @staticmethod
    def Load(xamlReader: XamlReader) -> object: ...
    @overload
    @staticmethod
    def Parse(xaml: str) -> object: ...
    @overload
    @staticmethod
    def Save(instance: object) -> str: ...
    @overload
    @staticmethod
    def Save(fileName: str, instance: object) -> None: ...
    @overload
    @staticmethod
    def Save(stream: IO.Stream, instance: object) -> None: ...
    @overload
    @staticmethod
    def Save(writer: IO.TextWriter, instance: object) -> None: ...
    @overload
    @staticmethod
    def Save(writer: Xml.XmlWriter, instance: object) -> None: ...
    @overload
    @staticmethod
    def Save(writer: XamlWriter, instance: object) -> None: ...
    @overload
    @staticmethod
    def Transform(xamlReader: XamlReader, xamlWriter: XamlWriter) -> None: ...
    @overload
    @staticmethod
    def Transform(xamlReader: XamlReader, xamlWriter: XamlWriter, closeWriter: bool) -> None: ...

class XamlType(object):
    """    """
    @overload
    def __init__(self, underlyingType: System.Type, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, underlyingType: System.Type, schemaContext: XamlSchemaContext, invoker: Schema.XamlTypeInvoker): ...
    @overload
    def __init__(self, unknownTypeNamespace: str, unknownTypeName: str, typeArguments: Generic.IList, schemaContext: XamlSchemaContext): ...
    @overload
    def CanAssignTo(self, xamlType: XamlType) -> bool: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def Equals(self, other: XamlType) -> bool: ...
    @property
    def AllowedContentTypes(self) -> Generic.IList: ...
    @property
    def BaseType(self) -> XamlType: ...
    @property
    def ConstructionRequiresArguments(self) -> bool: ...
    @property
    def ContentProperty(self) -> XamlMember: ...
    @property
    def ContentWrappers(self) -> Generic.IList: ...
    @property
    def DeferringLoader(self) -> Schema.XamlValueConverter: ...
    @property
    def Invoker(self) -> Schema.XamlTypeInvoker: ...
    @property
    def IsAmbient(self) -> bool: ...
    @property
    def IsArray(self) -> bool: ...
    @property
    def IsCollection(self) -> bool: ...
    @property
    def IsConstructible(self) -> bool: ...
    @property
    def IsDictionary(self) -> bool: ...
    @property
    def IsGeneric(self) -> bool: ...
    @property
    def IsMarkupExtension(self) -> bool: ...
    @property
    def IsNameScope(self) -> bool: ...
    @property
    def IsNameValid(self) -> bool: ...
    @property
    def IsNullable(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsUnknown(self) -> bool: ...
    @property
    def IsUsableDuringInitialization(self) -> bool: ...
    @property
    def IsWhitespaceSignificantCollection(self) -> bool: ...
    @property
    def IsXData(self) -> bool: ...
    @property
    def ItemType(self) -> XamlType: ...
    @property
    def KeyType(self) -> XamlType: ...
    @property
    def MarkupExtensionReturnType(self) -> XamlType: ...
    @property
    def Name(self) -> str: ...
    @property
    def PreferredXamlNamespace(self) -> str: ...
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...
    @property
    def TrimSurroundingWhitespace(self) -> bool: ...
    @property
    def TypeArguments(self) -> Generic.IList: ...
    @property
    def TypeConverter(self) -> Schema.XamlValueConverter: ...
    @property
    def UnderlyingType(self) -> System.Type: ...
    @property
    def ValueSerializer(self) -> Schema.XamlValueConverter: ...
    @overload
    def GetAliasedProperty(self, directive: XamlDirective) -> XamlMember: ...
    @overload
    def GetAllAttachableMembers() -> Generic.ICollection: ...
    @overload
    def GetAllMembers() -> Generic.ICollection: ...
    @overload
    def GetAttachableMember(self, name: str) -> XamlMember: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def GetMember(self, name: str) -> XamlMember: ...
    @overload
    def GetPositionalParameters(self, parameterCount: int) -> Generic.IList: ...
    @overload
    def GetXamlNamespaces() -> Generic.IList: ...
    @overload
    def ToString() -> str: ...

class XamlWriter(object):
    """    """
    @overload
    def Close() -> None: ...
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...
    @overload
    def WriteEndMember() -> None: ...
    @overload
    def WriteEndObject() -> None: ...
    @overload
    def WriteGetObject() -> None: ...
    @overload
    def WriteNamespace(self, namespaceDeclaration: NamespaceDeclaration) -> None: ...
    @overload
    def WriteNode(self, reader: XamlReader) -> None: ...
    @overload
    def WriteStartMember(self, xamlMember: XamlMember) -> None: ...
    @overload
    def WriteStartObject(self, type_: XamlType) -> None: ...
    @overload
    def WriteValue(self, value: object) -> None: ...

class XamlWriterSettings(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, settings: XamlWriterSettings): ...

class XamlXmlWriter(XamlWriter):
    """    """
    @overload
    def __init__(self, stream: IO.Stream, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, textWriter: IO.TextWriter, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, xmlWriter: Xml.XmlWriter, schemaContext: XamlSchemaContext): ...
    @overload
    def __init__(self, stream: IO.Stream, schemaContext: XamlSchemaContext, settings: XamlXmlWriterSettings): ...
    @overload
    def __init__(self, textWriter: IO.TextWriter, schemaContext: XamlSchemaContext, settings: XamlXmlWriterSettings): ...
    @overload
    def __init__(self, xmlWriter: Xml.XmlWriter, schemaContext: XamlSchemaContext, settings: XamlXmlWriterSettings): ...
    @overload
    def Flush() -> None: ...
    @property
    def SchemaContext(self) -> XamlSchemaContext: ...
    @property
    def Settings(self) -> XamlXmlWriterSettings: ...
    @overload
    def WriteEndMember() -> None: ...
    @overload
    def WriteEndObject() -> None: ...
    @overload
    def WriteGetObject() -> None: ...
    @overload
    def WriteNamespace(self, namespaceDeclaration: NamespaceDeclaration) -> None: ...
    @overload
    def WriteStartMember(self, property_: XamlMember) -> None: ...
    @overload
    def WriteStartObject(self, type_: XamlType) -> None: ...
    @overload
    def WriteValue(self, value: object) -> None: ...

class XamlXmlWriterSettings(XamlWriterSettings):
    """    """
    def __init__(self): ...
    @overload
    def Copy() -> XamlXmlWriterSettings: ...
    @property
    def AssumeValidInput(self) -> bool: ...
    @property
    def CloseOutput(self) -> bool: ...
    @AssumeValidInput.setter
    def AssumeValidInput(self, value: System.Void): ...
    @CloseOutput.setter
    def CloseOutput(self, value: System.Void): ...

# endregion

