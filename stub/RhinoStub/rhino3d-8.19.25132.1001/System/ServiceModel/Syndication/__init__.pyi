"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Atom10FeedFormatter", "Atom10ItemFormatter", "AtomPub10CategoriesDocumentFormatter", "AtomPub10ServiceDocumentFormatter", "CategoriesDocument", "CategoriesDocumentFormatter", "InlineCategoriesDocument", "ReferencedCategoriesDocument", "ResourceCollectionInfo", "Rss20FeedFormatter", "Rss20ItemFormatter", "ServiceDocument", "ServiceDocumentFormatter", "SyndicationCategory", "SyndicationContent", "SyndicationElementExtension", "SyndicationElementExtensionCollection", "SyndicationFeed", "TryParseDateTimeCallback", "TryParseUriCallback", "SyndicationFeedFormatter", "SyndicationItem", "SyndicationItemFormatter", "SyndicationLink", "SyndicationPerson", "SyndicationTextInput", "SyndicationVersions", "TextSyndicationContent", "TextSyndicationContentKind", "UrlSyndicationContent", "Workspace", "XmlDateTimeData", "XmlSyndicationContent", "XmlUriData"]
# endregion

# region: Imports
from System import Xml
from System.Collections import Generic
from System.Collections import ObjectModel
from System.Runtime import CompilerServices
from System.Runtime import Serialization
from System.Xml import Serialization
from typing import overload
import enum
import System
# endregion

# region: System.ServiceModel.Syndication, Version=7.0.0.0

class Atom10FeedFormatter(SyndicationFeedFormatter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, feedTypeToCreate: System.Type): ...
    @overload
    def __init__(self, feedToWrite: SyndicationFeed): ...
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def PreserveAttributeExtensions(self) -> bool: ...
    @property
    def PreserveElementExtensions(self) -> bool: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @PreserveAttributeExtensions.setter
    def PreserveAttributeExtensions(self, value: System.Void): ...
    @PreserveElementExtensions.setter
    def PreserveElementExtensions(self, value: System.Void): ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class Atom10FeedFormatter(Atom10FeedFormatter):
    """    Atom10FeedFormatter[TSyndicationFeed]
    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, feedToWrite: TSyndicationFeed): ...

class Atom10ItemFormatter(SyndicationItemFormatter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, itemTypeToCreate: System.Type): ...
    @overload
    def __init__(self, itemToWrite: SyndicationItem): ...
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def PreserveAttributeExtensions(self) -> bool: ...
    @property
    def PreserveElementExtensions(self) -> bool: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @PreserveAttributeExtensions.setter
    def PreserveAttributeExtensions(self, value: System.Void): ...
    @PreserveElementExtensions.setter
    def PreserveElementExtensions(self, value: System.Void): ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class Atom10ItemFormatter(Atom10ItemFormatter):
    """    Atom10ItemFormatter[TSyndicationItem]
    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, itemToWrite: TSyndicationItem): ...

class AtomPub10CategoriesDocumentFormatter(CategoriesDocumentFormatter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, documentToWrite: CategoriesDocument): ...
    @overload
    def __init__(self, inlineDocumentType: System.Type, referencedDocumentType: System.Type): ...
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class AtomPub10ServiceDocumentFormatter(ServiceDocumentFormatter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, documentTypeToCreate: System.Type): ...
    @overload
    def __init__(self, documentToWrite: ServiceDocument): ...
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class AtomPub10ServiceDocumentFormatter(AtomPub10ServiceDocumentFormatter):
    """    AtomPub10ServiceDocumentFormatter[TServiceDocument]
    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, documentToWrite: TServiceDocument): ...

class CategoriesDocument(object):
    """    """
    @overload
    @staticmethod
    def Create(categories: ObjectModel.Collection) -> InlineCategoriesDocument: ...
    @overload
    @staticmethod
    def Create(linkToCategoriesDocument: System.Uri) -> ReferencedCategoriesDocument: ...
    @overload
    @staticmethod
    def Create(categories: ObjectModel.Collection, isFixed: bool, scheme: str) -> InlineCategoriesDocument: ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def BaseUri(self) -> System.Uri: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Language(self) -> str: ...
    @overload
    def GetFormatter() -> CategoriesDocumentFormatter: ...
    @overload
    @staticmethod
    def Load(reader: Xml.XmlReader) -> CategoriesDocument: ...
    @overload
    def Save(self, writer: Xml.XmlWriter) -> None: ...
    @BaseUri.setter
    def BaseUri(self, value: System.Void): ...
    @Language.setter
    def Language(self, value: System.Void): ...

class CategoriesDocumentFormatter(object):
    """    """
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def Document(self) -> CategoriesDocument: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class InlineCategoriesDocument(CategoriesDocument):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, categories: Generic.IEnumerable): ...
    @overload
    def __init__(self, categories: Generic.IEnumerable, isFixed: bool, scheme: str): ...
    @property
    def Categories(self) -> ObjectModel.Collection: ...
    @property
    def IsFixed(self) -> bool: ...
    @property
    def Scheme(self) -> str: ...
    @IsFixed.setter
    def IsFixed(self, value: System.Void): ...
    @Scheme.setter
    def Scheme(self, value: System.Void): ...

class ReferencedCategoriesDocument(CategoriesDocument):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, link: System.Uri): ...
    @property
    def Link(self) -> System.Uri: ...
    @Link.setter
    def Link(self, value: System.Void): ...

class ResourceCollectionInfo(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, title: str, link: System.Uri): ...
    @overload
    def __init__(self, title: TextSyndicationContent, link: System.Uri): ...
    @overload
    def __init__(self, title: TextSyndicationContent, link: System.Uri, categories: Generic.IEnumerable, allowsNewEntries: bool): ...
    @overload
    def __init__(self, title: TextSyndicationContent, link: System.Uri, categories: Generic.IEnumerable, accepts: Generic.IEnumerable): ...
    @property
    def Accepts(self) -> ObjectModel.Collection: ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def BaseUri(self) -> System.Uri: ...
    @property
    def Categories(self) -> ObjectModel.Collection: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Link(self) -> System.Uri: ...
    @property
    def Title(self) -> TextSyndicationContent: ...
    @BaseUri.setter
    def BaseUri(self, value: System.Void): ...
    @Link.setter
    def Link(self, value: System.Void): ...
    @Title.setter
    def Title(self, value: System.Void): ...

class Rss20FeedFormatter(SyndicationFeedFormatter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, feedTypeToCreate: System.Type): ...
    @overload
    def __init__(self, feedToWrite: SyndicationFeed): ...
    @overload
    def __init__(self, feedToWrite: SyndicationFeed, serializeExtensionsAsAtom: bool): ...
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def PreserveAttributeExtensions(self) -> bool: ...
    @property
    def PreserveElementExtensions(self) -> bool: ...
    @property
    def SerializeExtensionsAsAtom(self) -> bool: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @PreserveAttributeExtensions.setter
    def PreserveAttributeExtensions(self, value: System.Void): ...
    @PreserveElementExtensions.setter
    def PreserveElementExtensions(self, value: System.Void): ...
    @SerializeExtensionsAsAtom.setter
    def SerializeExtensionsAsAtom(self, value: System.Void): ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class Rss20FeedFormatter(Rss20FeedFormatter):
    """    Rss20FeedFormatter[TSyndicationFeed]
    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, feedToWrite: TSyndicationFeed): ...
    @overload
    def __init__(self, feedToWrite: TSyndicationFeed, serializeExtensionsAsAtom: bool): ...

class Rss20ItemFormatter(SyndicationItemFormatter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, itemTypeToCreate: System.Type): ...
    @overload
    def __init__(self, itemToWrite: SyndicationItem): ...
    @overload
    def __init__(self, itemToWrite: SyndicationItem, serializeExtensionsAsAtom: bool): ...
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def PreserveAttributeExtensions(self) -> bool: ...
    @property
    def PreserveElementExtensions(self) -> bool: ...
    @property
    def SerializeExtensionsAsAtom(self) -> bool: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @PreserveAttributeExtensions.setter
    def PreserveAttributeExtensions(self, value: System.Void): ...
    @PreserveElementExtensions.setter
    def PreserveElementExtensions(self, value: System.Void): ...
    @SerializeExtensionsAsAtom.setter
    def SerializeExtensionsAsAtom(self, value: System.Void): ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class Rss20ItemFormatter(Rss20ItemFormatter):
    """    Rss20ItemFormatter[TSyndicationItem]
    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, itemToWrite: TSyndicationItem): ...
    @overload
    def __init__(self, itemToWrite: TSyndicationItem, serializeExtensionsAsAtom: bool): ...

class ServiceDocument(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, workspaces: Generic.IEnumerable): ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def BaseUri(self) -> System.Uri: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Language(self) -> str: ...
    @property
    def Workspaces(self) -> ObjectModel.Collection: ...
    @overload
    def GetFormatter() -> ServiceDocumentFormatter: ...
    @overload
    @staticmethod
    def Load(reader: Xml.XmlReader) -> ServiceDocument: ...
    @overload
    @staticmethod
    def Load(reader: Xml.XmlReader) -> TServiceDocument: ...
    @overload
    def Save(self, writer: Xml.XmlWriter) -> None: ...
    @BaseUri.setter
    def BaseUri(self, value: System.Void): ...
    @Language.setter
    def Language(self, value: System.Void): ...

class ServiceDocumentFormatter(object):
    """    """
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def Document(self) -> ServiceDocument: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class SyndicationCategory(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, name: str): ...
    @overload
    def __init__(self, name: str, scheme: str, label: str): ...
    @overload
    def Clone() -> SyndicationCategory: ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Label(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Scheme(self) -> str: ...
    @Label.setter
    def Label(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @Scheme.setter
    def Scheme(self, value: System.Void): ...

class SyndicationContent(object):
    """    """
    @overload
    def Clone() -> SyndicationContent: ...
    @overload
    @staticmethod
    def CreateHtmlContent(content: str) -> TextSyndicationContent: ...
    @overload
    @staticmethod
    def CreatePlaintextContent(content: str) -> TextSyndicationContent: ...
    @overload
    @staticmethod
    def CreateUrlContent(url: System.Uri, mediaType: str) -> UrlSyndicationContent: ...
    @overload
    @staticmethod
    def CreateXhtmlContent(content: str) -> TextSyndicationContent: ...
    @overload
    @staticmethod
    def CreateXmlContent(dataContractObject: object) -> XmlSyndicationContent: ...
    @overload
    @staticmethod
    def CreateXmlContent(xmlReader: Xml.XmlReader) -> XmlSyndicationContent: ...
    @overload
    @staticmethod
    def CreateXmlContent(dataContractObject: object, dataContractSerializer: Serialization.XmlObjectSerializer) -> XmlSyndicationContent: ...
    @overload
    @staticmethod
    def CreateXmlContent(xmlSerializerObject: object, serializer: Serialization.XmlSerializer) -> XmlSyndicationContent: ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def Type(self) -> str: ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter, outerElementName: str, outerElementNamespace: str) -> None: ...

class SyndicationElementExtension(object):
    """    """
    @overload
    def __init__(self, xmlReader: Xml.XmlReader): ...
    @overload
    def __init__(self, dataContractExtension: object): ...
    @overload
    def __init__(self, dataContractExtension: object, dataContractSerializer: Serialization.XmlObjectSerializer): ...
    @overload
    def __init__(self, xmlSerializerExtension: object, serializer: Serialization.XmlSerializer): ...
    @overload
    def __init__(self, outerName: str, outerNamespace: str, dataContractExtension: object): ...
    @overload
    def __init__(self, outerName: str, outerNamespace: str, dataContractExtension: object, dataContractSerializer: Serialization.XmlObjectSerializer): ...
    @property
    def OuterName(self) -> str: ...
    @property
    def OuterNamespace(self) -> str: ...
    @overload
    def GetObject() -> TExtension: ...
    @overload
    def GetObject(self, serializer: Serialization.XmlObjectSerializer) -> TExtension: ...
    @overload
    def GetObject(self, serializer: Serialization.XmlSerializer) -> TExtension: ...
    @overload
    def GetReader() -> Xml.XmlReader: ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class SyndicationElementExtensionCollection(ObjectModel.Collection):
    """    """
    @overload
    def Add(self, extension: object) -> None: ...
    @overload
    def Add(self, xmlReader: Xml.XmlReader) -> None: ...
    @overload
    def Add(self, dataContractExtension: object, serializer: Serialization.DataContractSerializer) -> None: ...
    @overload
    def Add(self, xmlSerializerExtension: object, serializer: Serialization.XmlSerializer) -> None: ...
    @overload
    def Add(self, outerName: str, outerNamespace: str, dataContractExtension: object) -> None: ...
    @overload
    def Add(self, outerName: str, outerNamespace: str, dataContractExtension: object, dataContractSerializer: Serialization.XmlObjectSerializer) -> None: ...
    @overload
    def GetReaderAtElementExtensions() -> Xml.XmlReader: ...
    @overload
    def ReadElementExtensions(self, extensionName: str, extensionNamespace: str) -> ObjectModel.Collection: ...
    @overload
    def ReadElementExtensions(self, extensionName: str, extensionNamespace: str, serializer: Serialization.XmlObjectSerializer) -> ObjectModel.Collection: ...
    @overload
    def ReadElementExtensions(self, extensionName: str, extensionNamespace: str, serializer: Serialization.XmlSerializer) -> ObjectModel.Collection: ...

class SyndicationFeed(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, items: Generic.IEnumerable): ...
    @overload
    def __init__(self, title: str, description: str, feedAlternateLink: System.Uri): ...
    @overload
    def __init__(self, title: str, description: str, feedAlternateLink: System.Uri, items: Generic.IEnumerable): ...
    @overload
    def __init__(self, title: str, description: str, feedAlternateLink: System.Uri, id_: str, lastUpdatedTime: System.DateTimeOffset): ...
    @overload
    def __init__(self, title: str, description: str, feedAlternateLink: System.Uri, id_: str, lastUpdatedTime: System.DateTimeOffset, items: Generic.IEnumerable): ...
    @overload
    def Clone(self, cloneItems: bool) -> SyndicationFeed: ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def Authors(self) -> ObjectModel.Collection: ...
    @property
    def BaseUri(self) -> System.Uri: ...
    @property
    def Categories(self) -> ObjectModel.Collection: ...
    @property
    def Contributors(self) -> ObjectModel.Collection: ...
    @property
    def Copyright(self) -> TextSyndicationContent: ...
    @property
    def Description(self) -> TextSyndicationContent: ...
    @property
    def Documentation(self) -> SyndicationLink: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Generator(self) -> str: ...
    @property
    def Id(self) -> str: ...
    @property
    def ImageUrl(self) -> System.Uri: ...
    @property
    def Items(self) -> Generic.IEnumerable: ...
    @property
    def Language(self) -> str: ...
    @property
    def LastUpdatedTime(self) -> System.DateTimeOffset: ...
    @property
    def Links(self) -> ObjectModel.Collection: ...
    @property
    def SkipDays(self) -> ObjectModel.Collection: ...
    @property
    def SkipHours(self) -> ObjectModel.Collection: ...
    @property
    def TextInput(self) -> SyndicationTextInput: ...
    @property
    def TimeToLive(self) -> System.Nullable: ...
    @property
    def Title(self) -> TextSyndicationContent: ...
    @overload
    def GetAtom10Formatter() -> Atom10FeedFormatter: ...
    @overload
    def GetRss20Formatter() -> Rss20FeedFormatter: ...
    @overload
    def GetRss20Formatter(self, serializeExtensionsAsAtom: bool) -> Rss20FeedFormatter: ...
    @overload
    @staticmethod
    def Load(reader: Xml.XmlReader) -> TSyndicationFeed: ...
    @overload
    @staticmethod
    def Load(reader: Xml.XmlReader) -> SyndicationFeed: ...
    @overload
    def SaveAsAtom10(self, writer: Xml.XmlWriter) -> None: ...
    @overload
    def SaveAsRss20(self, writer: Xml.XmlWriter) -> None: ...
    @BaseUri.setter
    def BaseUri(self, value: System.Void): ...
    @Copyright.setter
    def Copyright(self, value: System.Void): ...
    @Description.setter
    def Description(self, value: System.Void): ...
    @Documentation.setter
    def Documentation(self, value: System.Void): ...
    @Generator.setter
    def Generator(self, value: System.Void): ...
    @Id.setter
    def Id(self, value: System.Void): ...
    @ImageUrl.setter
    def ImageUrl(self, value: System.Void): ...
    @Items.setter
    def Items(self, value: System.Void): ...
    @Language.setter
    def Language(self, value: System.Void): ...
    @LastUpdatedTime.setter
    def LastUpdatedTime(self, value: System.Void): ...
    @TextInput.setter
    def TextInput(self, value: System.Void): ...
    @TimeToLive.setter
    def TimeToLive(self, value: System.Void): ...
    @Title.setter
    def Title(self, value: System.Void): ...

class TryParseDateTimeCallback(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, data: XmlDateTimeData, callback: System.AsyncCallback, object_: object) -> (System.IAsyncResult, System.DateTimeOffset): ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> (bool, System.DateTimeOffset): ...
    @overload
    def Invoke(self, data: XmlDateTimeData) -> (bool, System.DateTimeOffset): ...

class TryParseUriCallback(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, data: XmlUriData, callback: System.AsyncCallback, object_: object) -> (System.IAsyncResult, System.Uri): ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> (bool, System.Uri): ...
    @overload
    def Invoke(self, data: XmlUriData) -> (bool, System.Uri): ...

class SyndicationFeedFormatter(object):
    """    """
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def DateTimeParser(self) -> TryParseDateTimeCallback: ...
    @property
    def Feed(self) -> SyndicationFeed: ...
    @property
    def UriParser(self) -> TryParseUriCallback: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @DateTimeParser.setter
    def DateTimeParser(self, value: System.Void): ...
    @UriParser.setter
    def UriParser(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class SyndicationItem(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, title: str, content: str, itemAlternateLink: System.Uri): ...
    @overload
    def __init__(self, title: str, content: str, itemAlternateLink: System.Uri, id_: str, lastUpdatedTime: System.DateTimeOffset): ...
    @overload
    def __init__(self, title: str, content: SyndicationContent, itemAlternateLink: System.Uri, id_: str, lastUpdatedTime: System.DateTimeOffset): ...
    @overload
    def AddPermalink(self, permalink: System.Uri) -> None: ...
    @overload
    def Clone() -> SyndicationItem: ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def Authors(self) -> ObjectModel.Collection: ...
    @property
    def BaseUri(self) -> System.Uri: ...
    @property
    def Categories(self) -> ObjectModel.Collection: ...
    @property
    def Content(self) -> SyndicationContent: ...
    @property
    def Contributors(self) -> ObjectModel.Collection: ...
    @property
    def Copyright(self) -> TextSyndicationContent: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Id(self) -> str: ...
    @property
    def LastUpdatedTime(self) -> System.DateTimeOffset: ...
    @property
    def Links(self) -> ObjectModel.Collection: ...
    @property
    def PublishDate(self) -> System.DateTimeOffset: ...
    @property
    def SourceFeed(self) -> SyndicationFeed: ...
    @property
    def Summary(self) -> TextSyndicationContent: ...
    @property
    def Title(self) -> TextSyndicationContent: ...
    @overload
    def GetAtom10Formatter() -> Atom10ItemFormatter: ...
    @overload
    def GetRss20Formatter() -> Rss20ItemFormatter: ...
    @overload
    def GetRss20Formatter(self, serializeExtensionsAsAtom: bool) -> Rss20ItemFormatter: ...
    @overload
    @staticmethod
    def Load(reader: Xml.XmlReader) -> SyndicationItem: ...
    @overload
    @staticmethod
    def Load(reader: Xml.XmlReader) -> TSyndicationItem: ...
    @overload
    def SaveAsAtom10(self, writer: Xml.XmlWriter) -> None: ...
    @overload
    def SaveAsRss20(self, writer: Xml.XmlWriter) -> None: ...
    @BaseUri.setter
    def BaseUri(self, value: System.Void): ...
    @Content.setter
    def Content(self, value: System.Void): ...
    @Copyright.setter
    def Copyright(self, value: System.Void): ...
    @Id.setter
    def Id(self, value: System.Void): ...
    @LastUpdatedTime.setter
    def LastUpdatedTime(self, value: System.Void): ...
    @PublishDate.setter
    def PublishDate(self, value: System.Void): ...
    @SourceFeed.setter
    def SourceFeed(self, value: System.Void): ...
    @Summary.setter
    def Summary(self, value: System.Void): ...
    @Title.setter
    def Title(self, value: System.Void): ...

class SyndicationItemFormatter(object):
    """    """
    @overload
    def CanRead(self, reader: Xml.XmlReader) -> bool: ...
    @property
    def Item(self) -> SyndicationItem: ...
    @property
    def Version(self) -> str: ...
    @overload
    def ReadFrom(self, reader: Xml.XmlReader) -> None: ...
    @overload
    def ToString() -> str: ...
    @overload
    def WriteTo(self, writer: Xml.XmlWriter) -> None: ...

class SyndicationLink(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, uri: System.Uri): ...
    @overload
    def __init__(self, uri: System.Uri, relationshipType: str, title: str, mediaType: str, length: System.Int64): ...
    @overload
    def Clone() -> SyndicationLink: ...
    @overload
    @staticmethod
    def CreateAlternateLink(uri: System.Uri) -> SyndicationLink: ...
    @overload
    @staticmethod
    def CreateAlternateLink(uri: System.Uri, mediaType: str) -> SyndicationLink: ...
    @overload
    @staticmethod
    def CreateMediaEnclosureLink(uri: System.Uri, mediaType: str, length: System.Int64) -> SyndicationLink: ...
    @overload
    @staticmethod
    def CreateSelfLink(uri: System.Uri) -> SyndicationLink: ...
    @overload
    @staticmethod
    def CreateSelfLink(uri: System.Uri, mediaType: str) -> SyndicationLink: ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def BaseUri(self) -> System.Uri: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Length(self) -> System.Int64: ...
    @property
    def MediaType(self) -> str: ...
    @property
    def RelationshipType(self) -> str: ...
    @property
    def Title(self) -> str: ...
    @property
    def Uri(self) -> System.Uri: ...
    @overload
    def GetAbsoluteUri() -> System.Uri: ...
    @BaseUri.setter
    def BaseUri(self, value: System.Void): ...
    @Length.setter
    def Length(self, value: System.Void): ...
    @MediaType.setter
    def MediaType(self, value: System.Void): ...
    @RelationshipType.setter
    def RelationshipType(self, value: System.Void): ...
    @Title.setter
    def Title(self, value: System.Void): ...
    @Uri.setter
    def Uri(self, value: System.Void): ...

class SyndicationPerson(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, email: str): ...
    @overload
    def __init__(self, email: str, name: str, uri: str): ...
    @overload
    def Clone() -> SyndicationPerson: ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Email(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Uri(self) -> str: ...
    @Email.setter
    def Email(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @Uri.setter
    def Uri(self, value: System.Void): ...

class SyndicationTextInput(object):
    """    """
    def __init__(self): ...
    @property
    def Description(self) -> str: ...
    @property
    def Link(self) -> SyndicationLink: ...
    @property
    def Name(self) -> str: ...
    @property
    def Title(self) -> str: ...
    @Description.setter
    def Description(self, value: System.Void): ...
    @Link.setter
    def Link(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @Title.setter
    def Title(self, value: System.Void): ...

class SyndicationVersions(object):
    """    """
    @property
    def Atom10(self) -> str: ...
    @property
    def Rss20(self) -> str: ...

class TextSyndicationContent(SyndicationContent):
    """    """
    @overload
    def __init__(self, text: str): ...
    @overload
    def __init__(self, text: str, textKind: TextSyndicationContentKind): ...
    @overload
    def Clone() -> SyndicationContent: ...
    @property
    def Text(self) -> str: ...
    @property
    def Type(self) -> str: ...

class TextSyndicationContentKind(enum.Enum):
    Plaintext = 0
    Html = 1
    XHtml = 2

class UrlSyndicationContent(SyndicationContent):
    """    """
    def __init__(self, url: System.Uri, mediaType: str): ...
    @overload
    def Clone() -> SyndicationContent: ...
    @property
    def Type(self) -> str: ...
    @property
    def Url(self) -> System.Uri: ...

class Workspace(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, title: str, collections: Generic.IEnumerable): ...
    @overload
    def __init__(self, title: TextSyndicationContent, collections: Generic.IEnumerable): ...
    @property
    def AttributeExtensions(self) -> Generic.Dictionary: ...
    @property
    def BaseUri(self) -> System.Uri: ...
    @property
    def Collections(self) -> ObjectModel.Collection: ...
    @property
    def ElementExtensions(self) -> SyndicationElementExtensionCollection: ...
    @property
    def Title(self) -> TextSyndicationContent: ...
    @BaseUri.setter
    def BaseUri(self, value: System.Void): ...
    @Title.setter
    def Title(self, value: System.Void): ...

class XmlDateTimeData(System.ValueType):
    """    """
    def __init__(self, dateTimeString: str, elementQualifiedName: Xml.XmlQualifiedName): ...
    @property
    def DateTimeString(self) -> str: ...
    @property
    def ElementQualifiedName(self) -> Xml.XmlQualifiedName: ...

class XmlSyndicationContent(SyndicationContent):
    """    """
    @overload
    def __init__(self, reader: Xml.XmlReader): ...
    @overload
    def __init__(self, type_: str, extension: SyndicationElementExtension): ...
    @overload
    def __init__(self, type_: str, dataContractExtension: object, dataContractSerializer: Serialization.XmlObjectSerializer): ...
    @overload
    def __init__(self, type_: str, xmlSerializerExtension: object, serializer: Serialization.XmlSerializer): ...
    @overload
    def Clone() -> SyndicationContent: ...
    @property
    def Extension(self) -> SyndicationElementExtension: ...
    @property
    def Type(self) -> str: ...
    @overload
    def GetReaderAtContent() -> Xml.XmlDictionaryReader: ...
    @overload
    def ReadContent() -> TContent: ...
    @overload
    def ReadContent(self, dataContractSerializer: Serialization.XmlObjectSerializer) -> TContent: ...
    @overload
    def ReadContent(self, serializer: Serialization.XmlSerializer) -> TContent: ...

class XmlUriData(System.ValueType):
    """    """
    def __init__(self, uriString: str, uriKind: System.UriKind, elementQualifiedName: Xml.XmlQualifiedName): ...
    @property
    def ElementQualifiedName(self) -> Xml.XmlQualifiedName: ...
    @property
    def UriKind(self) -> System.UriKind: ...
    @property
    def UriString(self) -> str: ...

# endregion
