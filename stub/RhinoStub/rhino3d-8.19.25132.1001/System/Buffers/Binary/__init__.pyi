"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["BinaryPrimitives"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: System.Private.CoreLib, Version=7.0.0.0

class BinaryPrimitives(object):
    """    """
    @overload
    @staticmethod
    def ReadDoubleBigEndian(source: System.ReadOnlySpan) -> float: ...
    @overload
    @staticmethod
    def ReadDoubleLittleEndian(source: System.ReadOnlySpan) -> float: ...
    @overload
    @staticmethod
    def ReadHalfBigEndian(source: System.ReadOnlySpan) -> System.Half: ...
    @overload
    @staticmethod
    def ReadHalfLittleEndian(source: System.ReadOnlySpan) -> System.Half: ...
    @overload
    @staticmethod
    def ReadInt16BigEndian(source: System.ReadOnlySpan) -> System.Int16: ...
    @overload
    @staticmethod
    def ReadInt16LittleEndian(source: System.ReadOnlySpan) -> System.Int16: ...
    @overload
    @staticmethod
    def ReadInt32BigEndian(source: System.ReadOnlySpan) -> int: ...
    @overload
    @staticmethod
    def ReadInt32LittleEndian(source: System.ReadOnlySpan) -> int: ...
    @overload
    @staticmethod
    def ReadInt64BigEndian(source: System.ReadOnlySpan) -> System.Int64: ...
    @overload
    @staticmethod
    def ReadInt64LittleEndian(source: System.ReadOnlySpan) -> System.Int64: ...
    @overload
    @staticmethod
    def ReadSingleBigEndian(source: System.ReadOnlySpan) -> System.Single: ...
    @overload
    @staticmethod
    def ReadSingleLittleEndian(source: System.ReadOnlySpan) -> System.Single: ...
    @overload
    @staticmethod
    def ReadUInt16BigEndian(source: System.ReadOnlySpan) -> System.UInt16: ...
    @overload
    @staticmethod
    def ReadUInt16LittleEndian(source: System.ReadOnlySpan) -> System.UInt16: ...
    @overload
    @staticmethod
    def ReadUInt32BigEndian(source: System.ReadOnlySpan) -> System.UInt32: ...
    @overload
    @staticmethod
    def ReadUInt32LittleEndian(source: System.ReadOnlySpan) -> System.UInt32: ...
    @overload
    @staticmethod
    def ReadUInt64BigEndian(source: System.ReadOnlySpan) -> System.UInt64: ...
    @overload
    @staticmethod
    def ReadUInt64LittleEndian(source: System.ReadOnlySpan) -> System.UInt64: ...
    @overload
    @staticmethod
    def ReverseEndianness(value: System.SByte) -> System.SByte: ...
    @overload
    @staticmethod
    def ReverseEndianness(value: System.UInt16) -> System.UInt16: ...
    @overload
    @staticmethod
    def ReverseEndianness(value: System.Int16) -> System.Int16: ...
    @overload
    @staticmethod
    def ReverseEndianness(value: System.UInt64) -> System.UInt64: ...
    @overload
    @staticmethod
    def ReverseEndianness(value: System.UInt32) -> System.UInt32: ...
    @overload
    @staticmethod
    def ReverseEndianness(value: int) -> int: ...
    @overload
    @staticmethod
    def ReverseEndianness(value: System.Byte) -> System.Byte: ...
    @overload
    @staticmethod
    def ReverseEndianness(value: System.Int64) -> System.Int64: ...
    @overload
    @staticmethod
    def TryReadDoubleBigEndian(source: System.ReadOnlySpan) -> (bool, float): ...
    @overload
    @staticmethod
    def TryReadDoubleLittleEndian(source: System.ReadOnlySpan) -> (bool, float): ...
    @overload
    @staticmethod
    def TryReadHalfBigEndian(source: System.ReadOnlySpan) -> (bool, System.Half): ...
    @overload
    @staticmethod
    def TryReadHalfLittleEndian(source: System.ReadOnlySpan) -> (bool, System.Half): ...
    @overload
    @staticmethod
    def TryReadInt16BigEndian(source: System.ReadOnlySpan) -> (bool, System.Int16): ...
    @overload
    @staticmethod
    def TryReadInt16LittleEndian(source: System.ReadOnlySpan) -> (bool, System.Int16): ...
    @overload
    @staticmethod
    def TryReadInt32BigEndian(source: System.ReadOnlySpan) -> (bool, int): ...
    @overload
    @staticmethod
    def TryReadInt32LittleEndian(source: System.ReadOnlySpan) -> (bool, int): ...
    @overload
    @staticmethod
    def TryReadInt64BigEndian(source: System.ReadOnlySpan) -> (bool, System.Int64): ...
    @overload
    @staticmethod
    def TryReadInt64LittleEndian(source: System.ReadOnlySpan) -> (bool, System.Int64): ...
    @overload
    @staticmethod
    def TryReadSingleBigEndian(source: System.ReadOnlySpan) -> (bool, System.Single): ...
    @overload
    @staticmethod
    def TryReadSingleLittleEndian(source: System.ReadOnlySpan) -> (bool, System.Single): ...
    @overload
    @staticmethod
    def TryReadUInt16BigEndian(source: System.ReadOnlySpan) -> (bool, System.UInt16): ...
    @overload
    @staticmethod
    def TryReadUInt16LittleEndian(source: System.ReadOnlySpan) -> (bool, System.UInt16): ...
    @overload
    @staticmethod
    def TryReadUInt32BigEndian(source: System.ReadOnlySpan) -> (bool, System.UInt32): ...
    @overload
    @staticmethod
    def TryReadUInt32LittleEndian(source: System.ReadOnlySpan) -> (bool, System.UInt32): ...
    @overload
    @staticmethod
    def TryReadUInt64BigEndian(source: System.ReadOnlySpan) -> (bool, System.UInt64): ...
    @overload
    @staticmethod
    def TryReadUInt64LittleEndian(source: System.ReadOnlySpan) -> (bool, System.UInt64): ...
    @overload
    @staticmethod
    def TryWriteDoubleBigEndian(destination: System.Span, value: float) -> bool: ...
    @overload
    @staticmethod
    def TryWriteDoubleLittleEndian(destination: System.Span, value: float) -> bool: ...
    @overload
    @staticmethod
    def TryWriteHalfBigEndian(destination: System.Span, value: System.Half) -> bool: ...
    @overload
    @staticmethod
    def TryWriteHalfLittleEndian(destination: System.Span, value: System.Half) -> bool: ...
    @overload
    @staticmethod
    def TryWriteInt16BigEndian(destination: System.Span, value: System.Int16) -> bool: ...
    @overload
    @staticmethod
    def TryWriteInt16LittleEndian(destination: System.Span, value: System.Int16) -> bool: ...
    @overload
    @staticmethod
    def TryWriteInt32BigEndian(destination: System.Span, value: int) -> bool: ...
    @overload
    @staticmethod
    def TryWriteInt32LittleEndian(destination: System.Span, value: int) -> bool: ...
    @overload
    @staticmethod
    def TryWriteInt64BigEndian(destination: System.Span, value: System.Int64) -> bool: ...
    @overload
    @staticmethod
    def TryWriteInt64LittleEndian(destination: System.Span, value: System.Int64) -> bool: ...
    @overload
    @staticmethod
    def TryWriteSingleBigEndian(destination: System.Span, value: System.Single) -> bool: ...
    @overload
    @staticmethod
    def TryWriteSingleLittleEndian(destination: System.Span, value: System.Single) -> bool: ...
    @overload
    @staticmethod
    def TryWriteUInt16BigEndian(destination: System.Span, value: System.UInt16) -> bool: ...
    @overload
    @staticmethod
    def TryWriteUInt16LittleEndian(destination: System.Span, value: System.UInt16) -> bool: ...
    @overload
    @staticmethod
    def TryWriteUInt32BigEndian(destination: System.Span, value: System.UInt32) -> bool: ...
    @overload
    @staticmethod
    def TryWriteUInt32LittleEndian(destination: System.Span, value: System.UInt32) -> bool: ...
    @overload
    @staticmethod
    def TryWriteUInt64BigEndian(destination: System.Span, value: System.UInt64) -> bool: ...
    @overload
    @staticmethod
    def TryWriteUInt64LittleEndian(destination: System.Span, value: System.UInt64) -> bool: ...
    @overload
    @staticmethod
    def WriteDoubleBigEndian(destination: System.Span, value: float) -> None: ...
    @overload
    @staticmethod
    def WriteDoubleLittleEndian(destination: System.Span, value: float) -> None: ...
    @overload
    @staticmethod
    def WriteHalfBigEndian(destination: System.Span, value: System.Half) -> None: ...
    @overload
    @staticmethod
    def WriteHalfLittleEndian(destination: System.Span, value: System.Half) -> None: ...
    @overload
    @staticmethod
    def WriteInt16BigEndian(destination: System.Span, value: System.Int16) -> None: ...
    @overload
    @staticmethod
    def WriteInt16LittleEndian(destination: System.Span, value: System.Int16) -> None: ...
    @overload
    @staticmethod
    def WriteInt32BigEndian(destination: System.Span, value: int) -> None: ...
    @overload
    @staticmethod
    def WriteInt32LittleEndian(destination: System.Span, value: int) -> None: ...
    @overload
    @staticmethod
    def WriteInt64BigEndian(destination: System.Span, value: System.Int64) -> None: ...
    @overload
    @staticmethod
    def WriteInt64LittleEndian(destination: System.Span, value: System.Int64) -> None: ...
    @overload
    @staticmethod
    def WriteSingleBigEndian(destination: System.Span, value: System.Single) -> None: ...
    @overload
    @staticmethod
    def WriteSingleLittleEndian(destination: System.Span, value: System.Single) -> None: ...
    @overload
    @staticmethod
    def WriteUInt16BigEndian(destination: System.Span, value: System.UInt16) -> None: ...
    @overload
    @staticmethod
    def WriteUInt16LittleEndian(destination: System.Span, value: System.UInt16) -> None: ...
    @overload
    @staticmethod
    def WriteUInt32BigEndian(destination: System.Span, value: System.UInt32) -> None: ...
    @overload
    @staticmethod
    def WriteUInt32LittleEndian(destination: System.Span, value: System.UInt32) -> None: ...
    @overload
    @staticmethod
    def WriteUInt64BigEndian(destination: System.Span, value: System.UInt64) -> None: ...
    @overload
    @staticmethod
    def WriteUInt64LittleEndian(destination: System.Span, value: System.UInt64) -> None: ...

# endregion
