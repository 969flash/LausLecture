"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["ComponentGuaranteesAttribute", "ComponentGuaranteesOptions", "FrameworkName", "OSPlatformAttribute", "TargetPlatformAttribute", "SupportedOSPlatformAttribute", "UnsupportedOSPlatformAttribute", "ObsoletedOSPlatformAttribute", "SupportedOSPlatformGuardAttribute", "UnsupportedOSPlatformGuardAttribute", "RequiresPreviewFeaturesAttribute", "ResourceConsumptionAttribute", "ResourceExposureAttribute", "ResourceScope", "TargetFrameworkAttribute", "VersioningHelper"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: System.Private.CoreLib, Version=7.0.0.0

class ComponentGuaranteesAttribute(System.Attribute):
    """    """
    def __init__(self, guarantees: ComponentGuaranteesOptions): ...
    @property
    def Guarantees(self) -> ComponentGuaranteesOptions: ...

class ComponentGuaranteesOptions(enum.Enum):
    None_ = 0
    Exchange = 1
    Stable = 2
    SideBySide = 4

class FrameworkName(object):
    """    """
    @overload
    def __init__(self, frameworkName: str): ...
    @overload
    def __init__(self, identifier: str, version: System.Version): ...
    @overload
    def __init__(self, identifier: str, version: System.Version, profile: str): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def Equals(self, other: FrameworkName) -> bool: ...
    @property
    def FullName(self) -> str: ...
    @property
    def Identifier(self) -> str: ...
    @property
    def Profile(self) -> str: ...
    @property
    def Version(self) -> System.Version: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def ToString() -> str: ...

class OSPlatformAttribute(System.Attribute):
    """    """
    @property
    def PlatformName(self) -> str: ...

class TargetPlatformAttribute(OSPlatformAttribute):
    """    """
    def __init__(self, platformName: str): ...

class SupportedOSPlatformAttribute(OSPlatformAttribute):
    """    """
    def __init__(self, platformName: str): ...

class UnsupportedOSPlatformAttribute(OSPlatformAttribute):
    """    """
    @overload
    def __init__(self, platformName: str): ...
    @overload
    def __init__(self, platformName: str, message: str): ...
    @property
    def Message(self) -> str: ...

class ObsoletedOSPlatformAttribute(OSPlatformAttribute):
    """    """
    @overload
    def __init__(self, platformName: str): ...
    @overload
    def __init__(self, platformName: str, message: str): ...
    @property
    def Message(self) -> str: ...
    @property
    def Url(self) -> str: ...
    @Url.setter
    def Url(self, value: System.Void): ...

class SupportedOSPlatformGuardAttribute(OSPlatformAttribute):
    """    """
    def __init__(self, platformName: str): ...

class UnsupportedOSPlatformGuardAttribute(OSPlatformAttribute):
    """    """
    def __init__(self, platformName: str): ...

class RequiresPreviewFeaturesAttribute(System.Attribute):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @property
    def Message(self) -> str: ...
    @property
    def Url(self) -> str: ...
    @Url.setter
    def Url(self, value: System.Void): ...

class ResourceConsumptionAttribute(System.Attribute):
    """    """
    @overload
    def __init__(self, resourceScope: ResourceScope): ...
    @overload
    def __init__(self, resourceScope: ResourceScope, consumptionScope: ResourceScope): ...
    @property
    def ConsumptionScope(self) -> ResourceScope: ...
    @property
    def ResourceScope(self) -> ResourceScope: ...

class ResourceExposureAttribute(System.Attribute):
    """    """
    def __init__(self, exposureLevel: ResourceScope): ...
    @property
    def ResourceExposureLevel(self) -> ResourceScope: ...

class ResourceScope(enum.Enum):
    None_ = 0
    Machine = 1
    Process = 2
    AppDomain = 4
    Library = 8
    Private = 16
    Assembly = 32

class TargetFrameworkAttribute(System.Attribute):
    """    """
    def __init__(self, frameworkName: str): ...
    @property
    def FrameworkDisplayName(self) -> str: ...
    @property
    def FrameworkName(self) -> str: ...
    @FrameworkDisplayName.setter
    def FrameworkDisplayName(self, value: System.Void): ...

class VersioningHelper(object):
    """    """
    @overload
    @staticmethod
    def MakeVersionSafeName(name: str, from_: ResourceScope, to: ResourceScope) -> str: ...
    @overload
    @staticmethod
    def MakeVersionSafeName(name: str, from_: ResourceScope, to: ResourceScope, type_: System.Type) -> str: ...

# endregion
