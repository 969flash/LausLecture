"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["DataContract", "DataContractSet", "DataMember", "XmlDataContract"]
# endregion

# region: Imports
from System import Collections
from System import Xml
from System.Collections import Generic
from System.Collections import ObjectModel
from System.Runtime import CompilerServices
from System.Runtime import Serialization
from System.Xml import Schema
from typing import overload
import System
# endregion

# region: System.Private.DataContractSerialization, Version=7.0.0.0

class DataContract(object):
    """    """
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def BaseContract(self) -> DataContract: ...
    @property
    def ContractType(self) -> str: ...
    @property
    def DataMembers(self) -> ObjectModel.ReadOnlyCollection: ...
    @property
    def IsBuiltInDataContract(self) -> bool: ...
    @property
    def IsISerializable(self) -> bool: ...
    @property
    def IsReference(self) -> bool: ...
    @property
    def IsValueType(self) -> bool: ...
    @property
    def KnownDataContracts(self) -> Generic.Dictionary: ...
    @property
    def OriginalUnderlyingType(self) -> System.Type: ...
    @property
    def TopLevelElementName(self) -> Xml.XmlDictionaryString: ...
    @property
    def TopLevelElementNamespace(self) -> Xml.XmlDictionaryString: ...
    @property
    def UnderlyingType(self) -> System.Type: ...
    @property
    def XmlName(self) -> Xml.XmlQualifiedName: ...
    @overload
    def GetArrayTypeName(self, isNullable: bool) -> Xml.XmlQualifiedName: ...
    @overload
    @staticmethod
    def GetBuiltInDataContract(name: str, ns: str) -> DataContract: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    @staticmethod
    def GetXmlName(type_: System.Type) -> Xml.XmlQualifiedName: ...
    @overload
    def IsDictionaryLike() -> (bool, str, str, str): ...

class DataContractSet(object):
    """    """
    @overload
    def __init__(self, dataContractSet: DataContractSet): ...
    @overload
    def __init__(self, dataContractSurrogate: Serialization.ISerializationSurrogateProvider, referencedTypes: Generic.IEnumerable, referencedCollectionTypes: Generic.IEnumerable): ...
    @property
    def Contracts(self) -> Generic.Dictionary: ...
    @property
    def KnownTypesForObject(self) -> Generic.Dictionary: ...
    @property
    def ProcessedContracts(self) -> Generic.Dictionary: ...
    @property
    def SurrogateData(self) -> Collections.Hashtable: ...
    @overload
    def GetDataContract(self, type_: System.Type) -> DataContract: ...
    @overload
    def GetDataContract(self, key: Xml.XmlQualifiedName) -> DataContract: ...
    @overload
    def GetReferencedType(self, xmlName: Xml.XmlQualifiedName, dataContract: DataContract, supportGenericTypes: System.Nullable) -> (System.Type, DataContract, System.System.Array[object]): ...
    @overload
    def ImportSchemaSet(self, schemaSet: Schema.XmlSchemaSet, typeNames: Generic.IEnumerable, importXmlDataType: bool) -> None: ...
    @overload
    def ImportSchemaSet(self, schemaSet: Schema.XmlSchemaSet, elements: Generic.IEnumerable, importXmlDataType: bool) -> Generic.List: ...

class DataMember(object):
    """    """
    @property
    def EmitDefaultValue(self) -> bool: ...
    @property
    def IsNullable(self) -> bool: ...
    @property
    def IsRequired(self) -> bool: ...
    @property
    def MemberTypeContract(self) -> DataContract: ...
    @property
    def Name(self) -> str: ...
    @property
    def Order(self) -> System.Int64: ...

class XmlDataContract(DataContract):
    """    """
    @property
    def ContractType(self) -> str: ...
    @property
    def HasRoot(self) -> bool: ...
    @property
    def IsAnonymous(self) -> bool: ...
    @property
    def IsBuiltInDataContract(self) -> bool: ...
    @property
    def IsTopLevelElementNullable(self) -> bool: ...
    @property
    def IsTypeDefinedOnImport(self) -> bool: ...
    @property
    def IsValueType(self) -> bool: ...
    @property
    def KnownDataContracts(self) -> Generic.Dictionary: ...
    @property
    def TopLevelElementName(self) -> Xml.XmlDictionaryString: ...
    @property
    def TopLevelElementNamespace(self) -> Xml.XmlDictionaryString: ...
    @property
    def XsdType(self) -> Schema.XmlSchemaType: ...
    @IsTypeDefinedOnImport.setter
    def IsTypeDefinedOnImport(self, value: System.Void): ...
    @IsValueType.setter
    def IsValueType(self, value: System.Void): ...

# endregion
