"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["AdvSimd", "Arm64", "Aes", "ArmBase", "Crc32", "Dp", "Rdm", "Sha1", "Sha256"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from System.Runtime import Intrinsics
from typing import overload
import System
# endregion

# region: System.Private.CoreLib, Version=7.0.0.0

class AdvSimd(ArmBase):
    """    """
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsSaturate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsSaturate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsSaturate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsSaturate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsSaturate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsSaturate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAddScalar(addend: Intrinsics.Vector64, value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWideningAndAddScalar(addend: Intrinsics.Vector64, value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWideningScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseWideningScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def And(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector128, mask: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseClear(value: Intrinsics.Vector64, mask: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def BitwiseSelect(select: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Ceiling(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Ceiling(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CeilingScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CeilingScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundAwayFromZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundAwayFromZero(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundAwayFromZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToEven(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToEven(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToEvenScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToNegativeInfinity(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToNegativeInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToNegativeInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToPositiveInfinity(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToPositiveInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToPositiveInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToZero(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt32RoundToZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToSingle(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToSingle(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToSingle(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToSingle(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToSingleScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToSingleScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundAwayFromZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundAwayFromZero(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundAwayFromZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToEven(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToEven(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToEvenScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToNegativeInfinity(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToNegativeInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToNegativeInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToPositiveInfinity(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToPositiveInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToPositiveInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToZero(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt32RoundToZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DivideScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DivideScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector64(value: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: System.SByte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: System.Int16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: int) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: System.Single) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: System.UInt32) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: System.UInt16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector64(value: System.Single) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateToVector64(value: System.UInt16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateToVector64(value: System.UInt32) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateToVector64(value: int) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateToVector64(value: System.Int16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateToVector64(value: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DuplicateToVector64(value: System.SByte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector64, index: System.Byte) -> System.Byte: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> System.UInt64: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> System.UInt32: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> System.UInt16: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> System.Single: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> System.Int64: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> int: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> System.Int16: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> System.SByte: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> System.Byte: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector64, index: System.Byte) -> System.UInt32: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector64, index: System.Byte) -> System.UInt16: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector64, index: System.Byte) -> System.Single: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector64, index: System.Byte) -> System.SByte: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector64, index: System.Byte) -> int: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector64, index: System.Byte) -> System.Int16: ...
    @overload
    @staticmethod
    def Extract(vector: Intrinsics.Vector128, index: System.Byte) -> float: ...
    @overload
    @staticmethod
    def ExtractNarrowingLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector128(upper: Intrinsics.Vector128, lower: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractVector64(upper: Intrinsics.Vector64, lower: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractVector64(upper: Intrinsics.Vector64, lower: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractVector64(upper: Intrinsics.Vector64, lower: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractVector64(upper: Intrinsics.Vector64, lower: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractVector64(upper: Intrinsics.Vector64, lower: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractVector64(upper: Intrinsics.Vector64, lower: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractVector64(upper: Intrinsics.Vector64, lower: Intrinsics.Vector64, index: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Floor(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Floor(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FloorScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FloorScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedAddRoundedHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplyAddNegatedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAddNegatedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAddScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAddScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtract(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractNegatedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractNegatedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedSubtractHalving(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector64, index: System.Byte, data: int) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: System.UInt64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: System.UInt32) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: System.UInt16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: System.Single) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: System.SByte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: System.Int64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: int) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: System.Int16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: float) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector128, index: System.Byte, data: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector64, index: System.Byte, data: System.UInt32) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector64, index: System.Byte, data: System.UInt16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector64, index: System.Byte, data: System.Single) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector64, index: System.Byte, data: System.SByte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector64, index: System.Byte, data: System.Int16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Insert(vector: Intrinsics.Vector64, index: System.Byte, data: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingSignCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingSignCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingSignCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingSignCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingSignCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingSignCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.Int32) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.UInt64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.UInt32) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.UInt16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.Single) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.SByte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.Int64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.Double) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector64, index: System.Byte, address: System.UInt32) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector64, index: System.Byte, address: System.UInt16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector64, index: System.Byte, address: System.Single) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector64, index: System.Byte, address: System.SByte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector64, index: System.Byte, address: System.Int32) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector64, index: System.Byte, address: System.Int16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector64, index: System.Byte, address: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndInsertScalar(value: Intrinsics.Vector128, index: System.Byte, address: System.Int16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.SByte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.Int32) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.UInt16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.Single) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.Int16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.UInt32) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector64(address: System.UInt32) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector64(address: System.UInt16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector64(address: System.Single) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector64(address: System.SByte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector64(address: System.Int32) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector64(address: System.Int16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector64(address: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.UInt64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.UInt32) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.UInt16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.Single) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.SByte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.Int64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.Int32) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.Int16) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.Double) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector128(address: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.UInt64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.UInt32) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.UInt16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.Single) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.SByte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.Int64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.Int32) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.Int16) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.Double) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def LoadVector64(address: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxNumber(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxNumber(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxNumberScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxNumberScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinNumber(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinNumber(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinNumberScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinNumberScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddByScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddByScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddByScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddByScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddByScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddByScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddByScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddByScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalarWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingByScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingByScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingByScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingByScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerByScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerByScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerByScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerByScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningLowerBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateLowerByScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateLowerByScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateLowerBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateLowerBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateLowerBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateLowerBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateUpperByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateUpperByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateUpperBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateUpperBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateUpperBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateUpperBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperByScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperByScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperByScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperByScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningUpperBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingByScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingByScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingByScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingByScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingSaturateHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractByScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractByScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractByScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractByScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractByScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractByScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractByScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractByScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningLowerAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyWideningUpperAndSubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def NegateSaturate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def NegateSaturate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def NegateSaturate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def NegateSaturate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def NegateSaturate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def NegateSaturate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def NegateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def NegateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Not(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Or(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def OrNot(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def PolynomialMultiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def PolynomialMultiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiply(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def PolynomialMultiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PopCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PopCount(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PopCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def PopCount(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalEstimate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalEstimate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalEstimate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalEstimate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootEstimate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootEstimate(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootEstimate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootEstimate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootStep(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootStep(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalStep(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalStep(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement16(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement16(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement16(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement16(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement16(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement16(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement16(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement16(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement32(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement32(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement32(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement32(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElement8(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundAwayFromZero(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundAwayFromZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundAwayFromZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundAwayFromZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToNearest(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToNearest(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundToNearestScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToNearestScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToNegativeInfinity(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToNegativeInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundToNegativeInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToNegativeInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToPositiveInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundToPositiveInfinity(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToPositiveInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToPositiveInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToZero(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundToZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundToZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmetic(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmetic(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmetic(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmetic(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmetic(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmetic(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmetic(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsertScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftAndInsertScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturate(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsigned(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsigned(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsigned(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsigned(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsigned(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsigned(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsigned(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningLower(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningLower(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningLower(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningLower(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningLower(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningLower(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningUpper(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningUpper(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningUpper(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningUpper(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningUpper(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalWideningUpper(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogical(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRounded(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector128, count: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturate(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector128, right: Intrinsics.Vector128, shift: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightAndInsert(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightAndInsertScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightAndInsertScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, shift: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmetic(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmetic(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmetic(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmetic(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmetic(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmetic(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmetic(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticAddScalar(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedAddScalar(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogical(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAddScalar(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalAddScalar(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRounded(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector128, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAdd(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAddScalar(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedAddScalar(addend: Intrinsics.Vector64, value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateLower(value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128, count: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SignExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SignExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SignExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SignExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SignExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SignExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SqrtScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SqrtScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Store(address: System.UInt64, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.UInt32, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.UInt16, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Single, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.SByte, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Int64, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Int32, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Double, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Int16, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.UInt64, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Byte, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Byte, source: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Int16, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Int32, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Double, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.SByte, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Single, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.UInt16, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.UInt32, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Store(address: System.Int64, source: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Int64, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.UInt64, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.UInt32, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.UInt16, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Single, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.SByte, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Int32, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Single, value: Intrinsics.Vector64, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Double, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Byte, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.UInt32, value: Intrinsics.Vector64, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.UInt16, value: Intrinsics.Vector64, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.SByte, value: Intrinsics.Vector64, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Int32, value: Intrinsics.Vector64, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Int16, value: Intrinsics.Vector128, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Byte, value: Intrinsics.Vector64, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def StoreSelectedScalar(address: System.Int16, value: Intrinsics.Vector64, index: System.Byte) -> None: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingLower(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractRoundedHighNarrowingUpper(lower: Intrinsics.Vector64, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningLower(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def VectorTableLookup(table: Intrinsics.Vector128, byteIndexes: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def VectorTableLookup(table: Intrinsics.Vector128, byteIndexes: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def VectorTableLookupExtension(defaultValues: Intrinsics.Vector64, table: Intrinsics.Vector128, byteIndexes: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def VectorTableLookupExtension(defaultValues: Intrinsics.Vector64, table: Intrinsics.Vector128, byteIndexes: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Xor(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZeroExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningLower(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZeroExtendWideningUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...

class Arm64(Arm64):
    """    """
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Abs(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareGreaterThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteCompareLessThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifference(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsoluteDifferenceScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsSaturate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AbsSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AbsScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Add(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddAcrossWidening(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddPairwiseScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseScalar(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseScalar(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddPairwiseScalar(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturate(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def AddSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Ceiling(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareGreaterThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThan(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqual(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanOrEqualScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareLessThanScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTest(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def CompareTestScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTestScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def CompareTestScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToDouble(value: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToDouble(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToDouble(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToDoubleScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToDoubleScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToDoubleUpper(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundAwayFromZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundAwayFromZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundToEven(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundToEvenScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundToNegativeInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundToNegativeInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundToPositiveInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundToPositiveInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundToZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToInt64RoundToZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToSingleLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToSingleRoundToOddLower(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToSingleRoundToOddUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToSingleUpper(lower: Intrinsics.Vector64, value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundAwayFromZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundAwayFromZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundToEven(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundToEvenScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundToNegativeInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundToNegativeInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundToPositiveInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundToPositiveInfinityScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundToZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ConvertToUInt64RoundToZeroScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Divide(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Divide(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Divide(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateSelectedScalarToVector128(value: Intrinsics.Vector128, index: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: System.UInt64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: float) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DuplicateToVector128(value: System.Int64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ExtractNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Floor(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplyAdd(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplyAddByScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAddByScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplyAddByScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplyAddBySelectedScalar(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAddBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAddScalarBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAddScalarBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplyAddScalarBySelectedScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtract(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractByScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractByScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractByScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractBySelectedScalar(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractScalarBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractScalarBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def FusedMultiplySubtractScalarBySelectedScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector64, resultIndex: System.Byte, value: Intrinsics.Vector128, valueIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def InsertSelectedScalar(result: Intrinsics.Vector128, resultIndex: System.Byte, value: Intrinsics.Vector64, valueIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.Double) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.Int64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadAndReplicateToVector128(address: System.UInt64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def LoadPairScalarVector64(address: System.Int32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairScalarVector64(address: System.UInt32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairScalarVector64(address: System.Single) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairScalarVector64NonTemporal(address: System.UInt32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairScalarVector64NonTemporal(address: System.Int32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairScalarVector64NonTemporal(address: System.Single) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.Int32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.Int16) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.Double) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.Byte) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.UInt64) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.UInt16) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.UInt32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.Int64) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.Single) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128(address: System.SByte) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.UInt32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.Single) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.SByte) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.Int64) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.Byte) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.UInt16) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.Int32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.Int16) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.Double) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector128NonTemporal(address: System.UInt64) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.UInt64) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.UInt32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.UInt16) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.Single) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.SByte) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.Int64) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.Int16) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.Double) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.Byte) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64(address: System.Int32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.Int32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.UInt32) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.Byte) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.Double) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.Int16) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.UInt64) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.SByte) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.UInt16) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.Single) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def LoadPairVector64NonTemporal(address: System.Int64) -> System.ValueTuple: ...
    @overload
    @staticmethod
    def Max(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxNumber(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxNumberAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxNumberPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxNumberPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxNumberPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxNumberPairwiseScalar(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxNumberPairwiseScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MaxPairwiseScalar(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxPairwiseScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MaxScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Min(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinAcross(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinNumber(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinNumberAcross(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinNumberPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinNumberPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinNumberPairwise(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinNumberPairwiseScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinNumberPairwiseScalar(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinPairwise(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MinPairwiseScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinPairwiseScalar(value: Intrinsics.Vector128) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MinScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Multiply(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyDoublingSaturateHighScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingSaturateHighScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingScalarBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingScalarBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingScalarBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingScalarBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningAndAddSaturateScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningAndAddSaturateScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningAndSubtractSaturateScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningAndSubtractSaturateScalar(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningSaturateScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningScalarBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningScalarBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningScalarBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningScalarBySelectedScalarAndAddSaturate(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningScalarBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningScalarBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningScalarBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyDoublingWideningScalarBySelectedScalarAndSubtractSaturate(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyExtended(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyExtended(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyExtended(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyExtendedByScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyExtendedBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyExtendedBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyExtendedBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyExtendedBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyExtendedBySelectedScalar(left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyExtendedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyExtendedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyExtendedScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyExtendedScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyExtendedScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingSaturateHighScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingSaturateHighScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarSaturateHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyScalarBySelectedScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Negate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def NegateSaturate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def NegateSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def NegateSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def NegateSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def NegateSaturateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def NegateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalEstimate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalEstimateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalEstimateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalExponentScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalExponentScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootEstimate(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootEstimateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootEstimateScalar(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootStep(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootStepScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalSquareRootStepScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalStep(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReciprocalStepScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReciprocalStepScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElementBits(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ReverseElementBits(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElementBits(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ReverseElementBits(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def RoundAwayFromZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundToNearest(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundToNegativeInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundToPositiveInfinity(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def RoundToZero(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftArithmeticSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLeftLogicalSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalRoundedSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftLogicalSaturateScalar(value: Intrinsics.Vector64, count: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightArithmeticRoundedNarrowingSaturateUnsignedScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ShiftRightLogicalRoundedNarrowingSaturateScalar(value: Intrinsics.Vector64, count: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def Sqrt(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Sqrt(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Sqrt(value: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def StorePair(address: System.SByte, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.UInt64, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.UInt32, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.UInt16, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Single, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Int64, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.UInt16, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Int16, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Int32, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Int16, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Byte, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Int32, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Double, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Int64, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.SByte, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Double, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Byte, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.UInt64, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.UInt32, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePair(address: System.Single, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Int16, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.UInt64, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.UInt32, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.UInt16, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Single, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.SByte, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Double, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Int64, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Int16, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Double, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Byte, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.UInt64, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.UInt32, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.UInt16, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Single, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.SByte, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Int64, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Int32, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Int32, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairNonTemporal(address: System.Byte, value1: Intrinsics.Vector128, value2: Intrinsics.Vector128) -> None: ...
    @overload
    @staticmethod
    def StorePairScalar(address: System.Int32, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairScalar(address: System.UInt32, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairScalar(address: System.Single, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairScalarNonTemporal(address: System.UInt32, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairScalarNonTemporal(address: System.Single, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def StorePairScalarNonTemporal(address: System.Int32, value1: Intrinsics.Vector64, value2: Intrinsics.Vector64) -> None: ...
    @overload
    @staticmethod
    def Subtract(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def SubtractSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def SubtractSaturateScalar(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def TransposeOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipEven(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def UnzipOdd(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def VectorTableLookup(table: Intrinsics.Vector128, byteIndexes: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def VectorTableLookup(table: Intrinsics.Vector128, byteIndexes: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def VectorTableLookupExtension(defaultValues: Intrinsics.Vector128, table: Intrinsics.Vector128, byteIndexes: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def VectorTableLookupExtension(defaultValues: Intrinsics.Vector128, table: Intrinsics.Vector128, byteIndexes: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipHigh(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ZipLow(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...

class Aes(ArmBase):
    """    """
    @overload
    @staticmethod
    def Decrypt(value: Intrinsics.Vector128, roundKey: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def Encrypt(value: Intrinsics.Vector128, roundKey: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def InverseMixColumns(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MixColumns(value: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiplyWideningLower(left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def PolynomialMultiplyWideningUpper(left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...

class Arm64(Arm64):
    """    """
    @property
    def IsSupported(self) -> bool: ...

class ArmBase(object):
    """    """
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: int) -> int: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: System.UInt32) -> int: ...
    @overload
    @staticmethod
    def ReverseElementBits(value: int) -> int: ...
    @overload
    @staticmethod
    def ReverseElementBits(value: System.UInt32) -> System.UInt32: ...
    @overload
    @staticmethod
    def Yield() -> None: ...

class Arm64(object):
    """    """
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def LeadingSignCount(value: int) -> int: ...
    @overload
    @staticmethod
    def LeadingSignCount(value: System.Int64) -> int: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: System.Int64) -> int: ...
    @overload
    @staticmethod
    def LeadingZeroCount(value: System.UInt64) -> int: ...
    @overload
    @staticmethod
    def MultiplyHigh(left: System.Int64, right: System.Int64) -> System.Int64: ...
    @overload
    @staticmethod
    def MultiplyHigh(left: System.UInt64, right: System.UInt64) -> System.UInt64: ...
    @overload
    @staticmethod
    def ReverseElementBits(value: System.Int64) -> System.Int64: ...
    @overload
    @staticmethod
    def ReverseElementBits(value: System.UInt64) -> System.UInt64: ...

class Crc32(ArmBase):
    """    """
    @overload
    @staticmethod
    def ComputeCrc32(crc: System.UInt32, data: System.Byte) -> System.UInt32: ...
    @overload
    @staticmethod
    def ComputeCrc32(crc: System.UInt32, data: System.UInt16) -> System.UInt32: ...
    @overload
    @staticmethod
    def ComputeCrc32(crc: System.UInt32, data: System.UInt32) -> System.UInt32: ...
    @overload
    @staticmethod
    def ComputeCrc32C(crc: System.UInt32, data: System.Byte) -> System.UInt32: ...
    @overload
    @staticmethod
    def ComputeCrc32C(crc: System.UInt32, data: System.UInt16) -> System.UInt32: ...
    @overload
    @staticmethod
    def ComputeCrc32C(crc: System.UInt32, data: System.UInt32) -> System.UInt32: ...
    @property
    def IsSupported(self) -> bool: ...

class Arm64(Arm64):
    """    """
    @overload
    @staticmethod
    def ComputeCrc32(crc: System.UInt32, data: System.UInt64) -> System.UInt32: ...
    @overload
    @staticmethod
    def ComputeCrc32C(crc: System.UInt32, data: System.UInt64) -> System.UInt32: ...
    @property
    def IsSupported(self) -> bool: ...

class Dp(AdvSimd):
    """    """
    @overload
    @staticmethod
    def DotProduct(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DotProduct(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DotProduct(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DotProduct(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DotProductBySelectedQuadruplet(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightScaledIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DotProductBySelectedQuadruplet(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightScaledIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DotProductBySelectedQuadruplet(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightScaledIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DotProductBySelectedQuadruplet(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightScaledIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def DotProductBySelectedQuadruplet(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightScaledIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DotProductBySelectedQuadruplet(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightScaledIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DotProductBySelectedQuadruplet(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightScaledIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def DotProductBySelectedQuadruplet(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightScaledIndex: System.Byte) -> Intrinsics.Vector128: ...
    @property
    def IsSupported(self) -> bool: ...

class Arm64(Arm64):
    """    """
    @property
    def IsSupported(self) -> bool: ...

class Rdm(AdvSimd):
    """    """
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndAddSaturateHigh(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndAddSaturateHigh(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndSubtractSaturateHigh(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndSubtractSaturateHigh(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector128, left: Intrinsics.Vector128, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector128: ...

class Arm64(Arm64):
    """    """
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndAddSaturateHighScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndAddSaturateHighScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndSubtractSaturateHighScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingAndSubtractSaturateHighScalar(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarAndAddSaturateHigh(addend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector64, rightIndex: System.Byte) -> Intrinsics.Vector64: ...
    @overload
    @staticmethod
    def MultiplyRoundedDoublingScalarBySelectedScalarAndSubtractSaturateHigh(minuend: Intrinsics.Vector64, left: Intrinsics.Vector64, right: Intrinsics.Vector128, rightIndex: System.Byte) -> Intrinsics.Vector64: ...

class Sha1(ArmBase):
    """    """
    @overload
    @staticmethod
    def FixedRotate(hash_e: Intrinsics.Vector64) -> Intrinsics.Vector64: ...
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def HashUpdateChoose(hash_abcd: Intrinsics.Vector128, hash_e: Intrinsics.Vector64, wk: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def HashUpdateMajority(hash_abcd: Intrinsics.Vector128, hash_e: Intrinsics.Vector64, wk: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def HashUpdateParity(hash_abcd: Intrinsics.Vector128, hash_e: Intrinsics.Vector64, wk: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ScheduleUpdate0(w0_3: Intrinsics.Vector128, w4_7: Intrinsics.Vector128, w8_11: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ScheduleUpdate1(tw0_3: Intrinsics.Vector128, w12_15: Intrinsics.Vector128) -> Intrinsics.Vector128: ...

class Arm64(Arm64):
    """    """
    @property
    def IsSupported(self) -> bool: ...

class Sha256(ArmBase):
    """    """
    @property
    def IsSupported(self) -> bool: ...
    @overload
    @staticmethod
    def HashUpdate1(hash_abcd: Intrinsics.Vector128, hash_efgh: Intrinsics.Vector128, wk: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def HashUpdate2(hash_efgh: Intrinsics.Vector128, hash_abcd: Intrinsics.Vector128, wk: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ScheduleUpdate0(w0_3: Intrinsics.Vector128, w4_7: Intrinsics.Vector128) -> Intrinsics.Vector128: ...
    @overload
    @staticmethod
    def ScheduleUpdate1(w0_3: Intrinsics.Vector128, w8_11: Intrinsics.Vector128, w12_15: Intrinsics.Vector128) -> Intrinsics.Vector128: ...

class Arm64(Arm64):
    """    """
    @property
    def IsSupported(self) -> bool: ...

# endregion
