"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["DynamicMetaObjectBinder", "DynamicMetaObject", "IDynamicMetaObjectProvider", "BindingRestrictions", "BinaryOperationBinder", "CallInfo", "ExpandoObject", "ConvertBinder", "CreateInstanceBinder", "DeleteIndexBinder", "DeleteMemberBinder", "DynamicObject", "GetIndexBinder", "GetMemberBinder", "InvokeBinder", "InvokeMemberBinder", "SetIndexBinder", "SetMemberBinder", "UnaryOperationBinder", "IInvokeOnGetBinder"]
# endregion

# region: Imports
from System.Collections import Generic
from System.Collections import ObjectModel
from System.Linq import Expressions
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: System.Linq.Expressions, Version=7.0.0.0

class DynamicMetaObjectBinder(CompilerServices.CallSiteBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def Bind(self, args: System.System.Array[object], parameters: ObjectModel.ReadOnlyCollection, returnLabel: Expressions.LabelTarget) -> Expressions.Expression: ...
    @overload
    def Defer(self, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def Defer(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @property
    def ReturnType(self) -> System.Type: ...
    @overload
    def GetUpdateExpression(self, type_: System.Type) -> Expressions.Expression: ...

class DynamicMetaObject(object):
    """    """
    @overload
    def __init__(self, expression: Expressions.Expression, restrictions: BindingRestrictions): ...
    @overload
    def __init__(self, expression: Expressions.Expression, restrictions: BindingRestrictions, value: object): ...
    @property
    def EmptyMetaObjects(self) -> System.Array[DynamicMetaObject]: ...
    @overload
    def BindBinaryOperation(self, binder: BinaryOperationBinder, arg: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def BindConvert(self, binder: ConvertBinder) -> DynamicMetaObject: ...
    @overload
    def BindCreateInstance(self, binder: CreateInstanceBinder, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def BindDeleteIndex(self, binder: DeleteIndexBinder, indexes: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def BindDeleteMember(self, binder: DeleteMemberBinder) -> DynamicMetaObject: ...
    @overload
    def BindGetIndex(self, binder: GetIndexBinder, indexes: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def BindGetMember(self, binder: GetMemberBinder) -> DynamicMetaObject: ...
    @overload
    def BindInvoke(self, binder: InvokeBinder, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def BindInvokeMember(self, binder: InvokeMemberBinder, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def BindSetIndex(self, binder: SetIndexBinder, indexes: System.Array[DynamicMetaObject], value: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def BindSetMember(self, binder: SetMemberBinder, value: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def BindUnaryOperation(self, binder: UnaryOperationBinder) -> DynamicMetaObject: ...
    @overload
    @staticmethod
    def Create(value: object, expression: Expressions.Expression) -> DynamicMetaObject: ...
    @property
    def Expression(self) -> Expressions.Expression: ...
    @property
    def HasValue(self) -> bool: ...
    @property
    def LimitType(self) -> System.Type: ...
    @property
    def Restrictions(self) -> BindingRestrictions: ...
    @property
    def RuntimeType(self) -> System.Type: ...
    @property
    def Value(self) -> object: ...
    @overload
    def GetDynamicMemberNames() -> Generic.IEnumerable: ...

class IDynamicMetaObjectProvider:
    """    """
    @overload
    def GetMetaObject(self, parameter: Expressions.Expression) -> DynamicMetaObject: ...

class BindingRestrictions(object):
    """    """
    @property
    def Empty(self) -> BindingRestrictions: ...
    @overload
    @staticmethod
    def Combine(contributingObjects: Generic.IList) -> BindingRestrictions: ...
    @overload
    @staticmethod
    def GetExpressionRestriction(expression: Expressions.Expression) -> BindingRestrictions: ...
    @overload
    @staticmethod
    def GetInstanceRestriction(expression: Expressions.Expression, instance: object) -> BindingRestrictions: ...
    @overload
    @staticmethod
    def GetTypeRestriction(expression: Expressions.Expression, type_: System.Type) -> BindingRestrictions: ...
    @overload
    def Merge(self, restrictions: BindingRestrictions) -> BindingRestrictions: ...
    @overload
    def ToExpression() -> Expressions.Expression: ...

class BinaryOperationBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackBinaryOperation(self, target: DynamicMetaObject, arg: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackBinaryOperation(self, target: DynamicMetaObject, arg: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def Operation(self) -> Expressions.ExpressionType: ...
    @property
    def ReturnType(self) -> System.Type: ...

class CallInfo(object):
    """    """
    @overload
    def __init__(self, argCount: int, argNames: System.System.Array[str]): ...
    @overload
    def __init__(self, argCount: int, argNames: Generic.IEnumerable): ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def ArgumentCount(self) -> int: ...
    @property
    def ArgumentNames(self) -> ObjectModel.ReadOnlyCollection: ...
    @overload
    def GetHashCode() -> int: ...

class ExpandoObject(object):
    """    """
    def __init__(self): ...

class ConvertBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackConvert(self, target: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackConvert(self, target: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def Explicit(self) -> bool: ...
    @property
    def ReturnType(self) -> System.Type: ...
    @property
    def Type(self) -> System.Type: ...

class CreateInstanceBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackCreateInstance(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackCreateInstance(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject], errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> System.Type: ...

class DeleteIndexBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackDeleteIndex(self, target: DynamicMetaObject, indexes: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackDeleteIndex(self, target: DynamicMetaObject, indexes: System.Array[DynamicMetaObject], errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> System.Type: ...

class DeleteMemberBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackDeleteMember(self, target: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackDeleteMember(self, target: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def IgnoreCase(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnType(self) -> System.Type: ...

class DynamicObject(object):
    """    """
    @overload
    def GetDynamicMemberNames() -> Generic.IEnumerable: ...
    @overload
    def GetMetaObject(self, parameter: Expressions.Expression) -> DynamicMetaObject: ...
    @overload
    def TryBinaryOperation(self, binder: BinaryOperationBinder, arg: object) -> (bool, object): ...
    @overload
    def TryConvert(self, binder: ConvertBinder) -> (bool, object): ...
    @overload
    def TryCreateInstance(self, binder: CreateInstanceBinder, args: System.System.Array[object]) -> (bool, object): ...
    @overload
    def TryDeleteIndex(self, binder: DeleteIndexBinder, indexes: System.System.Array[object]) -> bool: ...
    @overload
    def TryDeleteMember(self, binder: DeleteMemberBinder) -> bool: ...
    @overload
    def TryGetIndex(self, binder: GetIndexBinder, indexes: System.System.Array[object]) -> (bool, object): ...
    @overload
    def TryGetMember(self, binder: GetMemberBinder) -> (bool, object): ...
    @overload
    def TryInvoke(self, binder: InvokeBinder, args: System.System.Array[object]) -> (bool, object): ...
    @overload
    def TryInvokeMember(self, binder: InvokeMemberBinder, args: System.System.Array[object]) -> (bool, object): ...
    @overload
    def TrySetIndex(self, binder: SetIndexBinder, indexes: System.System.Array[object], value: object) -> bool: ...
    @overload
    def TrySetMember(self, binder: SetMemberBinder, value: object) -> bool: ...
    @overload
    def TryUnaryOperation(self, binder: UnaryOperationBinder) -> (bool, object): ...

class GetIndexBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackGetIndex(self, target: DynamicMetaObject, indexes: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackGetIndex(self, target: DynamicMetaObject, indexes: System.Array[DynamicMetaObject], errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> System.Type: ...

class GetMemberBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackGetMember(self, target: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackGetMember(self, target: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def IgnoreCase(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnType(self) -> System.Type: ...

class InvokeBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackInvoke(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackInvoke(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject], errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> System.Type: ...

class InvokeMemberBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackInvoke(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject], errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackInvokeMember(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackInvokeMember(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject], errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def IgnoreCase(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnType(self) -> System.Type: ...

class SetIndexBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackSetIndex(self, target: DynamicMetaObject, indexes: System.Array[DynamicMetaObject], value: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackSetIndex(self, target: DynamicMetaObject, indexes: System.Array[DynamicMetaObject], value: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def CallInfo(self) -> CallInfo: ...
    @property
    def ReturnType(self) -> System.Type: ...

class SetMemberBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackSetMember(self, target: DynamicMetaObject, value: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackSetMember(self, target: DynamicMetaObject, value: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def IgnoreCase(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ReturnType(self) -> System.Type: ...

class UnaryOperationBinder(DynamicMetaObjectBinder):
    """    """
    @overload
    def Bind(self, target: DynamicMetaObject, args: System.Array[DynamicMetaObject]) -> DynamicMetaObject: ...
    @overload
    def FallbackUnaryOperation(self, target: DynamicMetaObject) -> DynamicMetaObject: ...
    @overload
    def FallbackUnaryOperation(self, target: DynamicMetaObject, errorSuggestion: DynamicMetaObject) -> DynamicMetaObject: ...
    @property
    def Operation(self) -> Expressions.ExpressionType: ...
    @property
    def ReturnType(self) -> System.Type: ...

class IInvokeOnGetBinder:
    """    """
    @property
    def InvokeOnGet(self) -> bool: ...

# endregion
