"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Claim", "ClaimsIdentity", "ClaimsPrincipal", "ClaimTypes", "ClaimValueTypes"]
# endregion

# region: Imports
from System import IO
from System.Collections import Generic
from System.Runtime import CompilerServices
from System.Security import Principal
from typing import overload
import System
# endregion

# region: System.Security.Claims, Version=7.0.0.0

class Claim(object):
    """    """
    @overload
    def __init__(self, reader: IO.BinaryReader): ...
    @overload
    def __init__(self, reader: IO.BinaryReader, subject: ClaimsIdentity): ...
    @overload
    def __init__(self, type_: str, value: str): ...
    @overload
    def __init__(self, type_: str, value: str, valueType: str): ...
    @overload
    def __init__(self, type_: str, value: str, valueType: str, issuer: str): ...
    @overload
    def __init__(self, type_: str, value: str, valueType: str, issuer: str, originalIssuer: str): ...
    @overload
    def __init__(self, type_: str, value: str, valueType: str, issuer: str, originalIssuer: str, subject: ClaimsIdentity): ...
    @overload
    def Clone() -> Claim: ...
    @overload
    def Clone(self, identity: ClaimsIdentity) -> Claim: ...
    @property
    def Issuer(self) -> str: ...
    @property
    def OriginalIssuer(self) -> str: ...
    @property
    def Properties(self) -> Generic.IDictionary: ...
    @property
    def Subject(self) -> ClaimsIdentity: ...
    @property
    def Type(self) -> str: ...
    @property
    def Value(self) -> str: ...
    @property
    def ValueType(self) -> str: ...
    @overload
    def ToString() -> str: ...
    @overload
    def WriteTo(self, writer: IO.BinaryWriter) -> None: ...

class ClaimsIdentity(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, identity: Principal.IIdentity): ...
    @overload
    def __init__(self, claims: Generic.IEnumerable): ...
    @overload
    def __init__(self, authenticationType: str): ...
    @overload
    def __init__(self, reader: IO.BinaryReader): ...
    @overload
    def __init__(self, claims: Generic.IEnumerable, authenticationType: str): ...
    @overload
    def __init__(self, identity: Principal.IIdentity, claims: Generic.IEnumerable): ...
    @overload
    def __init__(self, authenticationType: str, nameType: str, roleType: str): ...
    @overload
    def __init__(self, claims: Generic.IEnumerable, authenticationType: str, nameType: str, roleType: str): ...
    @overload
    def __init__(self, identity: Principal.IIdentity, claims: Generic.IEnumerable, authenticationType: str, nameType: str, roleType: str): ...
    @property
    def DefaultIssuer(self) -> str: ...
    @property
    def DefaultNameClaimType(self) -> str: ...
    @property
    def DefaultRoleClaimType(self) -> str: ...
    @overload
    def AddClaim(self, claim: Claim) -> None: ...
    @overload
    def AddClaims(self, claims: Generic.IEnumerable) -> None: ...
    @overload
    def Clone() -> ClaimsIdentity: ...
    @overload
    def FindAll(self, type_: str) -> Generic.IEnumerable: ...
    @overload
    def FindAll(self, match: System.Predicate) -> Generic.IEnumerable: ...
    @overload
    def FindFirst(self, type_: str) -> Claim: ...
    @overload
    def FindFirst(self, match: System.Predicate) -> Claim: ...
    @property
    def Actor(self) -> ClaimsIdentity: ...
    @property
    def AuthenticationType(self) -> str: ...
    @property
    def BootstrapContext(self) -> object: ...
    @property
    def Claims(self) -> Generic.IEnumerable: ...
    @property
    def IsAuthenticated(self) -> bool: ...
    @property
    def Label(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameClaimType(self) -> str: ...
    @property
    def RoleClaimType(self) -> str: ...
    @overload
    def HasClaim(self, match: System.Predicate) -> bool: ...
    @overload
    def HasClaim(self, type_: str, value: str) -> bool: ...
    @overload
    def RemoveClaim(self, claim: Claim) -> None: ...
    @Actor.setter
    def Actor(self, value: System.Void): ...
    @BootstrapContext.setter
    def BootstrapContext(self, value: System.Void): ...
    @Label.setter
    def Label(self, value: System.Void): ...
    @overload
    def TryRemoveClaim(self, claim: Claim) -> bool: ...
    @overload
    def WriteTo(self, writer: IO.BinaryWriter) -> None: ...

class ClaimsPrincipal(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, identities: Generic.IEnumerable): ...
    @overload
    def __init__(self, identity: Principal.IIdentity): ...
    @overload
    def __init__(self, principal: Principal.IPrincipal): ...
    @overload
    def __init__(self, reader: IO.BinaryReader): ...
    @overload
    def AddIdentities(self, identities: Generic.IEnumerable) -> None: ...
    @overload
    def AddIdentity(self, identity: ClaimsIdentity) -> None: ...
    @overload
    def Clone() -> ClaimsPrincipal: ...
    @overload
    def FindAll(self, match: System.Predicate) -> Generic.IEnumerable: ...
    @overload
    def FindAll(self, type_: str) -> Generic.IEnumerable: ...
    @overload
    def FindFirst(self, match: System.Predicate) -> Claim: ...
    @overload
    def FindFirst(self, type_: str) -> Claim: ...
    @property
    def Claims(self) -> Generic.IEnumerable: ...
    @property
    def ClaimsPrincipalSelector(self) -> System.Func: ...
    @property
    def Current(self) -> ClaimsPrincipal: ...
    @property
    def Identities(self) -> Generic.IEnumerable: ...
    @property
    def Identity(self) -> Principal.IIdentity: ...
    @property
    def PrimaryIdentitySelector(self) -> System.Func: ...
    @overload
    def HasClaim(self, match: System.Predicate) -> bool: ...
    @overload
    def HasClaim(self, type_: str, value: str) -> bool: ...
    @overload
    def IsInRole(self, role: str) -> bool: ...
    @ClaimsPrincipalSelector.setter
    def ClaimsPrincipalSelector(self, value: System.Void): ...
    @PrimaryIdentitySelector.setter
    def PrimaryIdentitySelector(self, value: System.Void): ...
    @overload
    def WriteTo(self, writer: IO.BinaryWriter) -> None: ...

class ClaimTypes(object):
    """    """
    @property
    def AuthenticationInstant(self) -> str: ...
    @property
    def AuthenticationMethod(self) -> str: ...
    @property
    def CookiePath(self) -> str: ...
    @property
    def DenyOnlyPrimarySid(self) -> str: ...
    @property
    def DenyOnlyPrimaryGroupSid(self) -> str: ...
    @property
    def DenyOnlyWindowsDeviceGroup(self) -> str: ...
    @property
    def Dsa(self) -> str: ...
    @property
    def Expiration(self) -> str: ...
    @property
    def Expired(self) -> str: ...
    @property
    def GroupSid(self) -> str: ...
    @property
    def IsPersistent(self) -> str: ...
    @property
    def PrimaryGroupSid(self) -> str: ...
    @property
    def PrimarySid(self) -> str: ...
    @property
    def Role(self) -> str: ...
    @property
    def SerialNumber(self) -> str: ...
    @property
    def UserData(self) -> str: ...
    @property
    def Version(self) -> str: ...
    @property
    def WindowsAccountName(self) -> str: ...
    @property
    def WindowsDeviceClaim(self) -> str: ...
    @property
    def WindowsDeviceGroup(self) -> str: ...
    @property
    def WindowsUserClaim(self) -> str: ...
    @property
    def WindowsFqbnVersion(self) -> str: ...
    @property
    def WindowsSubAuthority(self) -> str: ...
    @property
    def Anonymous(self) -> str: ...
    @property
    def Authentication(self) -> str: ...
    @property
    def AuthorizationDecision(self) -> str: ...
    @property
    def Country(self) -> str: ...
    @property
    def DateOfBirth(self) -> str: ...
    @property
    def Dns(self) -> str: ...
    @property
    def DenyOnlySid(self) -> str: ...
    @property
    def Email(self) -> str: ...
    @property
    def Gender(self) -> str: ...
    @property
    def GivenName(self) -> str: ...
    @property
    def Hash(self) -> str: ...
    @property
    def HomePhone(self) -> str: ...
    @property
    def Locality(self) -> str: ...
    @property
    def MobilePhone(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def NameIdentifier(self) -> str: ...
    @property
    def OtherPhone(self) -> str: ...
    @property
    def PostalCode(self) -> str: ...
    @property
    def Rsa(self) -> str: ...
    @property
    def Sid(self) -> str: ...
    @property
    def Spn(self) -> str: ...
    @property
    def StateOrProvince(self) -> str: ...
    @property
    def StreetAddress(self) -> str: ...
    @property
    def Surname(self) -> str: ...
    @property
    def System(self) -> str: ...
    @property
    def Thumbprint(self) -> str: ...
    @property
    def Upn(self) -> str: ...
    @property
    def Uri(self) -> str: ...
    @property
    def Webpage(self) -> str: ...
    @property
    def X500DistinguishedName(self) -> str: ...
    @property
    def Actor(self) -> str: ...

class ClaimValueTypes(object):
    """    """
    @property
    def Base64Binary(self) -> str: ...
    @property
    def Base64Octet(self) -> str: ...
    @property
    def Boolean(self) -> str: ...
    @property
    def Date(self) -> str: ...
    @property
    def DateTime(self) -> str: ...
    @property
    def Double(self) -> str: ...
    @property
    def Fqbn(self) -> str: ...
    @property
    def HexBinary(self) -> str: ...
    @property
    def Integer(self) -> str: ...
    @property
    def Integer32(self) -> str: ...
    @property
    def Integer64(self) -> str: ...
    @property
    def Sid(self) -> str: ...
    @property
    def String(self) -> str: ...
    @property
    def Time(self) -> str: ...
    @property
    def UInteger32(self) -> str: ...
    @property
    def UInteger64(self) -> str: ...
    @property
    def DnsName(self) -> str: ...
    @property
    def Email(self) -> str: ...
    @property
    def Rsa(self) -> str: ...
    @property
    def UpnName(self) -> str: ...
    @property
    def DsaKeyValue(self) -> str: ...
    @property
    def KeyInfo(self) -> str: ...
    @property
    def RsaKeyValue(self) -> str: ...
    @property
    def DaytimeDuration(self) -> str: ...
    @property
    def YearMonthDuration(self) -> str: ...
    @property
    def Rfc822Name(self) -> str: ...
    @property
    def X500Name(self) -> str: ...

# endregion
