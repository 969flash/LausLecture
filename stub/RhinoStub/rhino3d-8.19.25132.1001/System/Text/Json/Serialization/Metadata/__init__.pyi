"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["DefaultJsonTypeInfoResolver", "IJsonTypeInfoResolver", "JsonDerivedType", "JsonPolymorphismOptions", "JsonTypeInfoResolver", "JsonTypeInfoKind", "JsonCollectionInfoValues", "JsonMetadataServices", "JsonObjectInfoValues", "JsonParameterInfoValues", "JsonPropertyInfo", "JsonPropertyInfoValues", "JsonTypeInfo"]
# endregion

# region: Imports
from System import Reflection
from System.Collections import Generic
from System.Runtime import CompilerServices
from System.Text import Json
from System.Text.Json import Serialization
from typing import overload
import enum
import System
# endregion

# region: System.Text.Json, Version=7.0.0.0

class DefaultJsonTypeInfoResolver(object):
    """    """
    def __init__(self): ...
    @property
    def Modifiers(self) -> Generic.IList: ...
    @overload
    def GetTypeInfo(self, type_: System.Type, options: Json.JsonSerializerOptions) -> JsonTypeInfo: ...

class IJsonTypeInfoResolver:
    """    """
    @overload
    def GetTypeInfo(self, type_: System.Type, options: Json.JsonSerializerOptions) -> JsonTypeInfo: ...

class JsonDerivedType(System.ValueType):
    """    """
    @overload
    def __init__(self, derivedType: System.Type): ...
    @overload
    def __init__(self, derivedType: System.Type, typeDiscriminator: int): ...
    @overload
    def __init__(self, derivedType: System.Type, typeDiscriminator: str): ...
    @property
    def DerivedType(self) -> System.Type: ...
    @property
    def TypeDiscriminator(self) -> object: ...

class JsonPolymorphismOptions(object):
    """    """
    def __init__(self): ...
    @property
    def DerivedTypes(self) -> Generic.IList: ...
    @property
    def IgnoreUnrecognizedTypeDiscriminators(self) -> bool: ...
    @property
    def TypeDiscriminatorPropertyName(self) -> str: ...
    @property
    def UnknownDerivedTypeHandling(self) -> Serialization.JsonUnknownDerivedTypeHandling: ...
    @IgnoreUnrecognizedTypeDiscriminators.setter
    def IgnoreUnrecognizedTypeDiscriminators(self, value: System.Void): ...
    @TypeDiscriminatorPropertyName.setter
    def TypeDiscriminatorPropertyName(self, value: System.Void): ...
    @UnknownDerivedTypeHandling.setter
    def UnknownDerivedTypeHandling(self, value: System.Void): ...

class JsonTypeInfoResolver(object):
    """    """
    @overload
    @staticmethod
    def Combine(resolvers: System.Array[IJsonTypeInfoResolver]) -> IJsonTypeInfoResolver: ...

class JsonTypeInfoKind(enum.Enum):
    None_ = 0
    Object = 1
    Enumerable = 2
    Dictionary = 3

class JsonCollectionInfoValues(object):
    """    JsonCollectionInfoValues[TCollection]
    """
    def __init__(self): ...
    @property
    def ElementInfo(self) -> JsonTypeInfo: ...
    @property
    def KeyInfo(self) -> JsonTypeInfo: ...
    @property
    def NumberHandling(self) -> Serialization.JsonNumberHandling: ...
    @property
    def ObjectCreator(self) -> System.Func: ...
    @property
    def SerializeHandler(self) -> System.Action: ...
    @ElementInfo.setter
    def ElementInfo(self, value: System.Void): ...
    @KeyInfo.setter
    def KeyInfo(self, value: System.Void): ...
    @NumberHandling.setter
    def NumberHandling(self, value: System.Void): ...
    @ObjectCreator.setter
    def ObjectCreator(self, value: System.Void): ...
    @SerializeHandler.setter
    def SerializeHandler(self, value: System.Void): ...

class JsonMetadataServices(object):
    """    """
    @overload
    @staticmethod
    def CreateArrayInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateConcurrentQueueInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateConcurrentStackInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateDictionaryInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateIAsyncEnumerableInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateICollectionInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateIDictionaryInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateIDictionaryInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateIEnumerableInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateIEnumerableInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateIListInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateIListInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateImmutableDictionaryInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues, createRangeFunc: System.Func) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateImmutableEnumerableInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues, createRangeFunc: System.Func) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateIReadOnlyDictionaryInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateISetInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateListInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateObjectInfo(options: Json.JsonSerializerOptions, objectInfo: JsonObjectInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreatePropertyInfo(options: Json.JsonSerializerOptions, propertyInfo: JsonPropertyInfoValues) -> JsonPropertyInfo: ...
    @overload
    @staticmethod
    def CreateQueueInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateQueueInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues, addFunc: System.Action) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateStackInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateStackInfo(options: Json.JsonSerializerOptions, collectionInfo: JsonCollectionInfoValues, addFunc: System.Action) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateValueInfo(options: Json.JsonSerializerOptions, converter: Serialization.JsonConverter) -> JsonTypeInfo: ...
    @property
    def BooleanConverter(self) -> Serialization.JsonConverter: ...
    @property
    def ByteArrayConverter(self) -> Serialization.JsonConverter: ...
    @property
    def ByteConverter(self) -> Serialization.JsonConverter: ...
    @property
    def CharConverter(self) -> Serialization.JsonConverter: ...
    @property
    def DateOnlyConverter(self) -> Serialization.JsonConverter: ...
    @property
    def DateTimeConverter(self) -> Serialization.JsonConverter: ...
    @property
    def DateTimeOffsetConverter(self) -> Serialization.JsonConverter: ...
    @property
    def DecimalConverter(self) -> Serialization.JsonConverter: ...
    @property
    def DoubleConverter(self) -> Serialization.JsonConverter: ...
    @property
    def GuidConverter(self) -> Serialization.JsonConverter: ...
    @property
    def Int16Converter(self) -> Serialization.JsonConverter: ...
    @property
    def Int32Converter(self) -> Serialization.JsonConverter: ...
    @property
    def Int64Converter(self) -> Serialization.JsonConverter: ...
    @property
    def JsonArrayConverter(self) -> Serialization.JsonConverter: ...
    @property
    def JsonDocumentConverter(self) -> Serialization.JsonConverter: ...
    @property
    def JsonElementConverter(self) -> Serialization.JsonConverter: ...
    @property
    def JsonNodeConverter(self) -> Serialization.JsonConverter: ...
    @property
    def JsonObjectConverter(self) -> Serialization.JsonConverter: ...
    @property
    def JsonValueConverter(self) -> Serialization.JsonConverter: ...
    @property
    def ObjectConverter(self) -> Serialization.JsonConverter: ...
    @property
    def SByteConverter(self) -> Serialization.JsonConverter: ...
    @property
    def SingleConverter(self) -> Serialization.JsonConverter: ...
    @property
    def StringConverter(self) -> Serialization.JsonConverter: ...
    @property
    def TimeOnlyConverter(self) -> Serialization.JsonConverter: ...
    @property
    def TimeSpanConverter(self) -> Serialization.JsonConverter: ...
    @property
    def UInt16Converter(self) -> Serialization.JsonConverter: ...
    @property
    def UInt32Converter(self) -> Serialization.JsonConverter: ...
    @property
    def UInt64Converter(self) -> Serialization.JsonConverter: ...
    @property
    def UriConverter(self) -> Serialization.JsonConverter: ...
    @property
    def VersionConverter(self) -> Serialization.JsonConverter: ...
    @overload
    @staticmethod
    def GetEnumConverter(options: Json.JsonSerializerOptions) -> Serialization.JsonConverter: ...
    @overload
    @staticmethod
    def GetNullableConverter(underlyingTypeInfo: JsonTypeInfo) -> Serialization.JsonConverter: ...
    @overload
    @staticmethod
    def GetNullableConverter(options: Json.JsonSerializerOptions) -> Serialization.JsonConverter: ...
    @overload
    @staticmethod
    def GetUnsupportedTypeConverter() -> Serialization.JsonConverter: ...

class JsonObjectInfoValues(object):
    """    JsonObjectInfoValues[T]
    """
    def __init__(self): ...
    @property
    def ConstructorParameterMetadataInitializer(self) -> System.Func: ...
    @property
    def NumberHandling(self) -> Serialization.JsonNumberHandling: ...
    @property
    def ObjectCreator(self) -> System.Func: ...
    @property
    def ObjectWithParameterizedConstructorCreator(self) -> System.Func: ...
    @property
    def PropertyMetadataInitializer(self) -> System.Func: ...
    @property
    def SerializeHandler(self) -> System.Action: ...
    @ConstructorParameterMetadataInitializer.setter
    def ConstructorParameterMetadataInitializer(self, value: System.Void): ...
    @NumberHandling.setter
    def NumberHandling(self, value: System.Void): ...
    @ObjectCreator.setter
    def ObjectCreator(self, value: System.Void): ...
    @ObjectWithParameterizedConstructorCreator.setter
    def ObjectWithParameterizedConstructorCreator(self, value: System.Void): ...
    @PropertyMetadataInitializer.setter
    def PropertyMetadataInitializer(self, value: System.Void): ...
    @SerializeHandler.setter
    def SerializeHandler(self, value: System.Void): ...

class JsonParameterInfoValues(object):
    """    """
    def __init__(self): ...
    @property
    def DefaultValue(self) -> object: ...
    @property
    def HasDefaultValue(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def ParameterType(self) -> System.Type: ...
    @property
    def Position(self) -> int: ...
    @DefaultValue.setter
    def DefaultValue(self, value: System.Void): ...
    @HasDefaultValue.setter
    def HasDefaultValue(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @ParameterType.setter
    def ParameterType(self, value: System.Void): ...
    @Position.setter
    def Position(self, value: System.Void): ...

class JsonPropertyInfo(object):
    """    """
    @property
    def AttributeProvider(self) -> Reflection.ICustomAttributeProvider: ...
    @property
    def CustomConverter(self) -> Serialization.JsonConverter: ...
    @property
    def Get(self) -> System.Func: ...
    @property
    def IsExtensionData(self) -> bool: ...
    @property
    def IsRequired(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def NumberHandling(self) -> System.Nullable: ...
    @property
    def Options(self) -> Json.JsonSerializerOptions: ...
    @property
    def Order(self) -> int: ...
    @property
    def PropertyType(self) -> System.Type: ...
    @property
    def Set(self) -> System.Action: ...
    @property
    def ShouldSerialize(self) -> System.Func: ...
    @AttributeProvider.setter
    def AttributeProvider(self, value: System.Void): ...
    @CustomConverter.setter
    def CustomConverter(self, value: System.Void): ...
    @Get.setter
    def Get(self, value: System.Void): ...
    @IsExtensionData.setter
    def IsExtensionData(self, value: System.Void): ...
    @IsRequired.setter
    def IsRequired(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @NumberHandling.setter
    def NumberHandling(self, value: System.Void): ...
    @Order.setter
    def Order(self, value: System.Void): ...
    @Set.setter
    def Set(self, value: System.Void): ...
    @ShouldSerialize.setter
    def ShouldSerialize(self, value: System.Void): ...

class JsonPropertyInfoValues(object):
    """    JsonPropertyInfoValues[T]
    """
    def __init__(self): ...
    @property
    def Converter(self) -> Serialization.JsonConverter: ...
    @property
    def DeclaringType(self) -> System.Type: ...
    @property
    def Getter(self) -> System.Func: ...
    @property
    def HasJsonInclude(self) -> bool: ...
    @property
    def IgnoreCondition(self) -> System.Nullable: ...
    @property
    def IsExtensionData(self) -> bool: ...
    @property
    def IsProperty(self) -> bool: ...
    @property
    def IsPublic(self) -> bool: ...
    @property
    def IsVirtual(self) -> bool: ...
    @property
    def JsonPropertyName(self) -> str: ...
    @property
    def NumberHandling(self) -> System.Nullable: ...
    @property
    def PropertyName(self) -> str: ...
    @property
    def PropertyTypeInfo(self) -> JsonTypeInfo: ...
    @property
    def Setter(self) -> System.Action: ...
    @Converter.setter
    def Converter(self, value: System.Void): ...
    @DeclaringType.setter
    def DeclaringType(self, value: System.Void): ...
    @Getter.setter
    def Getter(self, value: System.Void): ...
    @HasJsonInclude.setter
    def HasJsonInclude(self, value: System.Void): ...
    @IgnoreCondition.setter
    def IgnoreCondition(self, value: System.Void): ...
    @IsExtensionData.setter
    def IsExtensionData(self, value: System.Void): ...
    @IsProperty.setter
    def IsProperty(self, value: System.Void): ...
    @IsPublic.setter
    def IsPublic(self, value: System.Void): ...
    @IsVirtual.setter
    def IsVirtual(self, value: System.Void): ...
    @JsonPropertyName.setter
    def JsonPropertyName(self, value: System.Void): ...
    @NumberHandling.setter
    def NumberHandling(self, value: System.Void): ...
    @PropertyName.setter
    def PropertyName(self, value: System.Void): ...
    @PropertyTypeInfo.setter
    def PropertyTypeInfo(self, value: System.Void): ...
    @Setter.setter
    def Setter(self, value: System.Void): ...

class JsonTypeInfo(JsonTypeInfo):
    """    JsonTypeInfo[T]
    """
    @property
    def CreateObject(self) -> System.Func: ...
    @property
    def SerializeHandler(self) -> System.Action: ...
    @CreateObject.setter
    def CreateObject(self, value: System.Void): ...

class JsonTypeInfo(object):
    """    """
    @overload
    def CreateJsonPropertyInfo(self, propertyType: System.Type, name: str) -> JsonPropertyInfo: ...
    @overload
    @staticmethod
    def CreateJsonTypeInfo(options: Json.JsonSerializerOptions) -> JsonTypeInfo: ...
    @overload
    @staticmethod
    def CreateJsonTypeInfo(type_: System.Type, options: Json.JsonSerializerOptions) -> JsonTypeInfo: ...
    @property
    def Converter(self) -> Serialization.JsonConverter: ...
    @property
    def CreateObject(self) -> System.Func: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def Kind(self) -> JsonTypeInfoKind: ...
    @property
    def NumberHandling(self) -> System.Nullable: ...
    @property
    def OnDeserialized(self) -> System.Action: ...
    @property
    def OnDeserializing(self) -> System.Action: ...
    @property
    def OnSerialized(self) -> System.Action: ...
    @property
    def OnSerializing(self) -> System.Action: ...
    @property
    def Options(self) -> Json.JsonSerializerOptions: ...
    @property
    def PolymorphismOptions(self) -> JsonPolymorphismOptions: ...
    @property
    def Properties(self) -> Generic.IList: ...
    @property
    def Type(self) -> System.Type: ...
    @overload
    def MakeReadOnly() -> None: ...
    @CreateObject.setter
    def CreateObject(self, value: System.Void): ...
    @NumberHandling.setter
    def NumberHandling(self, value: System.Void): ...
    @OnDeserialized.setter
    def OnDeserialized(self, value: System.Void): ...
    @OnDeserializing.setter
    def OnDeserializing(self, value: System.Void): ...
    @OnSerialized.setter
    def OnSerialized(self, value: System.Void): ...
    @OnSerializing.setter
    def OnSerializing(self, value: System.Void): ...
    @PolymorphismOptions.setter
    def PolymorphismOptions(self, value: System.Void): ...

# endregion
