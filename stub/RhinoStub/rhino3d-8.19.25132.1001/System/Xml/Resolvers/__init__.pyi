"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["XmlKnownDtds", "XmlPreloadedResolver"]
# endregion

# region: Imports
from System import IO
from System import Xml
from System.Collections import Generic
from System.Runtime import CompilerServices
from System.Threading import Tasks
from typing import overload
import enum
import System
# endregion

# region: System.Private.Xml, Version=7.0.0.0

class XmlKnownDtds(enum.Enum):
    None_ = 0
    Xhtml10 = 1
    Rss091 = 2
    All = 65535

class XmlPreloadedResolver(Xml.XmlResolver):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, preloadedDtds: XmlKnownDtds): ...
    @overload
    def __init__(self, fallbackResolver: Xml.XmlResolver): ...
    @overload
    def __init__(self, fallbackResolver: Xml.XmlResolver, preloadedDtds: XmlKnownDtds): ...
    @overload
    def __init__(self, fallbackResolver: Xml.XmlResolver, preloadedDtds: XmlKnownDtds, uriComparer: Generic.IEqualityComparer): ...
    @overload
    def Add(self, uri: System.Uri, value: System.System.Array[System.Byte]) -> None: ...
    @overload
    def Add(self, uri: System.Uri, value: IO.Stream) -> None: ...
    @overload
    def Add(self, uri: System.Uri, value: str) -> None: ...
    @overload
    def Add(self, uri: System.Uri, value: System.System.Array[System.Byte], offset: int, count: int) -> None: ...
    @property
    def PreloadedUris(self) -> Generic.IEnumerable: ...
    @overload
    def GetEntity(self, absoluteUri: System.Uri, role: str, ofObjectToReturn: System.Type) -> object: ...
    @overload
    def GetEntityAsync(self, absoluteUri: System.Uri, role: str, ofObjectToReturn: System.Type) -> Tasks.Task: ...
    @overload
    def Remove(self, uri: System.Uri) -> None: ...
    @overload
    def ResolveUri(self, baseUri: System.Uri, relativeUri: str) -> System.Uri: ...
    @Credentials.setter
    def Credentials(self, value: System.Void): ...
    @overload
    def SupportsType(self, absoluteUri: System.Uri, type_: System.Type) -> bool: ...

# endregion
