"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["CommittableTransaction", "DependentTransaction", "Enlistment", "IDtcTransaction", "IEnlistmentNotification", "IPromotableSinglePhaseNotification", "ISimpleTransactionSuperior", "ISinglePhaseNotification", "ITransactionPromoter", "PreparingEnlistment", "SinglePhaseEnlistment", "SubordinateTransaction", "TransactionEventArgs", "TransactionCompletedEventHandler", "IsolationLevel", "TransactionStatus", "DependentCloneOption", "EnlistmentOptions", "Transaction", "TransactionException", "TransactionAbortedException", "TransactionInDoubtException", "TransactionManagerCommunicationException", "TransactionPromotionException", "TransactionInformation", "HostCurrentTransactionCallback", "TransactionStartedEventHandler", "TransactionManager", "TransactionOptions", "TransactionScopeOption", "TransactionScopeAsyncFlowOption", "EnterpriseServicesInteropOption", "TransactionScope", "TransactionInterop"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: Exports
__all__ = []
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
# endregion

# region: System.Security.Permissions, Version=7.0.0.0

# endregion

# region: System.Transactions.Local, Version=7.0.0.0

class CommittableTransaction(Transaction):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, timeout: System.TimeSpan): ...
    @overload
    def __init__(self, options: TransactionOptions): ...
    @overload
    def BeginCommit(self, asyncCallback: System.AsyncCallback, asyncState: object) -> System.IAsyncResult: ...
    @overload
    def Commit() -> None: ...
    @overload
    def EndCommit(self, asyncResult: System.IAsyncResult) -> None: ...
    @property
    def TransactionCompleted(self): ...

class DependentTransaction(Transaction):
    """    """
    @overload
    def Complete() -> None: ...
    @property
    def TransactionCompleted(self): ...

class Enlistment(object):
    """    """
    @overload
    def Done() -> None: ...

class IDtcTransaction:
    """    """
    @overload
    def Abort(self, reason: System.IntPtr, retaining: int, async_: int) -> None: ...
    @overload
    def Commit(self, retaining: int, commitType: int, reserved: int) -> None: ...
    @overload
    def GetTransactionInfo(self, transactionInformation: System.IntPtr) -> None: ...

class IEnlistmentNotification:
    """    """
    @overload
    def Commit(self, enlistment: Enlistment) -> None: ...
    @overload
    def InDoubt(self, enlistment: Enlistment) -> None: ...
    @overload
    def Prepare(self, preparingEnlistment: PreparingEnlistment) -> None: ...
    @overload
    def Rollback(self, enlistment: Enlistment) -> None: ...

class IPromotableSinglePhaseNotification:
    """    """
    @overload
    def Initialize() -> None: ...
    @overload
    def Rollback(self, singlePhaseEnlistment: SinglePhaseEnlistment) -> None: ...
    @overload
    def SinglePhaseCommit(self, singlePhaseEnlistment: SinglePhaseEnlistment) -> None: ...

class ISimpleTransactionSuperior:
    """    """
    @overload
    def Rollback() -> None: ...

class ISinglePhaseNotification:
    """    """
    @overload
    def SinglePhaseCommit(self, singlePhaseEnlistment: SinglePhaseEnlistment) -> None: ...

class ITransactionPromoter:
    """    """
    @overload
    def Promote() -> System.System.Array[System.Byte]: ...

class PreparingEnlistment(Enlistment):
    """    """
    @overload
    def ForceRollback() -> None: ...
    @overload
    def ForceRollback(self, e: System.Exception) -> None: ...
    @overload
    def Prepared() -> None: ...
    @overload
    def RecoveryInformation() -> System.System.Array[System.Byte]: ...

class SinglePhaseEnlistment(Enlistment):
    """    """
    @overload
    def Aborted() -> None: ...
    @overload
    def Aborted(self, e: System.Exception) -> None: ...
    @overload
    def Committed() -> None: ...
    @overload
    def InDoubt() -> None: ...
    @overload
    def InDoubt(self, e: System.Exception) -> None: ...

class SubordinateTransaction(Transaction):
    """    """
    def __init__(self, isoLevel: IsolationLevel, superior: ISimpleTransactionSuperior): ...
    @property
    def TransactionCompleted(self): ...

class TransactionEventArgs(System.EventArgs):
    """    """
    def __init__(self): ...
    @property
    def Transaction(self) -> Transaction: ...

class TransactionCompletedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, sender: object, e: TransactionEventArgs, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, sender: object, e: TransactionEventArgs) -> None: ...

class IsolationLevel(enum.Enum):
    Serializable = 0
    RepeatableRead = 1
    ReadCommitted = 2
    ReadUncommitted = 3
    Snapshot = 4
    Chaos = 5
    Unspecified = 6

class TransactionStatus(enum.Enum):
    Active = 0
    Committed = 1
    Aborted = 2
    InDoubt = 3

class DependentCloneOption(enum.Enum):
    BlockCommitUntilComplete = 0
    RollbackIfNotComplete = 1

class EnlistmentOptions(enum.Enum):
    None_ = 0
    EnlistDuringPrepareRequired = 1

class Transaction(object):
    """    """
    @overload
    def Clone() -> Transaction: ...
    @overload
    def DependentClone(self, cloneOption: DependentCloneOption) -> DependentTransaction: ...
    @overload
    def Dispose() -> None: ...
    @overload
    def EnlistDurable(self, resourceManagerIdentifier: System.Guid, singlePhaseNotification: ISinglePhaseNotification, enlistmentOptions: EnlistmentOptions) -> Enlistment: ...
    @overload
    def EnlistDurable(self, resourceManagerIdentifier: System.Guid, enlistmentNotification: IEnlistmentNotification, enlistmentOptions: EnlistmentOptions) -> Enlistment: ...
    @overload
    def EnlistPromotableSinglePhase(self, promotableSinglePhaseNotification: IPromotableSinglePhaseNotification) -> bool: ...
    @overload
    def EnlistPromotableSinglePhase(self, promotableSinglePhaseNotification: IPromotableSinglePhaseNotification, promoterType: System.Guid) -> bool: ...
    @overload
    def EnlistVolatile(self, enlistmentNotification: IEnlistmentNotification, enlistmentOptions: EnlistmentOptions) -> Enlistment: ...
    @overload
    def EnlistVolatile(self, singlePhaseNotification: ISinglePhaseNotification, enlistmentOptions: EnlistmentOptions) -> Enlistment: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Current(self) -> Transaction: ...
    @property
    def IsolationLevel(self) -> IsolationLevel: ...
    @property
    def PromoterType(self) -> System.Guid: ...
    @property
    def TransactionInformation(self) -> TransactionInformation: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def GetPromotedToken() -> System.System.Array[System.Byte]: ...
    @overload
    def PromoteAndEnlistDurable(self, resourceManagerIdentifier: System.Guid, promotableNotification: IPromotableSinglePhaseNotification, enlistmentNotification: ISinglePhaseNotification, enlistmentOptions: EnlistmentOptions) -> Enlistment: ...
    @overload
    def Rollback() -> None: ...
    @overload
    def Rollback(self, e: System.Exception) -> None: ...
    @Current.setter
    def Current(self, value: System.Void): ...
    @overload
    def SetDistributedTransactionIdentifier(self, promotableNotification: IPromotableSinglePhaseNotification, distributedTransactionIdentifier: System.Guid) -> None: ...
    @property
    def TransactionCompleted(self): ...

class TransactionException(System.SystemException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class TransactionAbortedException(TransactionException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class TransactionInDoubtException(TransactionException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class TransactionManagerCommunicationException(TransactionException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class TransactionPromotionException(TransactionException):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, innerException: System.Exception): ...

class TransactionInformation(object):
    """    """
    @property
    def CreationTime(self) -> System.DateTime: ...
    @property
    def DistributedIdentifier(self) -> System.Guid: ...
    @property
    def LocalIdentifier(self) -> str: ...
    @property
    def Status(self) -> TransactionStatus: ...

class HostCurrentTransactionCallback(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> Transaction: ...
    @overload
    def Invoke() -> Transaction: ...

class TransactionStartedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, object_: object, method: System.IntPtr): ...
    @overload
    def BeginInvoke(self, sender: object, e: TransactionEventArgs, callback: System.AsyncCallback, object_: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, result: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, sender: object, e: TransactionEventArgs) -> None: ...

class TransactionManager(object):
    """    """
    @property
    def DefaultTimeout(self) -> System.TimeSpan: ...
    @property
    def HostCurrentCallback(self) -> HostCurrentTransactionCallback: ...
    @property
    def ImplicitDistributedTransactions(self) -> bool: ...
    @property
    def MaximumTimeout(self) -> System.TimeSpan: ...
    @overload
    @staticmethod
    def RecoveryComplete(resourceManagerIdentifier: System.Guid) -> None: ...
    @overload
    @staticmethod
    def Reenlist(resourceManagerIdentifier: System.Guid, recoveryInformation: System.System.Array[System.Byte], enlistmentNotification: IEnlistmentNotification) -> Enlistment: ...
    @DefaultTimeout.setter
    def DefaultTimeout(self, value: System.Void): ...
    @HostCurrentCallback.setter
    def HostCurrentCallback(self, value: System.Void): ...
    @ImplicitDistributedTransactions.setter
    def ImplicitDistributedTransactions(self, value: System.Void): ...
    @MaximumTimeout.setter
    def MaximumTimeout(self, value: System.Void): ...
    @property
    def DistributedTransactionStarted(self): ...

class TransactionOptions(System.ValueType):
    """    """
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def Equals(self, other: TransactionOptions) -> bool: ...
    @property
    def IsolationLevel(self) -> IsolationLevel: ...
    @property
    def Timeout(self) -> System.TimeSpan: ...
    @overload
    def GetHashCode() -> int: ...
    @IsolationLevel.setter
    def IsolationLevel(self, value: System.Void): ...
    @Timeout.setter
    def Timeout(self, value: System.Void): ...

class TransactionScopeOption(enum.Enum):
    Required = 0
    RequiresNew = 1
    Suppress = 2

class TransactionScopeAsyncFlowOption(enum.Enum):
    Suppress = 0
    Enabled = 1

class EnterpriseServicesInteropOption(enum.Enum):
    None_ = 0
    Automatic = 1
    Full = 2

class TransactionScope(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, scopeOption: TransactionScopeOption): ...
    @overload
    def __init__(self, asyncFlowOption: TransactionScopeAsyncFlowOption): ...
    @overload
    def __init__(self, transactionToUse: Transaction): ...
    @overload
    def __init__(self, scopeOption: TransactionScopeOption, asyncFlowOption: TransactionScopeAsyncFlowOption): ...
    @overload
    def __init__(self, scopeOption: TransactionScopeOption, scopeTimeout: System.TimeSpan): ...
    @overload
    def __init__(self, scopeOption: TransactionScopeOption, transactionOptions: TransactionOptions): ...
    @overload
    def __init__(self, transactionToUse: Transaction, asyncFlowOption: TransactionScopeAsyncFlowOption): ...
    @overload
    def __init__(self, transactionToUse: Transaction, scopeTimeout: System.TimeSpan): ...
    @overload
    def __init__(self, scopeOption: TransactionScopeOption, scopeTimeout: System.TimeSpan, asyncFlowOption: TransactionScopeAsyncFlowOption): ...
    @overload
    def __init__(self, scopeOption: TransactionScopeOption, transactionOptions: TransactionOptions, asyncFlowOption: TransactionScopeAsyncFlowOption): ...
    @overload
    def __init__(self, scopeOption: TransactionScopeOption, transactionOptions: TransactionOptions, interopOption: EnterpriseServicesInteropOption): ...
    @overload
    def __init__(self, transactionToUse: Transaction, scopeTimeout: System.TimeSpan, asyncFlowOption: TransactionScopeAsyncFlowOption): ...
    @overload
    def __init__(self, transactionToUse: Transaction, scopeTimeout: System.TimeSpan, interopOption: EnterpriseServicesInteropOption): ...
    @overload
    def Complete() -> None: ...
    @overload
    def Dispose() -> None: ...

class TransactionInterop(object):
    """    """
    @property
    def PromoterTypeDtc(self) -> System.Guid: ...
    @overload
    @staticmethod
    def GetDtcTransaction(transaction: Transaction) -> IDtcTransaction: ...
    @overload
    @staticmethod
    def GetExportCookie(transaction: Transaction, whereabouts: System.System.Array[System.Byte]) -> System.System.Array[System.Byte]: ...
    @overload
    @staticmethod
    def GetTransactionFromDtcTransaction(transactionNative: IDtcTransaction) -> Transaction: ...
    @overload
    @staticmethod
    def GetTransactionFromExportCookie(cookie: System.System.Array[System.Byte]) -> Transaction: ...
    @overload
    @staticmethod
    def GetTransactionFromTransmitterPropagationToken(propagationToken: System.System.Array[System.Byte]) -> Transaction: ...
    @overload
    @staticmethod
    def GetTransmitterPropagationToken(transaction: Transaction) -> System.System.Array[System.Byte]: ...
    @overload
    @staticmethod
    def GetWhereabouts() -> System.System.Array[System.Byte]: ...

# endregion
