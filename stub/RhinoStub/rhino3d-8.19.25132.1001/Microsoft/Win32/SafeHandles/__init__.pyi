"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["SafeAccessTokenHandle"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from System.Runtime import InteropServices
from typing import overload
import System
# endregion

# region: Exports
__all__ = ["SafeX509ChainHandle", "SafeNCryptHandle", "SafeNCryptKeyHandle", "SafeNCryptProviderHandle", "SafeNCryptSecretHandle"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from System.Runtime import InteropServices
from typing import overload
import System
# endregion

# region: Exports
__all__ = ["SafePipeHandle"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: Exports
__all__ = ["SafeMemoryMappedFileHandle", "SafeMemoryMappedViewHandle"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from System.Runtime import InteropServices
from typing import overload
# endregion

# region: Exports
__all__ = ["SafeRegistryHandle"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: Exports
__all__ = ["SafeProcessHandle"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: Exports
__all__ = ["CriticalHandleMinusOneIsInvalid", "CriticalHandleZeroOrMinusOneIsInvalid", "SafeHandleMinusOneIsInvalid", "SafeHandleZeroOrMinusOneIsInvalid", "SafeFileHandle", "SafeWaitHandle"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from System.Runtime import InteropServices
from typing import overload
import System
# endregion

# region: System.Private.CoreLib, Version=7.0.0.0

class CriticalHandleMinusOneIsInvalid(InteropServices.CriticalHandle):
    """    """
    @property
    def IsInvalid(self) -> bool: ...

class CriticalHandleZeroOrMinusOneIsInvalid(InteropServices.CriticalHandle):
    """    """
    @property
    def IsInvalid(self) -> bool: ...

class SafeHandleMinusOneIsInvalid(InteropServices.SafeHandle):
    """    """
    @property
    def IsInvalid(self) -> bool: ...

class SafeHandleZeroOrMinusOneIsInvalid(InteropServices.SafeHandle):
    """    """
    @property
    def IsInvalid(self) -> bool: ...

class SafeFileHandle(SafeHandleZeroOrMinusOneIsInvalid):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, preexistingHandle: System.IntPtr, ownsHandle: bool): ...
    @property
    def IsAsync(self) -> bool: ...

class SafeWaitHandle(SafeHandleZeroOrMinusOneIsInvalid):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, existingHandle: System.IntPtr, ownsHandle: bool): ...

# endregion

# region: System.Diagnostics.Process, Version=7.0.0.0

class SafeProcessHandle(SafeHandleZeroOrMinusOneIsInvalid):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, existingHandle: System.IntPtr, ownsHandle: bool): ...

# endregion

# region: Microsoft.Win32.Registry, Version=7.0.0.0

class SafeRegistryHandle(SafeHandleZeroOrMinusOneIsInvalid):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, preexistingHandle: System.IntPtr, ownsHandle: bool): ...

# endregion

# region: System.IO.MemoryMappedFiles, Version=7.0.0.0

class SafeMemoryMappedFileHandle(SafeHandleZeroOrMinusOneIsInvalid):
    """    """
    def __init__(self): ...
    @property
    def IsInvalid(self) -> bool: ...

class SafeMemoryMappedViewHandle(InteropServices.SafeBuffer):
    """    """
    def __init__(self): ...

# endregion

# region: System.IO.Pipes, Version=7.0.0.0

class SafePipeHandle(SafeHandleZeroOrMinusOneIsInvalid):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, preexistingHandle: System.IntPtr, ownsHandle: bool): ...

# endregion

# region: System.Security.Cryptography, Version=7.0.0.0

class SafeX509ChainHandle(SafeHandleZeroOrMinusOneIsInvalid):
    """    """
    def __init__(self): ...

class SafeNCryptHandle(SafeHandleZeroOrMinusOneIsInvalid):
    """    """

class SafeNCryptKeyHandle(SafeNCryptHandle):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, handle: System.IntPtr, parentHandle: InteropServices.SafeHandle): ...

class SafeNCryptProviderHandle(SafeNCryptHandle):
    """    """
    def __init__(self): ...

class SafeNCryptSecretHandle(SafeNCryptHandle):
    """    """
    def __init__(self): ...

# endregion

# region: System.Security.Principal.Windows, Version=7.0.0.0

class SafeAccessTokenHandle(InteropServices.SafeHandle):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, handle: System.IntPtr): ...
    @property
    def InvalidHandle(self) -> SafeAccessTokenHandle: ...
    @property
    def IsInvalid(self) -> bool: ...

# endregion
