"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["AnalyzerTelemetryInfo"]
# endregion

# region: Imports
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: Microsoft.CodeAnalysis, Version=4.6.0.0

class AnalyzerTelemetryInfo(object):
    """    """
    def __init__(self): ...
    @property
    def AdditionalFileActionsCount(self) -> int: ...
    @property
    def CodeBlockActionsCount(self) -> int: ...
    @property
    def CodeBlockEndActionsCount(self) -> int: ...
    @property
    def CodeBlockStartActionsCount(self) -> int: ...
    @property
    def CompilationActionsCount(self) -> int: ...
    @property
    def CompilationEndActionsCount(self) -> int: ...
    @property
    def CompilationStartActionsCount(self) -> int: ...
    @property
    def Concurrent(self) -> bool: ...
    @property
    def ExecutionTime(self) -> System.TimeSpan: ...
    @property
    def OperationActionsCount(self) -> int: ...
    @property
    def OperationBlockActionsCount(self) -> int: ...
    @property
    def OperationBlockEndActionsCount(self) -> int: ...
    @property
    def OperationBlockStartActionsCount(self) -> int: ...
    @property
    def SemanticModelActionsCount(self) -> int: ...
    @property
    def SuppressionActionsCount(self) -> int: ...
    @property
    def SymbolActionsCount(self) -> int: ...
    @property
    def SymbolEndActionsCount(self) -> int: ...
    @property
    def SymbolStartActionsCount(self) -> int: ...
    @property
    def SyntaxNodeActionsCount(self) -> int: ...
    @property
    def SyntaxTreeActionsCount(self) -> int: ...
    @AdditionalFileActionsCount.setter
    def AdditionalFileActionsCount(self, value: System.Void): ...
    @CodeBlockActionsCount.setter
    def CodeBlockActionsCount(self, value: System.Void): ...
    @CodeBlockEndActionsCount.setter
    def CodeBlockEndActionsCount(self, value: System.Void): ...
    @CodeBlockStartActionsCount.setter
    def CodeBlockStartActionsCount(self, value: System.Void): ...
    @CompilationActionsCount.setter
    def CompilationActionsCount(self, value: System.Void): ...
    @CompilationEndActionsCount.setter
    def CompilationEndActionsCount(self, value: System.Void): ...
    @CompilationStartActionsCount.setter
    def CompilationStartActionsCount(self, value: System.Void): ...
    @Concurrent.setter
    def Concurrent(self, value: System.Void): ...
    @ExecutionTime.setter
    def ExecutionTime(self, value: System.Void): ...
    @OperationActionsCount.setter
    def OperationActionsCount(self, value: System.Void): ...
    @OperationBlockActionsCount.setter
    def OperationBlockActionsCount(self, value: System.Void): ...
    @OperationBlockEndActionsCount.setter
    def OperationBlockEndActionsCount(self, value: System.Void): ...
    @OperationBlockStartActionsCount.setter
    def OperationBlockStartActionsCount(self, value: System.Void): ...
    @SemanticModelActionsCount.setter
    def SemanticModelActionsCount(self, value: System.Void): ...
    @SuppressionActionsCount.setter
    def SuppressionActionsCount(self, value: System.Void): ...
    @SymbolActionsCount.setter
    def SymbolActionsCount(self, value: System.Void): ...
    @SymbolEndActionsCount.setter
    def SymbolEndActionsCount(self, value: System.Void): ...
    @SymbolStartActionsCount.setter
    def SymbolStartActionsCount(self, value: System.Void): ...
    @SyntaxNodeActionsCount.setter
    def SyntaxNodeActionsCount(self, value: System.Void): ...
    @SyntaxTreeActionsCount.setter
    def SyntaxTreeActionsCount(self, value: System.Void): ...

# endregion
