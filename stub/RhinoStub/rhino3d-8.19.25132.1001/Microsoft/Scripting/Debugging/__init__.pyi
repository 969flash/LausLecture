"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["CompilerServices", "DebugFrame", "DebugSourceFile", "DebugThread", "ForceToGeneratorLoopException", "FunctionInfo", "RuntimeOps", "TraceEventKind", "ITraceCallback", "ITracePipeline", "TracePipeline"]
# endregion

# region: Imports
from Microsoft import Scripting
from Microsoft.Scripting.Debugging import CompilerServices
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: Microsoft.Dynamic, Version=1.3.1.0

class DebugFrame(object):
    """    """

class DebugSourceFile(object):
    """    """
    @property
    def Mode(self) -> int: ...

class DebugThread(object):
    """    """

class ForceToGeneratorLoopException(System.Exception):
    """    """
    def __init__(self): ...

class FunctionInfo(object):
    """    """

class RuntimeOps(object):
    """    """

class TraceEventKind(enum.Enum):
    FrameEnter = 0
    FrameExit = 1
    ThreadExit = 2
    TracePoint = 3
    Exception = 4
    ExceptionUnwind = 5

class ITraceCallback:
    """    """
    @overload
    def OnTraceEvent(self, kind: TraceEventKind, name: str, sourceFileName: str, sourceSpan: Scripting.SourceSpan, scopeCallback: System.Func, payload: object, customPayload: object) -> None: ...

class ITracePipeline:
    """    """
    @overload
    def Close() -> None: ...
    @property
    def TraceCallback(self) -> ITraceCallback: ...
    @TraceCallback.setter
    def TraceCallback(self, value: System.Void): ...
    @overload
    def TrySetNextStatement(self, sourceFile: str, sourceSpan: Scripting.SourceSpan) -> bool: ...

class TracePipeline(object):
    """    """
    @overload
    def Close() -> None: ...
    @overload
    @staticmethod
    def CreateInstance(debugContext: CompilerServices.DebugContext) -> TracePipeline: ...
    @property
    def TraceCallback(self) -> ITraceCallback: ...
    @TraceCallback.setter
    def TraceCallback(self, value: System.Void): ...
    @overload
    def TrySetNextStatement(self, sourceFile: str, sourceSpan: Scripting.SourceSpan) -> bool: ...

# endregion
