"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_ScriptParam", "GH_ScriptParamCTX"]
# endregion

# region: Imports
from Grasshopper import Kernel
from Grasshopper.Kernel import Data
from Rhino.Runtime import Code
from Rhino.Runtime.Code import Execution
from Rhino.Runtime.Code import Serialization
from RhinoCodePlatform import GH
from RhinoCodePlatform.Rhino3D.Languages.GH1 import Constraints
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
# endregion

# region: RhinoCodePlatform.Rhino3D, Version=8.19.25132.1001

class GH_ScriptParam(GH.ScriptParam):
    """    """
    def __init__(self, name: str, paramType: Code.ParamType, prettyName: str, description: str, access: GH.ScriptParamAccess, persistentData: Data.GH_Structure, kind: GH.ScriptParamKind, isHidden: bool, isStrict: bool, isPreviewCapable: bool, isOptional: bool): ...
    @property
    def PersistentData(self) -> Data.GH_Structure: ...
    @overload
    def Read(self, reader: Serialization.IReader) -> None: ...
    @overload
    @staticmethod
    def TryGetParamType(name: str) -> (bool, Code.ParamType): ...
    @overload
    @staticmethod
    def TryGetParamType(namespaces: Generic.IEnumerable, name: str) -> (bool, Code.ParamType): ...
    @overload
    @staticmethod
    def TryGetParamTypeFromConverter(typeName: str) -> (bool, Code.ParamType): ...
    @overload
    def Write(self, writer: Serialization.IWriter) -> None: ...

class GH_ScriptParamCTX(GH.ScriptParamCTX):
    """    """
    def __init__(self, param: Kernel.IGH_Param, name: str, prettyName: str, kind: GH.ScriptParamKind, constraint: Constraints.IParamConstraint): ...
    @overload
    def CreateParameter(self, side: Kernel.GH_ParameterSide) -> Kernel.IGH_Param: ...
    @overload
    def Expire() -> None: ...
    @overload
    def SetFrom(self, context: Execution.RunContext) -> None: ...
    @overload
    def SetFrom(self, component: Kernel.GH_Component, _: Kernel.IGH_DataAccess, index: int) -> None: ...
    @overload
    def SetTo(self, context: Execution.RunContext) -> None: ...
    @overload
    def SetTo(self, _: Kernel.GH_Component, dataAccess: Kernel.IGH_DataAccess, index: int) -> None: ...
    @overload
    @staticmethod
    def TryCreate(param: Kernel.IGH_Param, name: str) -> (bool, GH_ScriptParamCTX): ...
    @overload
    def TryFindTarget(self, document: Kernel.GH_Document) -> bool: ...

# endregion
