"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["RunGroups", "Params", "Legacy", "Converters", "Contexts", "Constraints", "Attributes", "Grasshopper1", "Grasshopper1Code", "Grasshopper1Extensions_Component", "Grasshopper1Extensions_Param", "Grasshopper1Script", "Grasshopper1ScriptCTX", "Grasshopper1ScriptHelpers", "Grasshopper1ScriptInstance", "Grasshopper1ScriptLibrary", "IGrasshopper1Script", "Grasshopper1CodeState", "Grasshopper1Serializer", "ScriptModeTransition", "ScriptInstanceInfo"]
# endregion

# region: Imports
from GH_IO import Serialization
from Grasshopper import Kernel
from Grasshopper.Kernel import Data
from Rhino import Geometry
from Rhino.Runtime import Code
from Rhino.Runtime.Code import Diagnostics
from Rhino.Runtime.Code import Editing
from Rhino.Runtime.Code import Execution
from Rhino.Runtime.Code import Languages
from Rhino.Runtime.Code import Serialization
from Rhino.Runtime.Code import Storage
from Rhino.Runtime.Code import Text
from RhinoCodePlatform import GH
from RhinoCodePlatform import GH1
from RhinoCodePlatform.Rhino3D.Languages.GH1 import Legacy
from System.Collections import Generic
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import enum
import Rhino
import System
# endregion

# region: RhinoCodePlatform.Rhino3D, Version=8.19.25132.1001

class Grasshopper1(Languages.Language):
    """    """
    def __init__(self): ...
    @overload
    def CreateCode() -> Grasshopper1Code: ...
    @overload
    def CreateLibrary(self, uri: System.Uri) -> Languages.LanguageLibrary: ...
    @overload
    def CreateLibrary(self, name: str) -> Languages.LanguageSourceLibrary: ...
    @overload
    @staticmethod
    def ExpireCache(document: Kernel.GH_Document) -> None: ...
    @overload
    @staticmethod
    def ExtractDocument(storageState: Storage.StorageState) -> Kernel.GH_Document: ...
    @overload
    @staticmethod
    def ExtractDocument(archive: Serialization.GH_Archive, storageUri: System.Uri) -> Kernel.GH_Document: ...
    @property
    def AnyDoubleConverter(self) -> Execution.IParamValueConverter: ...
    @property
    def AnyStringConverter(self) -> Execution.IParamValueConverter: ...
    @property
    def Capabilities(self) -> Languages.LanguageCapabilities: ...
    @property
    def CastConverter(self) -> Execution.IParamValueConverter: ...
    @property
    def DoubleConverter(self) -> Execution.IParamValueConverter: ...
    @property
    def GooConverter(self) -> Execution.IParamValueConverter: ...
    @property
    def Id(self) -> Languages.LanguageIdentity: ...
    @property
    def PythonDynamicConverter(self) -> Execution.IParamValueConverter: ...
    @property
    def PythonFloatConverter(self) -> Execution.IParamValueConverter: ...
    @property
    def PythonStringConverter(self) -> Execution.IParamValueConverter: ...
    @property
    def StorageFilters(self) -> Generic.IEnumerable: ...
    @property
    def StringConverter(self) -> Execution.IParamValueConverter: ...
    @overload
    @staticmethod
    def GetConfiguredPythonConverter() -> Execution.IParamValueConverter: ...
    @overload
    @staticmethod
    def GetConverter(guid: System.Guid) -> Execution.IParamValueConverter: ...
    @overload
    @staticmethod
    def GetConverters() -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def GetConverters(spec: Languages.LanguageSpec) -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def GetGrasshopperReferences() -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def GetInputs(document: Kernel.GH_Document, contextParams: bool, legacyGroupParams: bool) -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def GetOutputs(document: Kernel.GH_Document, contextParams: bool, legacyGroupParams: bool) -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def GetRuntimeMessageLevel(severity: Diagnostics.DiagnosticSeverity) -> Kernel.GH_RuntimeMessageLevel: ...
    @overload
    @staticmethod
    def GetScripts(document: Kernel.GH_Document) -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def HasAnyContextualComponents(document: Kernel.GH_Document) -> bool: ...
    @overload
    @staticmethod
    def TryExtractDocument(storageState: Storage.StorageState) -> (bool, Kernel.GH_Document): ...
    @overload
    @staticmethod
    def TryExtractDocument(archive: Serialization.GH_Archive) -> (bool, Kernel.GH_Document): ...
    @overload
    @staticmethod
    def TryExtractDocument(archive: Serialization.GH_Archive, storageUri: System.Uri) -> (bool, Kernel.GH_Document): ...
    @overload
    @staticmethod
    def TryGetConverter(spec: Languages.LanguageSpec, type_: System.Type) -> (bool, Execution.IParamValueConverter): ...
    @overload
    @staticmethod
    def TryGetDocumentUri(document: Kernel.GH_Document) -> (bool, System.Uri): ...
    @overload
    @staticmethod
    def TryGetSpecialConverter(id_: System.Guid) -> (bool, Execution.IParamValueConverter): ...

class Grasshopper1Code(Code.Code):
    """    """
    def __init__(self, lang: Languages.ILanguage): ...
    @overload
    def Edit(self, options: Editing.EditorOptions, theme: Editing.EditorTheme) -> Editing.ICodeEditContext: ...
    @overload
    def ExpireCache() -> None: ...
    @property
    def Archive(self) -> Serialization.GH_Archive: ...
    @overload
    def GetContextOptionsDefaults() -> Execution.ReadOnlyContextOptions: ...
    @overload
    def IsCached() -> bool: ...
    @overload
    def IsCached(self, context: Execution.BuildContext) -> bool: ...
    @property
    def EnvironSet(self): ...
    @property
    def PackagesRestored(self): ...
    @property
    def DebugControlsSet(self): ...
    @property
    def ProfilerSet(self): ...
    @property
    def StorageSet(self): ...
    @property
    def TitleSet(self): ...

class Grasshopper1Extensions_Component(object):
    """    """
    @overload
    @staticmethod
    def DrawViewportMeshes(component: Kernel.GH_Component, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    @staticmethod
    def DrawViewportWires(component: Kernel.GH_Component, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    @staticmethod
    def GetClipBox(component: Kernel.GH_Component) -> Geometry.BoundingBox: ...
    @overload
    @staticmethod
    def IterationGuesstimate(component: Kernel.GH_Component) -> int: ...

class Grasshopper1Extensions_Param(object):
    """    """
    @overload
    @staticmethod
    def CreateParameter(scriptParam: GH.ScriptParam, majorVersion: int) -> Kernel.IGH_Param: ...
    @overload
    @staticmethod
    def CreateParameter(converter: Execution.IParamValueConverter, majorVersion: int) -> Kernel.IGH_Param: ...
    @overload
    @staticmethod
    def CreateParameter(converter: Execution.IParamValueConverter, data: Data.GH_Structure, majorVersion: int) -> Kernel.IGH_Param: ...
    @overload
    @staticmethod
    def TryCreateParameter(scriptParam: GH.ScriptParam, majorVersion: int) -> (bool, Kernel.IGH_Param): ...

class Grasshopper1Script(GH1.ScriptTemplate):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, langId: Languages.LanguageIdentity): ...
    @overload
    def __init__(self, template: Code.Template): ...
    @overload
    def __init__(self, text: str): ...
    @overload
    def __init__(self, storageUri: System.Uri): ...
    @overload
    def __init__(self, storage: Storage.IStorage): ...
    @overload
    def __init__(self, code: Code.Code): ...
    @overload
    def __init__(self, component: GH.IScriptComponent): ...
    @overload
    def __init__(self, script: Grasshopper1Script): ...
    @property
    def PYScriptInstance(self) -> Execution.SourceCode: ...
    @property
    def PY3Script(self) -> Execution.SourceCode: ...
    @property
    def PY3ScriptWithPackage(self) -> Execution.SourceCode: ...
    @property
    def PY3ScriptInstance(self) -> Execution.SourceCode: ...
    @property
    def PY3ScriptInstanceWithDraw(self) -> Execution.SourceCode: ...
    @property
    def PY2Script(self) -> Execution.SourceCode: ...
    @property
    def PY2ScriptInstance(self) -> Execution.SourceCode: ...
    @property
    def PY2ScriptInstanceWithDraw(self) -> Execution.SourceCode: ...
    @property
    def CSScript(self) -> Execution.SourceCode: ...
    @property
    def CSScriptWithPackage(self) -> Execution.SourceCode: ...
    @property
    def CSScriptInstance(self) -> Execution.SourceCode: ...
    @property
    def CSScriptInstanceWithDraw(self) -> Execution.SourceCode: ...
    @property
    def VBScriptInstance(self) -> Execution.SourceCode: ...
    @property
    def VBScriptInstanceWithDraw(self) -> Execution.SourceCode: ...
    @property
    def DOCUMENT_PARAM_NAME(self) -> str: ...
    @property
    def ENVIRON_PARAM_NAME(self) -> str: ...
    @overload
    def AddedToDocument(self, component: Kernel.GH_Component, document: Kernel.GH_Document) -> None: ...
    @overload
    def AfterSolve(self, _: Kernel.GH_Component) -> None: ...
    @overload
    def AppendAdditionalMenuItems(self, component: Kernel.GH_Component, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def BeforeSolve(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def BeginRunGroup() -> None: ...
    @overload
    def BeginRunGroup(self, context: Execution.RunContext) -> None: ...
    @overload
    @staticmethod
    def ConvertToExposure(exposure: Kernel.GH_Exposure) -> GH.ScriptExposure: ...
    @overload
    @staticmethod
    def ConvertToGHExposure(exposure: GH.ScriptExposure) -> Kernel.GH_Exposure: ...
    @overload
    def ConvertToScriptInstance(self, addSolve: bool, addPreview: bool) -> None: ...
    @overload
    def ConvertToScriptInstance(self, addSolve: bool, addPreview: bool, formatOptions: Languages.FormatOptions) -> None: ...
    @overload
    def CreateAttributes(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def CreateCode() -> Code.Code: ...
    @overload
    def CreateCode(self, ownerUri: System.Uri) -> Code.Code: ...
    @overload
    def DrawMeshes(self, component: Kernel.GH_Component, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawWires(self, component: Kernel.GH_Component, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def EndRunGroup() -> None: ...
    @overload
    def ExpireCache() -> None: ...
    @property
    def CSharpSpec(self) -> Languages.LanguageSpec: ...
    @property
    def DocumentParam(self) -> GH.ScriptParam: ...
    @property
    def EnvironParam(self) -> GH.ScriptParam: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def Locked(self) -> bool: ...
    @property
    def PythonnetSpec(self) -> Languages.LanguageSpec: ...
    @property
    def PythonSpec(self) -> Languages.LanguageSpec: ...
    @property
    def VisualBasicSpec(self) -> Languages.LanguageSpec: ...
    @overload
    def GetClipBox(self, component: Kernel.GH_Component) -> Geometry.BoundingBox: ...
    @overload
    def GetInstanceInfo() -> ScriptInstanceInfo: ...
    @overload
    @staticmethod
    def GetInstanceInfo(code: Code.ICode, text: str, previous: ScriptInstanceInfo) -> ScriptInstanceInfo: ...
    @overload
    def Prepare() -> None: ...
    @overload
    @staticmethod
    def PrepareInputConverters(language: Languages.ILanguage, param: GH.IScriptParameter, context: Execution.RunContext, proxy: Legacy.ProxyDocument) -> None: ...
    @overload
    @staticmethod
    def PrepareOutputConverters(param: GH.IScriptParameter, context: Execution.RunContext, proxy: Legacy.ProxyDocument, marshGuids: bool) -> None: ...
    @overload
    def Read(self, reader: Serialization.IReader) -> None: ...
    @overload
    def RegisterInputs(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def RegisterOutputs(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def RemovedFromDocument(self, component: Kernel.GH_Component, document: Kernel.GH_Document) -> None: ...
    @overload
    @staticmethod
    def ResetInputs(context: Execution.RunContext) -> None: ...
    @overload
    @staticmethod
    def RunScript(context: Execution.RunContext, code: Code.Code, instance: object, component: Kernel.GH_Component, dataAccess: Kernel.IGH_DataAccess) -> None: ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @Locked.setter
    def Locked(self, value: System.Void): ...
    @overload
    @staticmethod
    def SetInput(dataAccess: Kernel.IGH_DataAccess, context: Execution.RunContext, param: GH.IScriptParameter, index: int, name: str) -> None: ...
    @overload
    @staticmethod
    def SetOutput(context: Execution.RunContext, dataAccess: Kernel.IGH_DataAccess, index: int, name: str) -> None: ...
    @overload
    def Solve(self, component: Kernel.GH_Component, dataAccess: Kernel.IGH_DataAccess) -> None: ...
    @overload
    def TryBuild(self, context: Execution.RunContext) -> (bool, Diagnostics.Diagnosis): ...
    @overload
    def TryGetInstance() -> (bool, object): ...
    @overload
    @staticmethod
    def TryGetScriptInstanceTransformer(languageSpec: Languages.LanguageSpec, addSolve: bool, addPreview: bool, marshInputs: bool, formatOptions: Languages.FormatOptions) -> (bool, Text.ICodeTextTransformer, Text.CodeTransformOptions): ...
    @overload
    @staticmethod
    def TryReadScript(reader: Serialization.IReader) -> (bool, IGrasshopper1Script): ...
    @overload
    def UpdateRunScriptSignature() -> None: ...
    @overload
    @staticmethod
    def UpdateRunScriptSignature(code: Code.Code, marshInputs: bool) -> bool: ...
    @overload
    @staticmethod
    def UpdateRunScriptSignature(code: Code.ICode, text: str, marshInputs: bool) -> (bool, str): ...

class Grasshopper1ScriptCTX(GH1.ScriptTemplateCTX):
    """    """
    @overload
    def AddedToDocument(self, component: Kernel.GH_Component, document: Kernel.GH_Document) -> None: ...
    @overload
    def AfterSolve(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def BeforeSolve(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def CreateAttributes(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def DrawMeshes(self, component: Kernel.GH_Component, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawWires(self, component: Kernel.GH_Component, args: Kernel.IGH_PreviewArgs) -> None: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def Locked(self) -> bool: ...
    @overload
    def GetClipBox(self, component: Kernel.GH_Component) -> Geometry.BoundingBox: ...
    @overload
    def Prepare() -> None: ...
    @overload
    def RegisterInputs(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def RegisterOutputs(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def RemovedFromDocument(self, _: Kernel.GH_Component, document: Kernel.GH_Document) -> None: ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @Locked.setter
    def Locked(self, value: System.Void): ...
    @overload
    def Solve(self, component: Kernel.GH_Component, dataAccess: Kernel.IGH_DataAccess) -> None: ...
    @overload
    @staticmethod
    def TryReadScript(reader: Serialization.IReader) -> (bool, IGrasshopper1Script): ...

class Grasshopper1ScriptHelpers(object):
    """    """
    @overload
    @staticmethod
    def Run(function: System.Func, data: Generic.IList, flatten: bool) -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def RunOld(function: System.Func, data: Generic.IList, flatten: bool) -> Generic.IEnumerable: ...

class Grasshopper1ScriptInstance(Kernel.GH_ScriptInstance):
    """    """
    def __init__(self): ...
    @property
    def RhinoDocument(self) -> Rhino.RhinoDoc: ...
    @property
    def GrasshopperDocument(self) -> Kernel.GH_Document: ...
    @property
    def Component(self) -> Kernel.IGH_Component: ...
    @property
    def Iteration(self) -> int: ...
    @overload
    def AddRuntimeMessage(self, level: Kernel.GH_RuntimeMessageLevel, text: str) -> None: ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def InvokeDispose() -> None: ...
    @overload
    def InvokeRunScript(self, context: Execution.RunContext, code: Code.Code) -> None: ...
    @overload
    def InvokeRunScript(self, owner: Kernel.IGH_Component, rhinoDocument: object, iteration: int, inputs: Generic.List, DA: Kernel.IGH_DataAccess) -> None: ...
    @overload
    def Print(self, text: str) -> None: ...
    @overload
    def Print(self, format_: str, args: System.System.Array[object]) -> None: ...
    @overload
    def Reflect(self, obj: object) -> None: ...
    @overload
    def Reflect(self, obj: object, method_name: str) -> None: ...

class Grasshopper1ScriptLibrary(GH1.ScriptLibrary):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, langSpec: Languages.LanguageSpec): ...
    @overload
    def __init__(self, basePath: System.Uri): ...
    @overload
    def __init__(self, scriptLibrary: Grasshopper1ScriptLibrary): ...
    @overload
    def __init__(self, basePath: System.Uri, language: Languages.ILanguage): ...
    @overload
    def ReadLibrary(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def WriteLibrary(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def Changed(self): ...

class IGrasshopper1Script:
    """    """
    @overload
    def AddedToDocument(self, component: Kernel.GH_Component, document: Kernel.GH_Document) -> None: ...
    @overload
    def AfterSolve(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def BeforeSolve(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def CreateAttributes(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def DrawMeshes(self, component: Kernel.GH_Component, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawWires(self, component: Kernel.GH_Component, args: Kernel.IGH_PreviewArgs) -> None: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def Locked(self) -> bool: ...
    @overload
    def GetClipBox(self, component: Kernel.GH_Component) -> Geometry.BoundingBox: ...
    @overload
    def Prepare() -> None: ...
    @overload
    def RegisterInputs(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def RegisterOutputs(self, component: Kernel.GH_Component) -> None: ...
    @overload
    def RemovedFromDocument(self, component: Kernel.GH_Component, document: Kernel.GH_Document) -> None: ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @Locked.setter
    def Locked(self, value: System.Void): ...
    @overload
    def Solve(self, component: Kernel.GH_Component, dataAccess: Kernel.IGH_DataAccess) -> None: ...

class Grasshopper1CodeState(Code.CodeState):
    """    """
    def __init__(self, code: Code.ICode, archive: Serialization.GH_Archive): ...
    @property
    def Archive(self) -> Serialization.GH_Archive: ...

class Grasshopper1Serializer(Code.CodeStorageSerializer):
    """    """
    def __init__(self): ...
    @overload
    def Read(self, currentState: Storage.StorageState, code: Code.ICode) -> Grasshopper1CodeState: ...
    @overload
    def Read(self, code: Grasshopper1Code, currentState: Storage.StorageState) -> None: ...
    @overload
    def Write(self, code: Grasshopper1Code, currentState: Storage.StorageState, context: Storage.StorableSerializerContext) -> Storage.StorageData: ...

class ScriptModeTransition(enum.Enum):
    None_ = 0
    ToSDKMode = 1
    ToScriptMode = 2

class ScriptInstanceInfo(object):
    """    """
    def __init__(self, code: Code.ICode, hasInstance: bool, hasSolveOverrides: bool, hasPreviewOverrides: bool, transition: ScriptModeTransition): ...
    @property
    def Empty(self) -> ScriptInstanceInfo: ...
    @property
    def HasInstance(self) -> bool: ...
    @property
    def HasPreviewOverrides(self) -> bool: ...
    @property
    def HasSolveOverrides(self) -> bool: ...
    @property
    def ModeTransition(self) -> ScriptModeTransition: ...
    @overload
    def IsValid(self, code: Code.ICode) -> bool: ...
    @overload
    def ResetTransition() -> None: ...

# endregion
