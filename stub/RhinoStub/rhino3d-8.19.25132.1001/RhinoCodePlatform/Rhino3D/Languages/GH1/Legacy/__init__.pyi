"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["NotSupportedInGHException", "ProxyDocument", "ProxyObjectTable", "ProxyRhinoObject", "ProxyScriptEnv", "ProxyViewTable"]
# endregion

# region: Imports
from Grasshopper import Kernel
from Grasshopper.Kernel import Types
from Rhino import Collections
from Rhino import Display
from Rhino import DocObjects
from Rhino import Geometry
from Rhino.DocObjects import Tables
from System import Collections
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import Rhino
import System
# endregion

# region: RhinoCodePlatform.Rhino3D, Version=8.19.25132.1001

class NotSupportedInGHException(System.NotSupportedException):
    """    """
    def __init__(self): ...

class ProxyDocument(object):
    """    """
    def __init__(self, component: Kernel.IGH_Component): ...
    @overload
    def CommitIntoRhinoDocument() -> Collections.RhinoList: ...
    @property
    def Bitmaps(self) -> Tables.BitmapTable: ...
    @property
    def Component(self) -> Kernel.IGH_Component: ...
    @property
    def DimStyles(self) -> Tables.DimStyleTable: ...
    @property
    def DistanceDisplayPrecision(self) -> int: ...
    @property
    def Fonts(self) -> Tables.FontTable: ...
    @property
    def Groups(self) -> Tables.GroupTable: ...
    @property
    def InstanceDefinitions(self) -> Tables.InstanceDefinitionTable: ...
    @property
    def IsLocked(self) -> bool: ...
    @property
    def IsReadOnly(self) -> bool: ...
    @property
    def IsSendingMail(self) -> bool: ...
    @property
    def Item(self) -> Collections.IEnumerable: ...
    @property
    def Item(self) -> object: ...
    @property
    def Layers(self) -> Tables.LayerTable: ...
    @property
    def Materials(self) -> Tables.MaterialTable: ...
    @property
    def ModelAbsoluteTolerance(self) -> float: ...
    @property
    def ModelAngleToleranceDegrees(self) -> float: ...
    @property
    def ModelAngleToleranceRadians(self) -> float: ...
    @property
    def ModelRelativeTolerance(self) -> float: ...
    @property
    def ModelUnitSystem(self) -> Rhino.UnitSystem: ...
    @property
    def Modified(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def NamedConstructionPlanes(self) -> Tables.NamedConstructionPlaneTable: ...
    @property
    def NamedViews(self) -> Tables.NamedViewTable: ...
    @property
    def Notes(self) -> str: ...
    @property
    def Objects(self) -> ProxyObjectTable: ...
    @property
    def PageAbsoluteTolerance(self) -> float: ...
    @property
    def PageAngleToleranceDegrees(self) -> float: ...
    @property
    def PageAngleToleranceRadians(self) -> float: ...
    @property
    def PageRelativeTolerance(self) -> float: ...
    @property
    def PageUnitSystem(self) -> Rhino.UnitSystem: ...
    @property
    def Path(self) -> str: ...
    @property
    def Strings(self) -> Tables.StringTable: ...
    @property
    def TemplateFileUsed(self) -> str: ...
    @property
    def UndoRecordingEnabled(self) -> bool: ...
    @property
    def Views(self) -> ProxyViewTable: ...
    @Component.setter
    def Component(self, value: System.Void): ...
    @ModelAbsoluteTolerance.setter
    def ModelAbsoluteTolerance(self, value: System.Void): ...
    @ModelAngleToleranceDegrees.setter
    def ModelAngleToleranceDegrees(self, value: System.Void): ...
    @ModelAngleToleranceRadians.setter
    def ModelAngleToleranceRadians(self, value: System.Void): ...
    @ModelRelativeTolerance.setter
    def ModelRelativeTolerance(self, value: System.Void): ...
    @ModelUnitSystem.setter
    def ModelUnitSystem(self, value: System.Void): ...
    @Modified.setter
    def Modified(self, value: System.Void): ...
    @Notes.setter
    def Notes(self, value: System.Void): ...
    @PageAbsoluteTolerance.setter
    def PageAbsoluteTolerance(self, value: System.Void): ...
    @PageAngleToleranceDegrees.setter
    def PageAngleToleranceDegrees(self, value: System.Void): ...
    @PageAngleToleranceRadians.setter
    def PageAngleToleranceRadians(self, value: System.Void): ...
    @PageRelativeTolerance.setter
    def PageRelativeTolerance(self, value: System.Void): ...
    @PageUnitSystem.setter
    def PageUnitSystem(self, value: System.Void): ...
    @UndoRecordingEnabled.setter
    def UndoRecordingEnabled(self, value: System.Void): ...
    @overload
    def SubSet(self, guids: Collections.IEnumerable) -> Collections.IEnumerable: ...

class ProxyObjectTable(object):
    """    """
    def __init__(self): ...
    @overload
    def __InternalAdd(self, mesh: Geometry.Mesh) -> System.Guid: ...
    @overload
    def __InternalAdd(self, surface: Geometry.Surface) -> System.Guid: ...
    @overload
    def __InternalAdd(self, sphere: Geometry.Sphere) -> System.Guid: ...
    @overload
    def __InternalAdd(self, rectangle: Geometry.Rectangle3d) -> System.Guid: ...
    @overload
    def __InternalAdd(self, polyline: Geometry.Polyline) -> System.Guid: ...
    @overload
    def __InternalAdd(self, cloud: Geometry.PointCloud) -> System.Guid: ...
    @overload
    def __InternalAdd(self, point: Geometry.Point3f) -> System.Guid: ...
    @overload
    def __InternalAdd(self, point: Geometry.Point3d) -> System.Guid: ...
    @overload
    def __InternalAdd(self, point: Geometry.Point) -> System.Guid: ...
    @overload
    def __InternalAdd(self, arc: Geometry.Arc) -> System.Guid: ...
    @overload
    def __InternalAdd(self, dimension: Geometry.LinearDimension) -> System.Guid: ...
    @overload
    def __InternalAdd(self, line: Geometry.Line) -> System.Guid: ...
    @overload
    def __InternalAdd(self, extrusion: Geometry.Extrusion) -> System.Guid: ...
    @overload
    def __InternalAdd(self, ellipse: Geometry.Ellipse) -> System.Guid: ...
    @overload
    def __InternalAdd(self, curve: Geometry.Curve) -> System.Guid: ...
    @overload
    def __InternalAdd(self, circle: Geometry.Circle) -> System.Guid: ...
    @overload
    def __InternalAdd(self, brep: Geometry.Brep) -> System.Guid: ...
    @overload
    def __InternalAdd(self, box: Geometry.Box) -> System.Guid: ...
    @overload
    def __InternalAdd(self, subD: Geometry.SubD) -> System.Guid: ...
    @overload
    def Add(self, geometry: Geometry.GeometryBase) -> System.Guid: ...
    @overload
    def AddArc(self, arc: Geometry.Arc) -> System.Guid: ...
    @overload
    def AddArc(self, arc: Geometry.Arc, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddBox(self, box: Geometry.Box) -> System.Guid: ...
    @overload
    def AddBox(self, box: Geometry.Box, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddBrep(self, brep: Geometry.Brep) -> System.Guid: ...
    @overload
    def AddBrep(self, brep: Geometry.Brep, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddCircle(self, circle: Geometry.Circle) -> System.Guid: ...
    @overload
    def AddCircle(self, circle: Geometry.Circle, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddClippingPlane(self, plane: Geometry.Plane, uMagnitude: float, vMagnitude: float, clippedViewportIds: Generic.IEnumerable) -> System.Guid: ...
    @overload
    def AddClippingPlane(self, plane: Geometry.Plane, uMagnitude: float, vMagnitude: float, clippedViewportId: System.Guid) -> System.Guid: ...
    @overload
    def AddClippingPlane(self, plane: Geometry.Plane, uMagnitude: float, vMagnitude: float, clippedViewportIds: Generic.IEnumerable, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddCurve(self, curve: Geometry.Curve) -> System.Guid: ...
    @overload
    def AddCurve(self, curve: Geometry.Curve, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddEllipse(self, ellipse: Geometry.Ellipse) -> System.Guid: ...
    @overload
    def AddEllipse(self, ellipse: Geometry.Ellipse, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddExtrusion(self, extrusion: Geometry.Extrusion) -> System.Guid: ...
    @overload
    def AddExtrusion(self, extrusion: Geometry.Extrusion, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddInstanceObject(self, instanceDefinitionIndex: int, instanceXform: Geometry.Transform) -> System.Guid: ...
    @overload
    def AddInstanceObject(self, instanceDefinitionIndex: int, instanceXform: Geometry.Transform, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddLeader(self, points: Generic.IEnumerable) -> System.Guid: ...
    @overload
    def AddLeader(self, text: str, points: Generic.IEnumerable) -> System.Guid: ...
    @overload
    def AddLeader(self, plane: Geometry.Plane, points: Generic.IEnumerable) -> System.Guid: ...
    @overload
    def AddLeader(self, plane: Geometry.Plane, points: Generic.IEnumerable, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddLeader(self, text: str, plane: Geometry.Plane, points: Generic.IEnumerable) -> System.Guid: ...
    @overload
    def AddLeader(self, text: str, plane: Geometry.Plane, points: Generic.IEnumerable, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddLine(self, line: Geometry.Line) -> System.Guid: ...
    @overload
    def AddLine(self, line: Geometry.Line, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddLine(self, from_: Geometry.Point3d, to: Geometry.Point3d) -> System.Guid: ...
    @overload
    def AddLine(self, from_: Geometry.Point3d, to: Geometry.Point3d, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddLinearDimension(self, dimension: Geometry.LinearDimension) -> System.Guid: ...
    @overload
    def AddLinearDimension(self, dimension: Geometry.LinearDimension, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddMesh(self, mesh: Geometry.Mesh) -> System.Guid: ...
    @overload
    def AddMesh(self, mesh: Geometry.Mesh, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddPoint(self, point: Geometry.Point3d) -> System.Guid: ...
    @overload
    def AddPoint(self, point: Geometry.Point3f) -> System.Guid: ...
    @overload
    def AddPoint(self, point: Geometry.Point3d, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddPoint(self, point: Geometry.Point3f, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddPoint(self, x: float, y: float, z: float) -> System.Guid: ...
    @overload
    def AddPointCloud(self, cloud: Geometry.PointCloud) -> System.Guid: ...
    @overload
    def AddPointCloud(self, points: Generic.IEnumerable) -> System.Guid: ...
    @overload
    def AddPointCloud(self, points: Generic.IEnumerable, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddPointCloud(self, cloud: Geometry.PointCloud, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddPoints(self, points: Generic.IEnumerable) -> Collections.RhinoList: ...
    @overload
    def AddPoints(self, points: Generic.IEnumerable) -> Collections.RhinoList: ...
    @overload
    def AddPoints(self, points: Generic.IEnumerable, attributes: DocObjects.ObjectAttributes) -> Collections.RhinoList: ...
    @overload
    def AddPoints(self, points: Generic.IEnumerable, attributes: DocObjects.ObjectAttributes) -> Collections.RhinoList: ...
    @overload
    def AddPolyline(self, points: Generic.IEnumerable) -> System.Guid: ...
    @overload
    def AddPolyline(self, points: Generic.IEnumerable, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddRectangle(self, rectangle: Geometry.Rectangle3d) -> System.Guid: ...
    @overload
    def AddRectangle(self, rectangle: Geometry.Rectangle3d, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddSphere(self, sphere: Geometry.Sphere) -> System.Guid: ...
    @overload
    def AddSphere(self, sphere: Geometry.Sphere, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddSubD(self, subd: Geometry.SubD) -> System.Guid: ...
    @overload
    def AddSubD(self, subd: Geometry.SubD, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddSurface(self, surface: Geometry.Surface) -> System.Guid: ...
    @overload
    def AddSurface(self, surface: Geometry.Surface, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddText(self, text3d: Display.Text3d) -> System.Guid: ...
    @overload
    def AddText(self, text3d: Display.Text3d, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddText(self, text: str, plane: Geometry.Plane, height: float, fontName: str, bold: bool, italic: bool) -> System.Guid: ...
    @overload
    def AddText(self, text: str, plane: Geometry.Plane, height: float, fontName: str, bold: bool, italic: bool, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddTextDot(self, dot: Geometry.TextDot) -> System.Guid: ...
    @overload
    def AddTextDot(self, text: str, location: Geometry.Point3d) -> System.Guid: ...
    @overload
    def AddTextDot(self, dot: Geometry.TextDot, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def AddTextDot(self, text: str, location: Geometry.Point3d, attributes: DocObjects.ObjectAttributes) -> System.Guid: ...
    @overload
    def Clear() -> None: ...
    @overload
    def Contains(self, item: ProxyRhinoObject) -> bool: ...
    @overload
    def Contains(self, item: System.Guid) -> bool: ...
    @overload
    def CopyTo(self, array: System.Array[ProxyRhinoObject], arrayIndex: int) -> None: ...
    @overload
    def Delete(self, objectId: System.Guid, quiet: bool) -> bool: ...
    @overload
    def Duplicate(self, objectId: System.Guid) -> System.Guid: ...
    @overload
    def Find(self, objectId: System.Guid) -> ProxyRhinoObject: ...
    @overload
    def FindGeometry(self, objectId: System.Guid) -> Geometry.GeometryBase: ...
    @overload
    def FindId(self, objectId: System.Guid) -> ProxyRhinoObject: ...
    @property
    def AttributedGeometries(self) -> Generic.IEnumerable: ...
    @property
    def Count(self) -> int: ...
    @property
    def Geometries(self) -> Collections.IEnumerable: ...
    @property
    def GhGeometries(self) -> Generic.IEnumerable: ...
    @overload
    def GetEnumerator() -> Generic.IEnumerator: ...
    @overload
    def ModifyAttributes(self, objectId: System.Guid, newAttributes: DocObjects.ObjectAttributes, quiet: bool) -> bool: ...
    @overload
    def ObjectCount(self, filter_: DocObjects.ObjectEnumeratorSettings) -> int: ...
    @overload
    def Replace(self, guid: System.Guid, text: Geometry.TextEntity) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, arc: Geometry.Arc) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, polyline: Geometry.Polyline) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, point: Geometry.Point3d) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, mesh: Geometry.Mesh) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, surface: Geometry.Surface) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, curve: Geometry.Curve) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, circle: Geometry.Circle) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, brep: Geometry.Brep) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, subD: Geometry.SubD) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, line: Geometry.Line) -> bool: ...
    @overload
    def Replace(self, guid: System.Guid, dot: Geometry.TextDot) -> bool: ...
    @overload
    def Show(self, obj: ProxyRhinoObject, ignoreLayerMode: bool) -> bool: ...
    @overload
    def Show(self, objref: DocObjects.ObjRef, ignoreLayerMode: bool) -> bool: ...
    @overload
    def Show(self, objectId: System.Guid, ignoreLayerMode: bool) -> bool: ...
    @overload
    def Transform(self, objectId: System.Guid, xform: Geometry.Transform, deleteOriginal: bool) -> System.Guid: ...
    @overload
    def TryFindPoint(self, id_: System.Guid) -> (bool, Geometry.Point3d): ...
    @overload
    def Unlock(self, objectId: System.Guid, ignoreLayerMode: bool) -> bool: ...
    @overload
    def UnselectAll() -> int: ...
    @overload
    def UnselectAll(self, ignorePersistentSelections: bool) -> int: ...

class ProxyRhinoObject(System.ValueType):
    """    """
    def __init__(self, item: Types.IGH_GeometricGoo, attr: DocObjects.ObjectAttributes): ...
    @overload
    def CommitChanges() -> bool: ...
    @overload
    def Equals(self, other: ProxyRhinoObject) -> bool: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @property
    def Attributes(self) -> DocObjects.ObjectAttributes: ...
    @property
    def Geometry(self) -> Geometry.GeometryBase: ...
    @property
    def GhGeometry(self) -> Types.IGH_GeometricGoo: ...
    @property
    def GripsOn(self) -> bool: ...
    @property
    def GripsSelected(self) -> bool: ...
    @property
    def Id(self) -> System.Guid: ...
    @property
    def IsDefault(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def GetHighlightedSubObjects() -> Geometry.System.Array[Geometry.ComponentIndex]: ...
    @overload
    def GetSelectedSubObjects() -> Geometry.System.Array[Geometry.ComponentIndex]: ...
    @overload
    def Highlight(self, enable: bool) -> bool: ...
    @overload
    def HighlightSubObject(self, componentIndex: Geometry.ComponentIndex, highlight: bool) -> bool: ...
    @overload
    def IsHighlighted(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsSelectable() -> bool: ...
    @overload
    def IsSelectable(self, ignoreSelectionState: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> bool: ...
    @overload
    def IsSelected(self, checkSubObjects: bool) -> int: ...
    @overload
    def IsSubObjectHighlighted(self, componentIndex: Geometry.ComponentIndex) -> bool: ...
    @overload
    def IsSubObjectSelectable(self, componentIndex: Geometry.ComponentIndex, ignoreSelectionState: bool) -> bool: ...
    @overload
    def IsSubObjectSelected(self, componentIndex: Geometry.ComponentIndex) -> bool: ...
    @overload
    def Select(self, on: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool) -> int: ...
    @overload
    def Select(self, on: bool, syncHighlight: bool, persistentSelect: bool, ignoreGripsState: bool, ignoreLayerLocking: bool, ignoreLayerVisibility: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: Geometry.ComponentIndex, select: bool, syncHighlight: bool) -> int: ...
    @overload
    def SelectSubObject(self, componentIndex: Geometry.ComponentIndex, select: bool, syncHighlight: bool, persistentSelect: bool) -> int: ...
    @Attributes.setter
    def Attributes(self, value: System.Void): ...
    @GhGeometry.setter
    def GhGeometry(self, value: System.Void): ...
    @GripsOn.setter
    def GripsOn(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def UnhighlightAllSubObjects() -> int: ...
    @overload
    def UnselectAllSubObjects() -> int: ...

class ProxyScriptEnv(object):
    """    """
    @overload
    def __init__(self, proxyDoc: ProxyDocument): ...
    @overload
    def __init__(self, proxyDoc: ProxyDocument, da: Kernel.IGH_DataAccess): ...
    @property
    def Component(self) -> Kernel.IGH_Component: ...
    @property
    def DataAccessManager(self) -> Kernel.IGH_DataAccess: ...
    @property
    def Document(self) -> Kernel.GH_Document: ...
    @property
    def LegacyDocument(self) -> ProxyDocument: ...
    @property
    def Version(self) -> System.Version: ...

class ProxyViewTable(object):
    """    """
    def __init__(self, tableFunc: System.Func, redraws: bool): ...
    @overload
    def AddPageView(self, title: str) -> Display.RhinoPageView: ...
    @overload
    def AddPageView(self, title: str, pageWidth: float, pageHeight: float) -> Display.RhinoPageView: ...
    @overload
    def DefaultViewLayout() -> None: ...
    @overload
    def Find(self, mainViewportId: System.Guid) -> Display.RhinoView: ...
    @overload
    def Find(self, mainViewportName: str, compareCase: bool) -> Display.RhinoView: ...
    @overload
    def FlashObjects(self, list_: Generic.IEnumerable, useSelectionColor: bool) -> None: ...
    @overload
    def FourViewLayout(self, useMatchingViews: bool) -> None: ...
    @property
    def ActiveView(self) -> Display.RhinoView: ...
    @property
    def Document(self) -> object: ...
    @property
    def RedrawEnabled(self) -> bool: ...
    @overload
    def GetEnumerator() -> Generic.IEnumerator: ...
    @overload
    def GetPageViews() -> Display.System.Array[Display.RhinoPageView]: ...
    @overload
    def GetStandardRhinoViews() -> Display.System.Array[Display.RhinoView]: ...
    @overload
    def GetViewList(self, f: Display.ViewTypeFilter) -> Display.System.Array[Display.RhinoView]: ...
    @overload
    def Redraw() -> None: ...
    @ActiveView.setter
    def ActiveView(self, value: System.Void): ...
    @RedrawEnabled.setter
    def RedrawEnabled(self, value: System.Void): ...
    @overload
    def ThreeViewLayout(self, useMatchingViews: bool) -> None: ...

# endregion
