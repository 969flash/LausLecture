"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["CastConverter", "ExpandConverter", "GooConverter", "ListConverter", "MissingConverter", "TreeConverter", "BaseHintWrapper", "BaseModelConverter", "HatchConverter", "LeaderConverter", "TextDotConverter", "TextEntityConverter", "ArcConverter", "BoxConverter", "BrepConverter", "CircleConverter", "CurveConverter", "ExtrusionConverter", "GeometryBaseConverter", "GuidConverter", "IntervalConverter", "LineConverter", "MeshConverter", "PlaneConverter", "Point3dConverter", "Point3dListConverter", "PointCloudConverter", "PolylineConverter", "Rectangle3dConverter", "SubDConverter", "SurfaceConverter", "TransformConverter", "UVIntervalConverter", "Vector3dConverter", "ModelContentConverter", "ModelInstanceDefinitionConverter", "ModelLayerConverter", "ModelObjectConverter", "AnyDoubleConverter", "AnyStringConverter", "PythonDynamicConverter", "PythonFloatConverter", "PythonStringConverter", "BooleanConverter", "ColorConverter", "ComplexConverter", "DateTimeConverter", "DoubleConverter", "FilePathConverter", "IntConverter", "StringConverter"]
# endregion

# region: Imports
from GH_IO import Serialization
from Grasshopper import Kernel
from Rhino.Runtime import Code
from Rhino.Runtime.Code import Display
from Rhino.Runtime.Code import Execution
from RhinoCodePlatform import GH
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: RhinoCodePlatform.Rhino3D, Version=8.19.25132.1001

class CastConverter(Execution.ParamValueCastConverter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, valueType: Code.ParamType): ...
    @overload
    def Cast(self, data: object) -> (bool, object): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def HintID(self) -> System.Guid: ...
    @property
    def Identity(self) -> Execution.ParamConverterIdentity: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class ExpandConverter(Execution.ParamValueConverter):
    """    """
    def __init__(self, converter: Execution.IParamValueConverter): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def Identity(self) -> Execution.ParamConverterIdentity: ...

class GooConverter(Execution.ParamValueConverter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, itemConverter: Execution.IParamValueConverter): ...
    @overload
    @staticmethod
    def Cast(direction: Execution.ConvertDirection, data: object) -> object: ...
    @overload
    def Cast(self, data: object) -> (bool, object): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @overload
    @staticmethod
    def CastFor(converter: Execution.IParamValueConverter, direction: Execution.ConvertDirection, data: object) -> object: ...
    @property
    def HintID(self) -> System.Guid: ...
    @property
    def Identity(self) -> Execution.ParamConverterIdentity: ...

class ListConverter(Execution.ParamValueCollectionConverter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, targetType: Code.ParamType): ...
    @overload
    def __init__(self, itemConverter: Execution.IParamValueConverter): ...
    @property
    def TYPENAME(self) -> str: ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def Identity(self) -> Execution.ParamConverterIdentity: ...
    @overload
    @staticmethod
    def GetTargetType(converter: Execution.IParamValueConverter) -> Code.ParamType: ...
    @overload
    @staticmethod
    def GetTargetType(paramType: Code.ParamType) -> Code.ParamType: ...
    @overload
    @staticmethod
    def GetTargetType(type_: System.Type) -> Code.ParamType: ...

class MissingConverter(Execution.ParamValueConverter):
    """    """
    def __init__(self, converterId: System.Guid, message: str): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def ConverterId(self) -> System.Guid: ...
    @property
    def Identity(self) -> Execution.ParamConverterIdentity: ...
    @property
    def MissingMessage(self) -> str: ...
    @overload
    def ToString() -> str: ...

class TreeConverter(Execution.ParamValueCollectionConverter):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, targetType: Code.ParamType): ...
    @overload
    def __init__(self, itemConverter: Execution.IParamValueConverter): ...
    @property
    def TYPENAME(self) -> str: ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def Identity(self) -> Execution.ParamConverterIdentity: ...
    @overload
    @staticmethod
    def GetTargetType(converter: Execution.IParamValueConverter) -> Code.ParamType: ...
    @overload
    @staticmethod
    def GetTargetType(paramType: Code.ParamType) -> Code.ParamType: ...
    @overload
    @staticmethod
    def GetTargetType(type_: System.Type) -> Code.ParamType: ...

class BaseHintWrapper(object):
    """    BaseHintWrapper[THint, TParam, TType]
    """
    def __init__(self, category: str, id_: System.Guid, name: str, icon: str): ...
    @overload
    def Cast(self, data: object) -> (bool, object): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def Category(self) -> str: ...
    @property
    def Description(self) -> str: ...
    @property
    def HintID(self) -> System.Guid: ...
    @property
    def Id(self) -> Execution.ParamConverterIdentity: ...
    @property
    def Image(self) -> Display.ImageSet: ...
    @property
    def TargetType(self) -> Code.ParamType: ...
    @property
    def TypeName(self) -> str: ...

class BaseModelConverter(Execution.ParamValueConverter):
    """    BaseModelConverter[TParam]
    """
    @overload
    def Cast(self, data: object) -> (bool, object): ...
    @property
    def HintID(self) -> System.Guid: ...

class HatchConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class LeaderConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class TextDotConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class TextEntityConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class ArcConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class BoxConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class BrepConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class CircleConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class CurveConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class ExtrusionConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class GeometryBaseConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class GuidConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class IntervalConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class LineConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class MeshConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class PlaneConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class Point3dConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class Point3dListConverter(Execution.ParamValueConverter):
    """    """
    def __init__(self): ...
    @overload
    def Cast(self, data: object) -> (bool, object): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def HintID(self) -> System.Guid: ...
    @overload
    @staticmethod
    def TryCreateParamFromType(type_: System.Type) -> (bool, Kernel.IGH_Param): ...
    @overload
    @staticmethod
    def TrySetData(context: Execution.RunContext, scriptParam: GH.ScriptParam, dataAccess: Kernel.IGH_DataAccess, index: int) -> bool: ...

class PointCloudConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class PolylineConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...

class Rectangle3dConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class SubDConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class SurfaceConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class TransformConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class UVIntervalConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class Vector3dConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class ModelContentConverter(BaseModelConverter):
    """    """
    def __init__(self): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...

class ModelInstanceDefinitionConverter(BaseModelConverter):
    """    """
    def __init__(self): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...

class ModelLayerConverter(BaseModelConverter):
    """    """
    def __init__(self): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...

class ModelObjectConverter(BaseModelConverter):
    """    """
    def __init__(self): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...

class AnyDoubleConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class AnyStringConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class PythonDynamicConverter(Execution.ParamValueConverter):
    """    """
    def __init__(self): ...
    @overload
    def Cast(self, data: object) -> (bool, object): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def HintID(self) -> System.Guid: ...

class PythonFloatConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...
    @overload
    @staticmethod
    def TryConvertTypeName(typeName: str) -> (bool, str): ...

class PythonStringConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...
    @overload
    @staticmethod
    def TryConvertTypeName(typeName: str) -> (bool, str): ...

class BooleanConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class ColorConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class ComplexConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class DateTimeConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class DoubleConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class FilePathConverter(BaseModelConverter):
    """    """
    def __init__(self, baseUri: System.Uri): ...
    @overload
    def Cast(self, direction: Execution.ConvertDirection, data: object) -> (bool, object): ...
    @property
    def Identity(self) -> Execution.ParamConverterIdentity: ...

class IntConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

class StringConverter(BaseHintWrapper):
    """    """
    def __init__(self): ...

# endregion
