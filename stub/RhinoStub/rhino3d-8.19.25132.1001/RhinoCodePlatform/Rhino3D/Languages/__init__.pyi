"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Python2", "GH1", "McNeelPythonHost", "Python3Script", "RhinoProgressBarLanguageLoadReporter", "RhinoProgressBarLanguageStatusResponder", "RhinoProgressBarRestoreReporter", "RhinoWriteStatusResponder", "EditorSupport", "TemplateSource"]
# endregion

# region: Imports
from Rhino import Runtime
from Rhino.Runtime import Code
from Rhino.Runtime.Code import Execution
from Rhino.Runtime.Code import Languages
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: RhinoCodePlatform.Rhino3D, Version=8.19.25132.1001

class McNeelPythonHost(object):
    """    """
    def __init__(self): ...
    @overload
    @staticmethod
    def Coerce3dPointFromEnumerables(point: object) -> object: ...
    @overload
    @staticmethod
    def EscapePressed(reset: bool) -> bool: ...
    @overload
    @staticmethod
    def ResetEscape() -> None: ...

class Python3Script(Runtime.PythonScript):
    """    """
    def __init__(self): ...
    @overload
    def Compile(self, script: str) -> Runtime.PythonCompiledCode: ...
    @overload
    def ContainsVariable(self, name: str) -> bool: ...
    @overload
    def CreateTextEditorControl(self, script: str, helpcallback: System.Action) -> object: ...
    @overload
    def EvaluateExpression(self, statements: str, expression: str) -> object: ...
    @overload
    def ExecuteFile(self, path: str) -> bool: ...
    @overload
    def ExecuteFileInScope(self, path: str) -> bool: ...
    @overload
    def ExecuteScript(self, script: str) -> bool: ...
    @overload
    def GetStackTraceFromException(self, ex: System.Exception) -> str: ...
    @overload
    def GetVariable(self, name: str) -> object: ...
    @overload
    def GetVariableNames() -> Generic.IEnumerable: ...
    @overload
    def RemoveVariable(self, name: str) -> None: ...
    @overload
    def SetVariable(self, name: str, value: object) -> None: ...

class RhinoProgressBarLanguageLoadReporter(object):
    """    """
    def __init__(self): ...
    @overload
    @staticmethod
    def GetLoadReportMessage(report: Languages.LanguageLoadProgressReport) -> str: ...
    @overload
    def LoadProgressChanged(self, report: Languages.LanguageLoadProgressReport) -> None: ...

class RhinoProgressBarLanguageStatusResponder(Languages.ProgressStatusResponder):
    """    """
    def __init__(self): ...
    @overload
    def LoadProgressChanged(self, report: Languages.LanguageLoadProgressReport) -> None: ...
    @overload
    def StatusChanged(self, language: Languages.ILanguage, args: Code.ProgressChangedEventArgs) -> None: ...

class RhinoProgressBarRestoreReporter(Execution.ContextProgressReporter):
    """    """
    def __init__(self, waitMiliSecondsBeforeStart: float): ...
    @overload
    def Report(self, report: Code.ProgressReport) -> None: ...

class RhinoWriteStatusResponder(Languages.ProgressStatusResponder):
    """    """
    def __init__(self): ...
    @overload
    def LoadProgressChanged(self, report: Languages.LanguageLoadProgressReport) -> None: ...
    @overload
    def StatusChanged(self, language: Languages.ILanguage, args: Code.ProgressChangedEventArgs) -> None: ...

class EditorSupport(object):
    """    """
    def __init__(self): ...
    @overload
    @staticmethod
    def GetExamplesLibrary() -> Execution.SourceLibrary: ...
    @overload
    @staticmethod
    def GetTemplatesLibrary() -> Execution.SourceLibrary: ...

class TemplateSource(Execution.SourceCode):
    """    """
    def __init__(self, langSpec: Languages.LanguageSpec, text: str, uri: System.Uri): ...
    @overload
    def CreateCode() -> Code.Code: ...

# endregion
