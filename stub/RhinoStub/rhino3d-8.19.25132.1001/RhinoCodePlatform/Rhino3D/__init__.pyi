"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Storages", "Server", "Projects", "Languages", "Registrar", "Rhino3DPlatform"]
# endregion

# region: Imports
from Rhino.Runtime.Code import Execution
from Rhino.Runtime.Code import Languages
from Rhino.Runtime.Code import Platform
from Rhino.Runtime.Code.Execution import Debugging
from RhinoCodePlatform.Rhino3D import Projects
from System import Globalization
from System.Collections import Generic
from System.Runtime import CompilerServices
from System.Threading import Tasks
from typing import overload
# endregion

# region: RhinoCodePlatform.Rhino3D, Version=8.19.25132.1001

class Registrar(object):
    """    """
    @overload
    @staticmethod
    def IsScriptingLanguageStarted(spec: Languages.LanguageSpec) -> bool: ...
    @overload
    @staticmethod
    def IsScriptingStarted() -> bool: ...
    @overload
    @staticmethod
    def StartPlatform(startServer: bool) -> None: ...
    @overload
    @staticmethod
    def StartScriptEditing(startServer: bool) -> None: ...
    @overload
    @staticmethod
    def StartScripting(startServer: bool) -> None: ...
    @overload
    @staticmethod
    def StartScriptingLanguages(spec: Languages.LanguageSpec, startServer: bool) -> None: ...
    @overload
    @staticmethod
    def StartScriptingLanguages(responder: Languages.IProgressWaitStateResponder, spec: Languages.LanguageSpec, startServer: bool) -> None: ...
    @overload
    @staticmethod
    def StartScriptingLanguagesAsync(spec: Languages.LanguageSpec, startServer: bool) -> Tasks.Task: ...
    @overload
    @staticmethod
    def StartScriptingLanguagesAsync(responder: Languages.IProgressWaitStateResponderAsync, spec: Languages.LanguageSpec, startServer: bool) -> Tasks.Task: ...

class Rhino3DPlatform(Platform.Platform):
    """    """
    @overload
    @staticmethod
    def Create() -> bool: ...
    @overload
    def CreateDebugControls() -> Debugging.IDebugControls: ...
    @property
    def ActiveDocument(self) -> Platform.IPlatformDocument: ...
    @property
    def Converters(self) -> Generic.IEnumerable: ...
    @property
    def EditorLibraries(self) -> Generic.IEnumerable: ...
    @property
    def Id(self) -> Platform.PlatformIdentity: ...
    @property
    def Instance(self) -> Rhino3DPlatform: ...
    @property
    def InstanceHost(self) -> Platform.Host: ...
    @property
    def Options(self) -> Platform.PlatformOptions: ...
    @property
    def ProjectServer(self) -> Projects.Rhino3DProjectServer: ...
    @property
    def ReferenceFilters(self) -> Generic.IEnumerable: ...
    @property
    def References(self) -> Generic.IEnumerable: ...
    @overload
    def GetCompileGuards(self, buildKind: Execution.BuildKind) -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def GetCurrentCulture() -> Globalization.CultureInfo: ...
    @overload
    @staticmethod
    def GetDefaultCulture() -> Globalization.CultureInfo: ...
    @overload
    def Pause(self, context: Platform.PauseContext) -> None: ...
    @overload
    def Resume() -> None: ...
    @overload
    def TryGetAssemblyPath(self, name: str) -> (bool, str): ...
    @overload
    def Write(self, text: str) -> None: ...
    @overload
    def WriteError(self, text: str) -> None: ...
    @property
    def Loaded(self): ...
    @property
    def Idle(self): ...
    @property
    def Unloaded(self): ...
    @property
    def Errored(self): ...

# endregion
