"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Types", "UserInterface", "Serialization", "GH_ISerializable", "VersionNumber", "Branch"]
# endregion

# region: Imports
from GH_IO import Serialization
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: GH_IO, Version=8.19.25132.1001

class GH_ISerializable:
    """Every object which needs to (de)serialize itself using GH_IO methodology must implement this interface.

    """
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class VersionNumber(System.ValueType):
    """Represents a product version number that encodes major, minor, time and build branch information. as major.minor.yyddd.hhmmb where: yy = year of build - 2000 ddd = year day of build (1-366) hh = hour of build mm = minute of build b = branch of build

    """
    @overload
    def __init__(self, version: System.Version): ...
    @overload
    def __init__(self, majorVersionNumber: int, minorVersionNumber: int, versionQuartetYyddd: int, versionQuartetHhmmb: int): ...
    @overload
    def __init__(self, major: int, minor: int, time: System.DateTime, buildBranch: Branch): ...
    @overload
    def CompareTo(self, value: VersionNumber) -> int: ...
    @overload
    def CompareTo(self, value: object) -> int: ...
    @property
    def BuildBranch(self) -> Branch: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Major(self) -> int: ...
    @property
    def MaxMajorVersionNumber(self) -> int: ...
    @property
    def MaxMinorVersionNumber(self) -> int: ...
    @property
    def MaxValid(self) -> VersionNumber: ...
    @property
    def MaxValidBuildBranch(self) -> Branch: ...
    @property
    def MaxValidTime(self) -> System.DateTime: ...
    @property
    def MinMajorVersionNumber(self) -> int: ...
    @property
    def MinMinorVersionNumber(self) -> int: ...
    @property
    def Minor(self) -> int: ...
    @property
    def MinValid(self) -> VersionNumber: ...
    @property
    def MinValidBuildBranch(self) -> Branch: ...
    @property
    def MinValidTime(self) -> System.DateTime: ...
    @property
    def Time(self) -> System.DateTime: ...
    @property
    def Unset(self) -> VersionNumber: ...
    @property
    def UnsetBuildBranch(self) -> Branch: ...
    @property
    def UnsetTime(self) -> System.DateTime: ...
    @overload
    def ToString() -> str: ...
    @overload
    def ToVersion() -> System.Version: ...
    @overload
    @staticmethod
    def TryParse(s: str) -> (bool, VersionNumber): ...
    @overload
    @staticmethod
    def TryParse(v: System.Version) -> (bool, VersionNumber): ...

class Branch(enum.Enum):
    Unset = 0
    Developer = 1
    Trunk = 2
    ReleaseCandidate = 3
    Release = 4

# endregion
