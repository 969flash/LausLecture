"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_Version", "GH_Interval1D", "GH_Interval2D", "GH_Point2D", "GH_Point3D", "GH_Point4D", "GH_Line", "GH_BoundingBox", "GH_Plane", "GH_Item", "GH_Types"]
# endregion

# region: Imports
from System import Drawing
from System import IO
from System import Xml
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: GH_IO, Version=8.19.25132.1001

class GH_Version(System.ValueType):
    """Basic version type. Contains Major, Minor and Revision fields.

    """
    @overload
    def __init__(self, other: GH_Version): ...
    @overload
    def __init__(self, v_major: int, v_minor: int, v_revision: int): ...
    @property
    def major(self) -> int: ...
    @property
    def minor(self) -> int: ...
    @property
    def revision(self) -> int: ...
    @overload
    def Equals(self, obj: object) -> bool: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def ToString() -> str: ...

class GH_Interval1D(System.ValueType):
    """Represents two double precision floating point values.

    """
    def __init__(self, na: float, nb: float): ...
    @property
    def a(self) -> float: ...
    @property
    def b(self) -> float: ...
    @overload
    def ToString() -> str: ...

class GH_Interval2D(System.ValueType):
    """Represents two double precision domains.

    """
    @overload
    def __init__(self, nu: GH_Interval1D, nv: GH_Interval1D): ...
    @overload
    def __init__(self, nu0: float, nu1: float, nv0: float, nv1: float): ...
    @property
    def u(self) -> GH_Interval1D: ...
    @property
    def v(self) -> GH_Interval1D: ...
    @overload
    def ToString() -> str: ...

class GH_Point2D(System.ValueType):
    """Represents a 2D point coordinate with double precision floating point components.

    """
    def __init__(self, nx: float, ny: float): ...
    @property
    def x(self) -> float: ...
    @property
    def y(self) -> float: ...
    @overload
    def ToString() -> str: ...

class GH_Point3D(System.ValueType):
    """Represents a 3D point coordinate with double precision floating point components.

    """
    def __init__(self, nx: float, ny: float, nz: float): ...
    @property
    def x(self) -> float: ...
    @property
    def y(self) -> float: ...
    @property
    def z(self) -> float: ...
    @overload
    def ToString() -> str: ...

class GH_Point4D(System.ValueType):
    """Represents a 4D point coordinate with double precision floating point components.

    """
    def __init__(self, nx: float, ny: float, nz: float, nw: float): ...
    @property
    def x(self) -> float: ...
    @property
    def y(self) -> float: ...
    @property
    def z(self) -> float: ...
    @property
    def w(self) -> float: ...
    @overload
    def ToString() -> str: ...

class GH_Line(System.ValueType):
    """Represents a 3D line segment, denoted by start and endpoints.

    """
    @overload
    def __init__(self, nA: GH_Point3D, nB: GH_Point3D): ...
    @overload
    def __init__(self, Ax: float, Ay: float, Az: float, Bx: float, By: float, Bz: float): ...
    @property
    def A(self) -> GH_Point3D: ...
    @property
    def B(self) -> GH_Point3D: ...
    @overload
    def ToString() -> str: ...

class GH_BoundingBox(System.ValueType):
    """Represents a 3D bounding box, denoted by two points.

    """
    @overload
    def __init__(self, nMin: GH_Point3D, nMax: GH_Point3D): ...
    @overload
    def __init__(self, Minx: float, Miny: float, Minz: float, Maxx: float, Maxy: float, Maxz: float): ...
    @property
    def Min(self) -> GH_Point3D: ...
    @property
    def Max(self) -> GH_Point3D: ...
    @overload
    def ToString() -> str: ...

class GH_Plane(System.ValueType):
    """Represents a 3D plane system, defined by origin point and {X,Y} axis directions.

    """
    @overload
    def __init__(self, nOrigin: GH_Point3D, nXAxis: GH_Point3D, nYAxis: GH_Point3D): ...
    @overload
    def __init__(self, Ox: float, Oy: float, Oz: float, Xx: float, Xy: float, Xz: float, Yx: float, Yy: float, Yz: float): ...
    @property
    def Origin(self) -> GH_Point3D: ...
    @property
    def XAxis(self) -> GH_Point3D: ...
    @property
    def YAxis(self) -> GH_Point3D: ...
    @overload
    def ToString() -> str: ...

class GH_Item(object):
    """Represents a single data item in a chunk.

    """
    @overload
    def __init__(self, item_name: str, item_data: bool): ...
    @overload
    def __init__(self, item_name: str, item_data: Drawing.Point): ...
    @overload
    def __init__(self, item_name: str, item_data: Drawing.PointF): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_Version): ...
    @overload
    def __init__(self, item_name: str, item_data: Drawing.SizeF): ...
    @overload
    def __init__(self, item_name: str, item_data: Drawing.Rectangle): ...
    @overload
    def __init__(self, item_name: str, item_data: Drawing.RectangleF): ...
    @overload
    def __init__(self, item_name: str, item_data: Drawing.Color): ...
    @overload
    def __init__(self, item_name: str, item_data: System.System.Array[float]): ...
    @overload
    def __init__(self, item_name: str, item_data: Drawing.Bitmap): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_Point3D): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_Point4D): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_Interval1D): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_Interval2D): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_Line): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_BoundingBox): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_Plane): ...
    @overload
    def __init__(self, item_name: str, item_data: GH_Point2D): ...
    @overload
    def __init__(self, item_name: str, item_data: System.System.Array[System.Byte]): ...
    @overload
    def __init__(self, item_name: str, item_data: Drawing.Size): ...
    @overload
    def __init__(self, item_name: str, item_data: str): ...
    @overload
    def __init__(self, item_name: str, item_data: float): ...
    @overload
    def __init__(self, item_name: str, item_data: System.Int64): ...
    @overload
    def __init__(self, item_name: str, item_data: System.Decimal): ...
    @overload
    def __init__(self, item_name: str, item_data: System.DateTime): ...
    @overload
    def __init__(self, item_name: str, item_data: int): ...
    @overload
    def __init__(self, item_name: str, item_data: System.Guid): ...
    @overload
    def __init__(self, item_name: str, item_data: System.Byte): ...
    @overload
    def __init__(self, item_name: str, item_data: System.Single): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_Line): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: System.Byte): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_Interval2D): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_Point2D): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_Interval1D): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_BoundingBox): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: int): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_Point4D): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: bool): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_Plane): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_Point3D): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: System.Int64): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: System.Single): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: str): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: Drawing.Color): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: Drawing.RectangleF): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: float): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: Drawing.Rectangle): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: Drawing.SizeF): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: System.Decimal): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: Drawing.Size): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: Drawing.PointF): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: System.DateTime): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: Drawing.Point): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: System.System.Array[float]): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: System.Guid): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: System.System.Array[System.Byte]): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: Drawing.Bitmap): ...
    @overload
    def __init__(self, item_name: str, item_index: int, item_data: GH_Version): ...
    @overload
    @staticmethod
    def CreateFrom(reader: IO.BinaryReader) -> GH_Item: ...
    @overload
    @staticmethod
    def CreateFrom(node: Xml.XmlNode) -> GH_Item: ...
    @property
    def _bool(self) -> bool: ...
    @property
    def _boundingbox(self) -> GH_BoundingBox: ...
    @property
    def _byte(self) -> System.Byte: ...
    @property
    def _bytearray(self) -> System.System.Array[System.Byte]: ...
    @property
    def _date(self) -> System.DateTime: ...
    @property
    def _decimal(self) -> System.Decimal: ...
    @property
    def _double(self) -> float: ...
    @property
    def _doublearray(self) -> System.System.Array[float]: ...
    @property
    def _drawing_bitmap(self) -> Drawing.Bitmap: ...
    @property
    def _drawing_color(self) -> Drawing.Color: ...
    @property
    def _drawing_point(self) -> Drawing.Point: ...
    @property
    def _drawing_pointf(self) -> Drawing.PointF: ...
    @property
    def _drawing_rectangle(self) -> Drawing.Rectangle: ...
    @property
    def _drawing_rectanglef(self) -> Drawing.RectangleF: ...
    @property
    def _drawing_size(self) -> Drawing.Size: ...
    @property
    def _drawing_sizef(self) -> Drawing.SizeF: ...
    @property
    def _guid(self) -> System.Guid: ...
    @property
    def _int32(self) -> int: ...
    @property
    def _int64(self) -> System.Int64: ...
    @property
    def _interval1d(self) -> GH_Interval1D: ...
    @property
    def _interval2d(self) -> GH_Interval2D: ...
    @property
    def _line(self) -> GH_Line: ...
    @property
    def _plane(self) -> GH_Plane: ...
    @property
    def _point2d(self) -> GH_Point2D: ...
    @property
    def _point3d(self) -> GH_Point3D: ...
    @property
    def _point4d(self) -> GH_Point4D: ...
    @property
    def _single(self) -> System.Single: ...
    @property
    def _string(self) -> str: ...
    @property
    def _version(self) -> GH_Version: ...
    @property
    def DebuggerDisplay(self) -> str: ...
    @property
    def HasIndex(self) -> bool: ...
    @property
    def HasName(self) -> bool: ...
    @property
    def HasType(self) -> bool: ...
    @property
    def Index(self) -> int: ...
    @property
    def InternalData(self) -> object: ...
    @property
    def Name(self) -> str: ...
    @property
    def Type(self) -> GH_Types: ...
    @overload
    def Read(self, reader: IO.BinaryReader) -> None: ...
    @overload
    def Read(self, node: Xml.XmlNode) -> None: ...
    @Index.setter
    def Index(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Xml.XmlWriter) -> None: ...
    @overload
    def Write(self, writer: IO.BinaryWriter) -> None: ...

class GH_Types(enum.Enum):
    unset = 0
    gh_bool = 1
    gh_byte = 2
    gh_int32 = 3
    gh_int64 = 4
    gh_single = 5
    gh_double = 6
    gh_decimal = 7
    gh_date = 8
    gh_guid = 9
    gh_string = 10
    gh_bytearray = 20
    gh_doublearray = 21
    gh_drawing_point = 30
    gh_drawing_pointf = 31
    gh_drawing_size = 32
    gh_drawing_sizef = 33
    gh_drawing_rectangle = 34
    gh_drawing_rectanglef = 35
    gh_drawing_color = 36
    gh_drawing_bitmap = 37
    gh_point2d = 50
    gh_point3d = 51
    gh_point4d = 52
    gh_interval1d = 60
    gh_interval2d = 61
    gh_line = 70
    gh_boundingbox = 71
    gh_plane = 72
    gh_version = 80

# endregion
