"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_ComponentAttributes", "GH_FloatingParamAttributes", "GH_LinkedParamAttributes", "GH_ResizableAttributes"]
# endregion

# region: Imports
from Grasshopper import GUI
from Grasshopper import Kernel
from Grasshopper.GUI import Canvas
from System import Drawing
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_ComponentAttributes(Kernel.GH_Attributes):
    """These Attributes are the default for GH_Components.

    """
    def __init__(self, component: Kernel.IGH_Component): ...
    @overload
    def AppendToAttributeTree(self, attributes: Generic.List) -> None: ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def ContentBox(self) -> Drawing.RectangleF: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def PathName(self) -> str: ...
    @overload
    def InvalidateCanvas(self, canvas: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> bool: ...
    @overload
    def IsPickRegion(self, point: Drawing.PointF) -> bool: ...
    @overload
    @staticmethod
    def LayoutBounds(owner: Kernel.IGH_Component, bounds: Drawing.RectangleF) -> Drawing.RectangleF: ...
    @overload
    @staticmethod
    def LayoutComponentBox(owner: Kernel.IGH_Component) -> Drawing.RectangleF: ...
    @overload
    @staticmethod
    def LayoutInputParams(owner: Kernel.IGH_Component, componentBox: Drawing.RectangleF) -> None: ...
    @overload
    @staticmethod
    def LayoutOutputParams(owner: Kernel.IGH_Component, componentBox: Drawing.RectangleF) -> None: ...
    @overload
    @staticmethod
    def RenderComponentParameters(canvas: Canvas.GH_Canvas, graphics: Drawing.Graphics, owner: Kernel.IGH_Component, style: Canvas.GH_PaletteStyle) -> None: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_FloatingParamAttributes(Kernel.GH_Attributes):
    """These Attributes are the default for stand-alone Parameters.

    """
    def __init__(self, param: Kernel.IGH_Param): ...
    @property
    def DefaultWidth(self) -> int: ...
    @property
    def IconHeight(self) -> int: ...
    @property
    def TextHeight(self) -> int: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_LinkedParamAttributes(Kernel.GH_Attributes):
    """These Attributes are assigned to parameters that are part of a GH_Component.

    """
    def __init__(self, param: Kernel.IGH_Param, parent: Kernel.IGH_Attributes): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_ResizableAttributes(Kernel.GH_Attributes):
    """These Attributes provide basic resizing logic.

    GH_ResizableAttributes[T]
    """
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

# endregion
