"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["SketchElements", "GH_BarGraphAttributes", "GH_BarGraph", "GH_BooleanSwitchAttributesObsolete", "GH_BooleanSwitch_Obsolete", "GH_BooleanToggleAttributes", "GH_BooleanToggle", "GH_ButtonObjectAttributes", "GH_ButtonObject", "GH_ClusterHookAttributes", "GH_ClusterHook", "GH_ClusterInputHookAttributes", "GH_ClusterInputHook", "GH_ClusterOutputHookAttributes", "GH_ClusterOutputHook", "GH_Synchronisation", "GH_ClusterProtection", "GH_ClusterFileType", "GH_ClusterAttributes", "GH_Cluster", "GH_ClusterAttributes_OBSOLETE", "GH_Cluster_OBSOLETE", "GH_ColourPickerAttributes", "GH_ColourPickerObject", "GH_ColourSwatchAttributes", "GH_ColourSwatch", "GH_ColourWheelStyle", "GH_ColourWheelGrip", "GH_ColourWheelState", "GH_ColourWheelAttributes", "GH_ColourWheel", "GH_ConstantObjectAttributes", "GH_ConstantObject", "GH_DialKnobAttributes", "GH_DialKnob", "GH_DataRecorderAttributes", "GH_DataRecorder", "GH_DigitScrollerAttributes", "GH_DigitScroller", "GH_GeometryPipelineAttributes", "GH_GeometryPipeline", "GH_GeometryCacheAttributes", "GH_GeometryCache", "GH_GradientControlAttributes", "GH_GradientControl", "GH_GraphMapperAttributes", "GH_GraphMapper", "GH_GroupBorder", "GH_GroupAttributes", "GH_Group", "GH_ImageSamplerAttributes", "GH_SamplingFilter", "GH_ImageSampler", "GH_ItemPickerAttributes", "GH_ItemPicker", "GH_JumpObjectAttributes", "GH_JumpObject", "GH_LegendAttributes", "GH_Legend", "GH_LegendType", "GH_LegendData", "GH_MarkupDashPattern", "GH_MarkupProperties", "GH_MarkupAttributes", "GH_Markup", "GH_MarkupCollection", "GH_PolylineReductionSetManager", "GH_MultiDimensionalSliderAttributes", "GH_MDSliderMode", "GH_MultiDimensionalSlider", "GH_NumberSliderAttributes", "GH_NumberSlider", "GH_ParamViewerAttributes", "GH_ParamViewer", "GH_PathMapperAttributes", "GH_PathMapper", "GH_PieChartAttributes", "GH_PieChart", "GH_PieChartPair", "GH_PieChartDataSet", "GH_QuickGraphSortOrder", "GH_QuickGraphAttributes", "GH_QuickGraph", "GH_QuickGraphBundle", "GH_QuickGraphTrack", "GH_QuickGraphDot", "GH_QuickGraphFrame", "GH_RelayAttributes", "GH_Relay", "GH_ScribbleAttributes", "GH_Scribble", "GH_SliderAnimator", "GH_SuireStyleNodeAttributes", "GH_SuireSimplifyNode", "GH_TextBalloonAttributes", "GH_TextBalloon", "GH_PanelAttributes", "GH_Panel", "GH_PanelProperties", "GH_TimerAttributes", "GH_Timer", "GH_ValueListItem", "GH_ValueListMode", "GH_ValueListAttributes", "GH_ValueList", "GH_ValueTimeline", "GH_ValueTrackerAttributes", "GH_ValueTracker", "GH_BarData", "GH_BooleanTogglePublishProxy", "GH_ButtonPublishProxy", "GH_ClusterPasswordUndoAction", "GH_ClusterPropertiesUndoAction", "GH_ClusterPreviewDocumentAction", "GH_ClusterDocumentIdAction", "GH_ClusterReferenceAction", "GH_ColourSwatchPublishProxy", "GH_NumberSliderPublishProxy", "DotDisplay", "BranchDisplay", "Alignment", "GH_PanelPublishProxy", "GH_TimerTargetInteraction", "VT_DataPoint", "VT_Recording"]
# endregion

# region: Imports
from GH_IO import Serialization
from Grasshopper import GUI
from Grasshopper import Kernel
from Grasshopper.GUI import Base
from Grasshopper.GUI import Canvas
from Grasshopper.GUI import Gradient
from Grasshopper.GUI import RemotePanel
from Grasshopper.GUI.Canvas import Interaction
from Grasshopper.Kernel import Attributes
from Grasshopper.Kernel import Data
from Grasshopper.Kernel import Graphs
from Grasshopper.Kernel import Types
from Grasshopper.Kernel import Undo
from Rhino import Display
from Rhino import DocObjects
from Rhino import Geometry
from System import Collections
from System import Drawing
from System.Collections import Generic
from System.Drawing import Drawing2D
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import enum
import Rhino
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_BarGraphAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, owner: GH_BarGraph): ...
    @property
    def PathName(self) -> str: ...

class GH_BarGraph(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def BarCount(self) -> int: ...
    @property
    def Bars(self) -> Generic.List: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def GraphColour(self) -> Drawing.Color: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def InstanceDescription(self) -> str: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def MaxBar(self) -> GH_BarData: ...
    @property
    def MaxBarIndex(self) -> int: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @BarCount.setter
    def BarCount(self, value: System.Void): ...
    @GraphColour.setter
    def GraphColour(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_BooleanSwitchAttributesObsolete(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_BooleanSwitch_Obsolete): ...
    @property
    def SwitchWidth(self) -> int: ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_BooleanSwitch_Obsolete(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DataType(self) -> Kernel.GH_ParamData: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def SwitchValue(self) -> bool: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @SwitchValue.setter
    def SwitchValue(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_BooleanToggleAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_BooleanToggle): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_BooleanToggle(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DataType(self) -> Kernel.GH_ParamData: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def Value(self) -> bool: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def PublishRcpItem() -> RemotePanel.IRcpItem: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ButtonObjectAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_ButtonObject): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_ButtonObject(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def EvaluateExpressions() -> None: ...
    @property
    def ButtonDown(self) -> bool: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DataType(self) -> Kernel.GH_ParamData: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def ExpressionNormal(self) -> str: ...
    @property
    def ExpressionPressed(self) -> str: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @overload
    def PublishRcpItem() -> RemotePanel.IRcpItem: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @ButtonDown.setter
    def ButtonDown(self, value: System.Void): ...
    @ExpressionNormal.setter
    def ExpressionNormal(self, value: System.Void): ...
    @ExpressionPressed.setter
    def ExpressionPressed(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ClusterHookAttributes(Kernel.GH_Attributes):
    """    GH_ClusterHookAttributes[T]
    """
    def __init__(self, owner: T): ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @property
    def NameBounds(self) -> Drawing.RectangleF: ...
    @overload
    @staticmethod
    def HookOutline(rec: Drawing.RectangleF, radius: System.Single) -> Drawing2D.GraphicsPath: ...
    @overload
    def IsPickRegion(self, point: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, box: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @NameBounds.setter
    def NameBounds(self, value: System.Void): ...

class GH_ClusterHook(Kernel.GH_Param):
    """Abstract base class for cluster hooks.

    """
    def __init__(self, tag: Kernel.IGH_InstanceDescription): ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @property
    def CustomDescription(self) -> str: ...
    @property
    def CustomName(self) -> str: ...
    @property
    def CustomNickName(self) -> str: ...
    @property
    def Description(self) -> str: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def Name(self) -> str: ...
    @property
    def NickName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @CustomDescription.setter
    def CustomDescription(self, value: System.Void): ...
    @CustomName.setter
    def CustomName(self, value: System.Void): ...
    @CustomNickName.setter
    def CustomNickName(self, value: System.Void): ...
    @Description.setter
    def Description(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @NickName.setter
    def NickName(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ClusterInputHookAttributes(GH_ClusterHookAttributes):
    """Cluster input parameter attributes.

    """
    def __init__(self, owner: GH_ClusterInputHook): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def OutputGrip(self) -> Drawing.PointF: ...
    @overload
    def SetupTooltip(self, canvasPoint: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_ClusterInputHook(GH_ClusterHook):
    """Cluster input parameter used to insert data into a Cluster document.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, target: Kernel.IGH_Param): ...
    @overload
    def ClearPlaceholderData() -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def ObjID(self) -> System.Guid: ...
    @overload
    def SetPlaceholderData(self, data: Data.GH_Structure) -> None: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ClusterOutputHookAttributes(GH_ClusterHookAttributes):
    """Cluster output parameter attributes.

    """
    def __init__(self, owner: GH_ClusterOutputHook): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @overload
    def SetupTooltip(self, canvasPoint: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_ClusterOutputHook(GH_ClusterHook):
    """Cluster output parameter used to extract data from a Cluster document.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, target: Kernel.IGH_Param): ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def ObjID(self) -> System.Guid: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_Synchronisation(enum.Enum):
    Unset = 0
    NotReferenced = 1
    MissingReference = 2
    UpToDate = 3
    OutOfDate = 4

class GH_ClusterProtection(enum.Enum):
    Unprotected = 0
    Protected = 1

class GH_ClusterFileType(enum.Enum):
    None_ = 0
    Gh = 1
    Ghx = 2
    GhCluster = 3
    Unknown = 4

class GH_ClusterAttributes(Attributes.GH_ComponentAttributes):
    """Attributes for the Cluster Object.

    """
    def __init__(self, owner: GH_Cluster): ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_Cluster(Kernel.GH_Component):
    """The Grasshopper Cluster object.

    """
    def __init__(self): ...
    @overload
    def AddedToDocument(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def AssignNewPassword(self, oldPassword: str, newPassword: str) -> bool: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, objectIds: Generic.List) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes, objectIds: Generic.List) -> None: ...
    @overload
    def CanInsertParameter(self, side: Kernel.GH_ParameterSide, index: int) -> bool: ...
    @overload
    def CanRemoveParameter(self, side: Kernel.GH_ParameterSide, index: int) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def CreateFromDocument(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def CreateFromDocument(self, document: Kernel.GH_Document, location: Drawing.Point) -> None: ...
    @overload
    def CreateFromFilePath(self, path: str) -> None: ...
    @overload
    def CreateFromFilePath(self, path: str, location: Drawing.Point) -> None: ...
    @overload
    def CreateFromSelection(self, sourceDocument: Kernel.GH_Document, deleteOriginalObjects: bool, reconnectSources: bool, reconnectRecipients: bool) -> None: ...
    @overload
    def CreateParameter(self, side: Kernel.GH_ParameterSide, index: int) -> Kernel.IGH_Param: ...
    @overload
    def DestroyParameter(self, side: Kernel.GH_ParameterSide, index: int) -> bool: ...
    @overload
    def DisplayClusterPropertiesEditor() -> None: ...
    @overload
    def Document(self, password: str) -> Kernel.GH_Document: ...
    @overload
    def DocumentClosed(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def DocumentContextChanged(self, document: Kernel.GH_Document, context: Kernel.GH_DocumentContext) -> None: ...
    @overload
    def DocumentModified(self, modifiedDocument: Kernel.GH_Document) -> None: ...
    @overload
    @staticmethod
    def DoKeysMatch(key0: System.System.Array[System.Byte], key1: System.System.Array[System.Byte]) -> bool: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def EditClusterAsSeparateDocument() -> None: ...
    @overload
    def ExpireSolution(self, recompute: bool) -> None: ...
    @overload
    def ExplodeCluster() -> None: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ClusterComponentId(self) -> System.Guid: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DocumentId(self) -> System.Guid: ...
    @property
    def EnableCaching(self) -> bool: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def FilePath(self) -> str: ...
    @property
    def IsBakeCapable(self) -> bool: ...
    @property
    def IsPreviewCapable(self) -> bool: ...
    @property
    def Locked(self) -> bool: ...
    @property
    def PreviewContent(self) -> bool: ...
    @property
    def ProtectionLevel(self) -> GH_ClusterProtection: ...
    @property
    def Synchronisation(self) -> GH_Synchronisation: ...
    @overload
    def InstanceGuidsChanged(self, map_: Generic.SortedDictionary) -> None: ...
    @overload
    def IsPasswordValid(self, password: str) -> bool: ...
    @overload
    def OwnerDocument() -> Kernel.GH_Document: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ReadGhClusterFile(self, path: str) -> bool: ...
    @overload
    def RemovedFromDocument(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def RequestPassword(self, prompt: str) -> bool: ...
    @DocumentId.setter
    def DocumentId(self, value: System.Void): ...
    @Locked.setter
    def Locked(self, value: System.Void): ...
    @PreviewContent.setter
    def PreviewContent(self, value: System.Void): ...
    @overload
    def UpdateDocument(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def VariableParameterMaintenance() -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @overload
    def WriteGhClusterFile(self, path: str) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ClusterAttributes_OBSOLETE(Attributes.GH_ComponentAttributes):
    """Attributes for the Cluster Object.

    """
    def __init__(self, owner: GH_Cluster_OBSOLETE): ...
    @property
    def Selected(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @Selected.setter
    def Selected(self, value: System.Void): ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_Cluster_OBSOLETE(Kernel.GH_Component):
    """The Grasshopper Cluster object.

    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, obj_ids: Generic.List) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes, obj_ids: Generic.List) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def CreateFromDocument(self, doc: Kernel.GH_Document) -> bool: ...
    @overload
    def CreateFromSelection(self, doc: Kernel.GH_Document) -> bool: ...
    @overload
    def DisplayClusterPropertiesEditor() -> None: ...
    @overload
    def DocumentClosed(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def DocumentModified(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @property
    def AuthorCompany(self) -> str: ...
    @property
    def AuthorContact(self) -> str: ...
    @property
    def AuthorCopyright(self) -> str: ...
    @property
    def AuthorName(self) -> str: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def InternalDocument(self) -> Kernel.GH_Document: ...
    @property
    def IsBakeCapable(self) -> bool: ...
    @property
    def IsPreviewCapable(self) -> bool: ...
    @property
    def Locked(self) -> bool: ...
    @overload
    def OwnerDocument() -> Kernel.GH_Document: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @AuthorCompany.setter
    def AuthorCompany(self, value: System.Void): ...
    @AuthorContact.setter
    def AuthorContact(self, value: System.Void): ...
    @AuthorCopyright.setter
    def AuthorCopyright(self, value: System.Void): ...
    @AuthorName.setter
    def AuthorName(self, value: System.Void): ...
    @Locked.setter
    def Locked(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ColourPickerAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_ColourPickerObject): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_ColourPickerObject(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def Colour(self) -> Drawing.Color: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Colour.setter
    def Colour(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ColourSwatchAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_ColourSwatch): ...
    @property
    def SwatchWidth(self) -> int: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_ColourSwatch(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DataType(self) -> Kernel.GH_ParamData: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def SwatchColour(self) -> Drawing.Color: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def PublishRcpItem() -> RemotePanel.IRcpItem: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @SwatchColour.setter
    def SwatchColour(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ColourWheelStyle(enum.Enum):
    Monochromatic = 10
    Bichromatic = 20
    Complementary = 21
    Trichromatic = 30
    Triad = 31
    Tetrachromatic = 40
    Tetrad = 41

class GH_ColourWheelGrip(enum.Enum):
    NoGrip = 0
    LowestIndex = 1
    A = 1
    Amin = 2
    Amax = 3
    B = 4
    Bmin = 5
    Bmax = 6
    C = 7
    Cmin = 8
    Cmax = 9
    D = 10
    Dmin = 11
    Dmax = 12
    SatMin = 13
    SatMax = 14
    LumMin = 15
    LumMax = 16
    HighestIndex = 16

class GH_ColourWheelState(object):
    """Represents the 12 grips that are part of a colour wheel.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: GH_ColourWheelState): ...
    @property
    def ComplementaryAngle(self) -> int: ...
    @property
    def TriadAngle(self) -> int: ...
    @property
    def TetradAngle(self) -> int: ...
    @property
    def RailStartAngle(self) -> int: ...
    @property
    def MainGripRadius(self) -> int: ...
    @property
    def RangeGripRadius(self) -> int: ...
    @overload
    def BeginGripDrag(self, cursor: Drawing.PointF) -> bool: ...
    @overload
    def BeginGripDrag(self, cursor: Geometry.Point3d) -> bool: ...
    @overload
    def ContinueGripDrag(self, cursor: Drawing.PointF) -> bool: ...
    @overload
    def ContinueGripDrag(self, cursor: Geometry.Point3d) -> bool: ...
    @overload
    def CreatePalette(self, seed: int, count: int) -> Generic.List: ...
    @overload
    def EndGripDrag() -> None: ...
    @property
    def Dragging(self) -> bool: ...
    @property
    def LuminanceMax(self) -> float: ...
    @property
    def LuminanceMin(self) -> float: ...
    @property
    def LuminanceRail(self) -> Geometry.Arc: ...
    @property
    def SaturationMax(self) -> float: ...
    @property
    def SaturationMin(self) -> float: ...
    @property
    def SaturationRail(self) -> Geometry.Arc: ...
    @property
    def Style(self) -> GH_ColourWheelStyle: ...
    @property
    def Wheel(self) -> Geometry.Circle: ...
    @overload
    def GetGrip(self, grip: GH_ColourWheelGrip) -> Geometry.Point3d: ...
    @overload
    def GripAtPoint(self, point: Geometry.Point3d) -> GH_ColourWheelGrip: ...
    @overload
    def GripAtPoint(self, point: Drawing.PointF) -> GH_ColourWheelGrip: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RenderWheel(self, graphics: Drawing.Graphics, alpha: float, selected: bool) -> None: ...
    @LuminanceMax.setter
    def LuminanceMax(self, value: System.Void): ...
    @LuminanceMin.setter
    def LuminanceMin(self, value: System.Void): ...
    @SaturationMax.setter
    def SaturationMax(self, value: System.Void): ...
    @SaturationMin.setter
    def SaturationMin(self, value: System.Void): ...
    @Style.setter
    def Style(self, value: System.Void): ...
    @Wheel.setter
    def Wheel(self, value: System.Void): ...
    @overload
    def SetDefault(self, style: GH_ColourWheelStyle) -> None: ...
    @overload
    def SetGrip(self, grip: GH_ColourWheelGrip, position: Geometry.Point3d) -> bool: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_ColourWheelAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_ColourWheel): ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @overload
    def IsPickRegion(self, point: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, box: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_ColourWheel(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def State(self) -> GH_ColourWheelState: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @State.setter
    def State(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ConstantObjectAttributes(Attributes.GH_FloatingParamAttributes):
    """Constant value object.

    """
    def __init__(self, owner: GH_ConstantObject): ...
    @property
    def HasOutputGrip(self) -> bool: ...

class GH_ConstantObject(Kernel.GH_Param):
    """Constant value object.

    """
    def __init__(self): ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_DialKnobAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_DialKnob): ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @overload
    def IsPickRegion(self, point: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, box: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_DialKnob(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def Angle() -> float: ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DisplaySettingsWindow() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Decimals(self) -> int: ...
    @property
    def DisplayFormat(self) -> str: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Limit(self) -> bool: ...
    @property
    def Maximum(self) -> System.Decimal: ...
    @property
    def Minimum(self) -> System.Decimal: ...
    @property
    def Range(self) -> System.Decimal: ...
    @property
    def Value(self) -> System.Decimal: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RepairValue() -> None: ...
    @overload
    def SaveState() -> str: ...
    @Decimals.setter
    def Decimals(self, value: System.Void): ...
    @DisplayFormat.setter
    def DisplayFormat(self, value: System.Void): ...
    @Limit.setter
    def Limit(self, value: System.Void): ...
    @Maximum.setter
    def Maximum(self, value: System.Void): ...
    @Minimum.setter
    def Minimum(self, value: System.Void): ...
    @Range.setter
    def Range(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_DataRecorderAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_DataRecorder): ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_DataRecorder(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DestroyRecordedData() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DataLimit(self) -> int: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def IsPreviewCapable(self) -> bool: ...
    @property
    def RecordData(self) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @DataLimit.setter
    def DataLimit(self, value: System.Void): ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @RecordData.setter
    def RecordData(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_DigitScrollerAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, nOwner: GH_DigitScroller): ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def ScrollerBox(self) -> Drawing.RectangleF: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_DigitScroller(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DataType(self) -> Kernel.GH_ParamData: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def ImpliedNickName(self) -> str: ...
    @property
    def InstanceDescription(self) -> str: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def Scroller(self) -> Base.GH_DigitScrollerBase: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @overload
    def SetInitCode(self, code: str) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_GeometryPipelineAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_GeometryPipeline): ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_GeometryPipeline(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AddedToDocument(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DocumentContextChanged(self, document: Kernel.GH_Document, context: Kernel.GH_DocumentContext) -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def ExpireSolution(self, recompute: bool) -> None: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def GroupByLayer(self) -> bool: ...
    @property
    def GroupByType(self) -> bool: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def IncludeHidden(self) -> bool: ...
    @property
    def IncludeLocked(self) -> bool: ...
    @property
    def IsPreviewCapable(self) -> bool: ...
    @property
    def LayerFilter(self) -> str: ...
    @property
    def Locked(self) -> bool: ...
    @property
    def NameFilter(self) -> str: ...
    @property
    def TypeFilter(self) -> DocObjects.ObjectType: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RegisterRemoteIDs(self, table: Kernel.GH_GuidTable) -> None: ...
    @overload
    def RemovedFromDocument(self, document: Kernel.GH_Document) -> None: ...
    @GroupByLayer.setter
    def GroupByLayer(self, value: System.Void): ...
    @GroupByType.setter
    def GroupByType(self, value: System.Void): ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @IncludeHidden.setter
    def IncludeHidden(self, value: System.Void): ...
    @IncludeLocked.setter
    def IncludeLocked(self, value: System.Void): ...
    @LayerFilter.setter
    def LayerFilter(self, value: System.Void): ...
    @Locked.setter
    def Locked(self, value: System.Void): ...
    @NameFilter.setter
    def NameFilter(self, value: System.Void): ...
    @TypeFilter.setter
    def TypeFilter(self, value: System.Void): ...
    @overload
    def ToggleTypeFilter(self, filter_: DocObjects.ObjectType) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_GeometryCacheAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_GeometryCache): ...
    @overload
    def ExpireLayout() -> None: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_GeometryCache(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def IsPreviewCapable(self) -> bool: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ReadGeometryCache() -> None: ...
    @overload
    def RegisterRemoteIDs(self, table: Kernel.GH_GuidTable) -> None: ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @overload
    def WriteGeometryCache() -> None: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_GradientControlAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, gradient: GH_GradientControl): ...
    @overload
    def AppendToAttributeTree(self, attributes: Generic.List) -> None: ...
    @property
    def PathName(self) -> str: ...
    @overload
    def GradientRectangle() -> Drawing.Rectangle: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_GradientControl(Kernel.GH_Component):
    """    """
    def __init__(self): ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DefaultGradient(self) -> Gradient.GH_Gradient: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Gradient(self) -> Gradient.GH_Gradient: ...
    @property
    def GradientPresets(self) -> Generic.List: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @DefaultGradient.setter
    def DefaultGradient(self, value: System.Void): ...
    @Gradient.setter
    def Gradient(self, value: System.Void): ...
    @GradientPresets.setter
    def GradientPresets(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_GraphMapperAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, owner: GH_GraphMapper): ...
    @property
    def DrawDomainTags(self) -> bool: ...
    @property
    def PathName(self) -> str: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @DrawDomainTags.setter
    def DrawDomainTags(self, value: System.Void): ...

class GH_GraphMapper(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Container(self) -> Graphs.GH_GraphContainer: ...
    @property
    def Description(self) -> str: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Graph(self) -> Graphs.IGH_Graph: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def InstanceDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @Container.setter
    def Container(self, value: System.Void): ...
    @Description.setter
    def Description(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_GroupBorder(enum.Enum):
    None_ = 0
    Box = 1
    Blob = 2
    Rectangles = 3

class GH_GroupAttributes(object):
    """Attributes for the GH_Group object.

    """
    def __init__(self, owner: GH_Group): ...
    @overload
    def AppendToAttributeTree(self, attributes: Generic.List) -> None: ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @property
    def Bounds(self) -> Drawing.RectangleF: ...
    @property
    def DocObject(self) -> Kernel.IGH_DocumentObject: ...
    @property
    def GetTopLevel(self) -> Kernel.IGH_Attributes: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def InputGrip(self) -> Drawing.PointF: ...
    @property
    def InstanceGuid(self) -> System.Guid: ...
    @property
    def IsTopLevel(self) -> bool: ...
    @property
    def OutputGrip(self) -> Drawing.PointF: ...
    @property
    def Parent(self) -> Kernel.IGH_Attributes: ...
    @property
    def PathName(self) -> str: ...
    @property
    def Pivot(self) -> Drawing.PointF: ...
    @property
    def Selected(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def InvalidateCanvas(self, canvas: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> bool: ...
    @overload
    def IsMenuRegion(self, point: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, point: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, box: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def IsTooltipPoint(self, point: Drawing.PointF) -> bool: ...
    @overload
    def Layout() -> None: ...
    @overload
    def NewInstanceGuid() -> None: ...
    @overload
    def NewInstanceGuid(self, newId: System.Guid) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RenderToCanvas(self, canvas: Canvas.GH_Canvas, channel: Canvas.GH_CanvasChannel) -> None: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @Bounds.setter
    def Bounds(self, value: System.Void): ...
    @Parent.setter
    def Parent(self, value: System.Void): ...
    @Pivot.setter
    def Pivot(self, value: System.Void): ...
    @Selected.setter
    def Selected(self, value: System.Void): ...
    @overload
    def SetupTooltip(self, canvasPoint: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Group(Kernel.GH_DocumentObject):
    """Represents a group of Grasshopper objects.

    """
    def __init__(self): ...
    @overload
    def AddObject(self, id_: System.Guid) -> None: ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def ContentBoxes() -> Generic.List: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def ExpireCaches() -> None: ...
    @property
    def Border(self) -> GH_GroupBorder: ...
    @property
    def Colour(self) -> Drawing.Color: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def EditMode(self) -> bool: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def GroupID(self) -> System.Guid: ...
    @property
    def ObjectIDs(self) -> Generic.List: ...
    @overload
    def InstanceGuidsChanged(self, map_: Generic.SortedDictionary) -> None: ...
    @overload
    def Objects() -> Generic.List: ...
    @overload
    def ObjectsRecursive() -> Generic.List: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RemoveObject(self, id_: System.Guid) -> None: ...
    @Border.setter
    def Border(self, value: System.Void): ...
    @Colour.setter
    def Colour(self, value: System.Void): ...
    @EditMode.setter
    def EditMode(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ImageSamplerAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, owner: GH_ImageSampler): ...
    @property
    def PathName(self) -> str: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_SamplingFilter(enum.Enum):
    none = 0
    col = 1
    R = 10
    G = 11
    B = 12
    A = 13
    hue = 20
    sat = 21
    val = 22

class GH_ImageSampler(Kernel.GH_Param):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, initial_image: str): ...
    @overload
    def AcceptableFile(self, path: str) -> bool: ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DisplaySettings() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DisplayImage(self) -> Drawing.Bitmap: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def Image(self) -> Drawing.Bitmap: ...
    @property
    def ImageAutoUpdate(self) -> bool: ...
    @property
    def ImageBitsLocked(self) -> bool: ...
    @property
    def ImageFilePath(self) -> str: ...
    @property
    def ImageSaveInFile(self) -> bool: ...
    @property
    def InstanceDescription(self) -> str: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def SamplerDomain(self) -> Types.UVInterval: ...
    @property
    def SamplerFilter(self) -> GH_SamplingFilter: ...
    @property
    def SamplerInterpolate(self) -> bool: ...
    @property
    def SamplerWrapMode(self) -> Drawing2D.WrapMode: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def HandleDrop(self, path: str, mouse_pt: Drawing.PointF) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @ImageAutoUpdate.setter
    def ImageAutoUpdate(self, value: System.Void): ...
    @ImageFilePath.setter
    def ImageFilePath(self, value: System.Void): ...
    @ImageSaveInFile.setter
    def ImageSaveInFile(self, value: System.Void): ...
    @SamplerDomain.setter
    def SamplerDomain(self, value: System.Void): ...
    @SamplerFilter.setter
    def SamplerFilter(self, value: System.Void): ...
    @SamplerInterpolate.setter
    def SamplerInterpolate(self, value: System.Void): ...
    @SamplerWrapMode.setter
    def SamplerWrapMode(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ItemPickerAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, owner: GH_ItemPicker): ...
    @property
    def m_scroller(self) -> Base.GH_DigitScrollerBase: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_ItemPicker(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, obj_ids: Generic.List) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes, obj_ids: Generic.List) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DataList(self) -> Collections.IList: ...
    @property
    def DataTree(self) -> Data.IGH_Structure: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def IsBakeCapable(self) -> bool: ...
    @property
    def IsPreviewCapable(self) -> bool: ...
    @property
    def TreeIndex(self) -> int: ...
    @property
    def TreePath(self) -> Data.GH_Path: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @TreeIndex.setter
    def TreeIndex(self, value: System.Void): ...
    @TreePath.setter
    def TreePath(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_JumpObjectAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_JumpObject): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @overload
    def InvalidateCanvas(self, canvas: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> bool: ...
    @overload
    def IsPickRegion(self, point: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, box: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_JumpObject(Kernel.GH_DocumentObject):
    """    """
    def __init__(self): ...
    @property
    def JumpId(self) -> System.Guid: ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def JumpGroup(self) -> System.Guid: ...
    @overload
    def NextJump() -> GH_JumpObject: ...
    @overload
    def PrevJump() -> GH_JumpObject: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @JumpGroup.setter
    def JumpGroup(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_LegendAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, component: GH_Legend): ...
    @overload
    def AppendToAttributeTree(self, atts: Generic.List) -> None: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_Legend(Kernel.GH_Component):
    """    """
    def __init__(self): ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def LegendType(self) -> GH_LegendType: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @LegendType.setter
    def LegendType(self, value: System.Void): ...
    @overload
    def SetType(self, type_: GH_LegendType) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_LegendType(enum.Enum):
    None_ = 0
    DiscreteVertical = 1
    DiscreteHorizontal = 2
    SmoothVertical = 101
    SmoothHorizontal = 102

class GH_LegendData(object):
    """    """
    def __init__(self): ...
    @overload
    def ClearCachedGeometry() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @property
    def Bounds2D(self) -> Drawing.Rectangle: ...
    @property
    def Bounds3D(self) -> Geometry.Rectangle3d: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Colours(self) -> Generic.List: ...
    @property
    def Names(self) -> Generic.List: ...
    @property
    def Type(self) -> GH_LegendType: ...
    @overload
    def Render(self, graphics: Drawing.Graphics) -> None: ...
    @Bounds2D.setter
    def Bounds2D(self, value: System.Void): ...
    @Bounds3D.setter
    def Bounds3D(self, value: System.Void): ...
    @Type.setter
    def Type(self, value: System.Void): ...

class GH_MarkupDashPattern(enum.Enum):
    Solid = 0
    Dot = 1
    Dash = 2
    DashDot = 3
    DoubleDash = 4

class GH_MarkupProperties(System.ValueType):
    """    """
    @property
    def Colour(self) -> Drawing.Color: ...
    @property
    def Pattern(self) -> GH_MarkupDashPattern: ...
    @property
    def Width(self) -> System.Single: ...
    @Colour.setter
    def Colour(self, value: System.Void): ...
    @Pattern.setter
    def Pattern(self, value: System.Void): ...
    @Width.setter
    def Width(self, value: System.Void): ...
    @overload
    def SetDefault() -> None: ...

class GH_MarkupAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_Markup): ...
    @overload
    @staticmethod
    def AssignDashProperties(iPen: Drawing.Pen, iPattern: GH_MarkupDashPattern, zoom: System.Single) -> None: ...
    @overload
    @staticmethod
    def AssignDashProperties(iPen: Drawing.Pen, iPattern: GH_MarkupDashPattern, iCanvas: Canvas.GH_Canvas) -> None: ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def PathName(self) -> str: ...
    @property
    def Pen_Disabled(self) -> Drawing.Pen: ...
    @property
    def Pen_Enabled(self) -> Drawing.Pen: ...
    @property
    def Pen_Selected(self) -> Drawing.Pen: ...
    @property
    def Properties(self) -> GH_MarkupProperties: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def IsPickRegion(self, pt: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, rec: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @Properties.setter
    def Properties(self, value: System.Void): ...
    @overload
    def SetDashPattern(self, pattern: int) -> None: ...
    @overload
    def UpdateUIData() -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Markup(Kernel.GH_DocumentObject):
    """    """
    def __init__(self): ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Marks(self) -> GH_MarkupCollection: ...
    @overload
    def Menu_AttributesClicked(self, sender: object, e: System.EventArgs) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def UpdateAttributeData() -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_MarkupCollection(object):
    """Maintains a managed list of Polyline marks.

    """
    def __init__(self): ...
    @overload
    def Add(self, mark: Geometry.Polyline) -> None: ...
    @overload
    def Clear() -> None: ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> Geometry.Polyline: ...
    @overload
    def GetEnumerator() -> Generic.IEnumerator: ...
    @overload
    def GetEnumerator1() -> Collections.IEnumerator: ...
    @Item.setter
    def Item(self, value: System.Void): ...
    @overload
    def ToGraphicsPath() -> Drawing2D.GraphicsPath: ...
    @overload
    def Transform(self, X: Geometry.Transform) -> None: ...

class GH_PolylineReductionSetManager(object):
    """    """
    def __init__(self, input_: Generic.List): ...
    @property
    def Reduction(self) -> Generic.List: ...
    @property
    def ReductionExists(self) -> bool: ...

class GH_MultiDimensionalSliderAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, owner: GH_MultiDimensionalSlider): ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_MDSliderMode(enum.Enum):
    _2d = 0
    _3d = 1

class GH_MultiDimensionalSlider(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DisplaySliderSettings() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def SliderMode(self) -> GH_MDSliderMode: ...
    @property
    def Value(self) -> Geometry.Point3d: ...
    @property
    def X(self) -> float: ...
    @property
    def XInterval(self) -> Geometry.Interval: ...
    @property
    def Y(self) -> float: ...
    @property
    def YInterval(self) -> Geometry.Interval: ...
    @property
    def Z(self) -> float: ...
    @property
    def ZInterval(self) -> Geometry.Interval: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @SliderMode.setter
    def SliderMode(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @XInterval.setter
    def XInterval(self, value: System.Void): ...
    @YInterval.setter
    def YInterval(self, value: System.Void): ...
    @ZInterval.setter
    def ZInterval(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_NumberSliderAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, nOwner: GH_NumberSlider): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_NumberSlider(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    @staticmethod
    def FormatNumber(value: System.Decimal, accuracy: Base.GH_SliderAccuracy, digits: int) -> str: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def CurrentValue(self) -> System.Decimal: ...
    @property
    def DataType(self) -> Kernel.GH_ParamData: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Expression(self) -> str: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def ImpliedNickName(self) -> str: ...
    @property
    def InstanceDescription(self) -> str: ...
    @property
    def IsExpression(self) -> bool: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def Slider(self) -> Base.GH_SliderBase: ...
    @property
    def SliderGuid(self) -> System.Guid: ...
    @property
    def TickCount(self) -> int: ...
    @property
    def TickValue(self) -> int: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    @staticmethod
    def HarvestDecimalPlaces(text: str) -> int: ...
    @overload
    @staticmethod
    def HarvestRange(text: str) -> (bool, str, str, str): ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def PopupEditor() -> None: ...
    @overload
    def PopupSnappingEditor() -> None: ...
    @overload
    def PublishRcpItem() -> RemotePanel.IRcpItem: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @Expression.setter
    def Expression(self, value: System.Void): ...
    @TickValue.setter
    def TickValue(self, value: System.Void): ...
    @overload
    def SetInitCode(self, code: str) -> None: ...
    @overload
    def SetSliderValue(self, val: System.Decimal) -> None: ...
    @overload
    def TrySetSliderValue(self, target: System.Decimal) -> bool: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ParamViewerAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_ParamViewer): ...
    @overload
    def AdjustLayout() -> None: ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def PathName(self) -> str: ...
    @property
    def ScrollBarRec(self) -> Drawing.Rectangle: ...
    @property
    def ScrollGripRec(self) -> Drawing.Rectangle: ...
    @property
    def StringContentRec(self) -> Drawing.Rectangle: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_ParamViewer(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AddSource(self, source: Kernel.IGH_Param) -> None: ...
    @overload
    def AddSource(self, source: Kernel.IGH_Param, index: int) -> None: ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def ClearData() -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DisplayGraph(self) -> bool: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def GraphicTree(self) -> Data.GH_GraphicBranch: ...
    @property
    def GraphicTreeArgs(self) -> Data.GH_GraphicTreeDisplayArgs: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def ScrollRatio(self) -> float: ...
    @overload
    def Menu_ToggleDisplayClicked(self, sender: object, e: System.EventArgs) -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @DisplayGraph.setter
    def DisplayGraph(self, value: System.Void): ...
    @ScrollRatio.setter
    def ScrollRatio(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_PathMapperAttributes(Attributes.GH_ResizableAttributes):
    """Attributes for GH_PathLexer object.

    """
    def __init__(self, owner: GH_PathMapper): ...
    @overload
    def ExpireLayout() -> None: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_PathMapper(Kernel.GH_Param):
    """Perform lexical operations on data trees.

    """
    def __init__(self): ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def CreateDefaultMapping() -> None: ...
    @overload
    def CreateFlattenMapping() -> None: ...
    @overload
    def CreateGraftMapping() -> None: ...
    @overload
    def CreateRenumberMapping() -> None: ...
    @overload
    def CreateReverseMapping() -> None: ...
    @overload
    def CreateTrimMapping() -> None: ...
    @overload
    def DisplayLexerEditor() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def InstanceDescription(self) -> str: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def Lexers(self) -> Generic.List: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_PieChartAttributes(Kernel.GH_Attributes):
    """Attributes for the PieChart object.

    """
    def __init__(self, owner: GH_PieChart): ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def Radius(self) -> int: ...
    @overload
    def IsPickRegion(self, pt: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, rec: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @Radius.setter
    def Radius(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_PieChart(Kernel.GH_Param):
    """PieChart object.

    """
    def __init__(self): ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DataSets(self) -> Generic.List: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_PieChartPair(object):
    """PieChart atomic data

    """
    def __init__(self, n_tag: str, n_valence: int): ...
    @property
    def tag(self) -> str: ...
    @property
    def val(self) -> int: ...

class GH_PieChartDataSet(object):
    """Database containing all the pairs in a single data branch.

    """
    def __init__(self): ...
    @overload
    def AddTag(self, tag: str) -> None: ...
    @property
    def Pairs(self) -> Generic.IList: ...
    @property
    def TotalValence(self) -> int: ...

class GH_QuickGraphSortOrder(enum.Enum):
    None_ = 0
    Ascending = 1
    Descending = 2

class GH_QuickGraphAttributes(Attributes.GH_ResizableAttributes):
    """Attributes for the QuickGraph component.

    """
    def __init__(self, owner: GH_QuickGraph): ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_QuickGraph(Kernel.GH_Param):
    """A quick Graph display.

    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def Bundles(self) -> Generic.List: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def Maximum(self) -> float: ...
    @property
    def Minimum(self) -> float: ...
    @property
    def Mininum(self) -> float: ...
    @property
    def SortOrder(self) -> GH_QuickGraphSortOrder: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @SortOrder.setter
    def SortOrder(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_QuickGraphBundle(object):
    """Represents a collection of one or more graph tracks and dots.

    """
    def __init__(self, colour: Drawing.Color, samples: System.System.Array[float], minY: float, maxY: float): ...
    @property
    def IsEmpty(self) -> bool: ...
    @overload
    def IsCoincident(self, point: Drawing.PointF, frame: GH_QuickGraphFrame) -> bool: ...
    @overload
    def Render(self, graphics: Drawing.Graphics, thickness: System.Single, frame: GH_QuickGraphFrame) -> None: ...
    @overload
    def RenderTags(self, graphics: Drawing.Graphics, frame: GH_QuickGraphFrame) -> None: ...

class GH_QuickGraphTrack(object):
    """Represents a contiguous collection of normalised valid samples.

    """
    def __init__(self, points: Drawing.System.Array[Drawing.PointF]): ...
    @overload
    def IsCoincident(self, point: Drawing.PointF, frame: GH_QuickGraphFrame) -> bool: ...
    @overload
    def Render(self, graphics: Drawing.Graphics, pen: Drawing.Pen, frame: GH_QuickGraphFrame) -> None: ...
    @overload
    def RenderTags(self, graphics: Drawing.Graphics, frame: GH_QuickGraphFrame) -> None: ...

class GH_QuickGraphDot(object):
    """Represents an open interval on a graph track.

    """
    def __init__(self, point: Drawing.PointF): ...
    @property
    def Point(self) -> Drawing.PointF: ...
    @overload
    def Render(self, graphics: Drawing.Graphics, colour: Drawing.Color, size: System.Single, frame: GH_QuickGraphFrame) -> None: ...

class GH_QuickGraphFrame(object):
    """Combines a set of useful target frame properties and methods.

    """
    def __init__(self, frame: Drawing.RectangleF, zoom: System.Single, min_: float, max_: float): ...
    @overload
    def EvaluateY(self, normalisedParameter: System.Single) -> float: ...
    @property
    def Frame(self) -> Drawing.RectangleF: ...
    @property
    def Maximum(self) -> float: ...
    @property
    def Minimum(self) -> float: ...
    @property
    def Zoom(self) -> System.Single: ...
    @overload
    def Map(self, point: Drawing.PointF) -> Drawing.PointF: ...
    @overload
    def MapX(self, parameter: System.Single) -> System.Single: ...
    @overload
    def MapY(self, parameter: System.Single) -> System.Single: ...
    @overload
    def UnevaluateY(self, normalisedParameter: float) -> System.Single: ...

class GH_RelayAttributes(Kernel.GH_Attributes):
    """Attributes for the GH_Relay object.

    """
    def __init__(self, owner: GH_Relay): ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def PathName(self) -> str: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_Relay(Kernel.GH_Param):
    """Represents a relay object for wire organisation.

    """
    def __init__(self): ...
    @property
    def RelayId(self) -> System.Guid: ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @overload
    def PostProcessData() -> None: ...
    @overload
    def RelinkProxySources(self, document: Kernel.GH_Document) -> bool: ...
    @overload
    def ResolveDisplayName() -> None: ...
    @overload
    def SafeDelete() -> Generic.List: ...
    @overload
    def SafeDisconnect() -> Generic.List: ...
    @DisplayName.setter
    def DisplayName(self, value: System.Void): ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ScribbleAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_Scribble): ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def Pivot(self) -> Drawing.PointF: ...
    @property
    def ScribblePath(self) -> Drawing2D.GraphicsPath: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def IsPickRegion(self, point: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, box: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @Pivot.setter
    def Pivot(self, value: System.Void): ...

class GH_Scribble(Kernel.GH_DocumentObject):
    """    """
    def __init__(self): ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DisplayProperties() -> None: ...
    @property
    def A(self) -> Drawing.PointF: ...
    @property
    def B(self) -> Drawing.PointF: ...
    @property
    def C(self) -> Drawing.PointF: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Corners(self) -> Drawing.System.Array[Drawing.PointF]: ...
    @property
    def D(self) -> Drawing.PointF: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Font(self) -> Drawing.Font: ...
    @property
    def ScribbleGuid(self) -> System.Guid: ...
    @property
    def Text(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Font.setter
    def Font(self, value: System.Void): ...
    @Text.setter
    def Text(self, value: System.Void): ...
    @overload
    def SetInitCode(self, code: str) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_SliderAnimator(object):
    """    """
    def __init__(self, nOwner: GH_NumberSlider): ...
    @overload
    def CreateFrame() -> Drawing.Bitmap: ...
    @property
    def DrawTag(self) -> bool: ...
    @property
    def FileTemplate(self) -> str: ...
    @property
    def Folder(self) -> str: ...
    @property
    def FrameCount(self) -> int: ...
    @property
    def Height(self) -> int: ...
    @property
    def TagTemplate(self) -> str: ...
    @property
    def Viewport(self) -> Display.RhinoViewport: ...
    @property
    def Width(self) -> int: ...
    @overload
    def IsValidFileTemplate() -> (bool, str): ...
    @overload
    def RestoreDefaultSettings() -> None: ...
    @DrawTag.setter
    def DrawTag(self, value: System.Void): ...
    @FileTemplate.setter
    def FileTemplate(self, value: System.Void): ...
    @Folder.setter
    def Folder(self, value: System.Void): ...
    @FrameCount.setter
    def FrameCount(self, value: System.Void): ...
    @Height.setter
    def Height(self, value: System.Void): ...
    @TagTemplate.setter
    def TagTemplate(self, value: System.Void): ...
    @Viewport.setter
    def Viewport(self, value: System.Void): ...
    @Width.setter
    def Width(self, value: System.Void): ...
    @overload
    def SetupAnimationProperties() -> bool: ...
    @overload
    def StartAnimation() -> int: ...
    @overload
    def StoreSettingsAsDefault() -> None: ...

class GH_SuireStyleNodeAttributes(Kernel.GH_Attributes):
    """Attributes for the Simplify node object.

    """
    def __init__(self, owner: GH_SuireSimplifyNode): ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...

class GH_SuireSimplifyNode(Kernel.GH_Param):
    """An object for simplifying trees which also works on trees with one path.

    """
    def __init__(self): ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_TextBalloonAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_TextBalloon): ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def Pivot(self) -> Drawing.PointF: ...
    @property
    def TrailGrip(self) -> Drawing.RectangleF: ...
    @overload
    def IsMenuRegion(self, pt: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, pt: Drawing.PointF) -> bool: ...
    @overload
    def IsPickRegion(self, rec: Drawing.RectangleF, method: Kernel.GH_PickBox) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @Pivot.setter
    def Pivot(self, value: System.Void): ...

class GH_TextBalloon(Kernel.GH_DocumentObject):
    """    """
    def __init__(self): ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def BalloonAnchor(self) -> System.Guid: ...
    @property
    def BalloonFont(self) -> Drawing.Font: ...
    @property
    def BalloonText(self) -> str: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @BalloonAnchor.setter
    def BalloonAnchor(self, value: System.Void): ...
    @BalloonFont.setter
    def BalloonFont(self, value: System.Void): ...
    @BalloonText.setter
    def BalloonText(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_PanelAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, owner: GH_Panel): ...
    @overload
    def ExpireLayout() -> None: ...
    @property
    def ContentBounds(self) -> Drawing.Rectangle: ...
    @property
    def IndexBounds(self) -> Drawing.Rectangle: ...
    @property
    def ItemBounds(self) -> Drawing.Rectangle: ...
    @property
    def MarginLeft(self) -> int: ...
    @property
    def MarginLeftActual(self) -> int: ...
    @property
    def MarginRight(self) -> int: ...
    @property
    def MarginRightActual(self) -> int: ...
    @property
    def MarginTop(self) -> int: ...
    @property
    def MarginTopActual(self) -> int: ...
    @property
    def PanelBounds(self) -> Drawing.Rectangle: ...
    @property
    def PathName(self) -> str: ...
    @property
    def ScrollerBounds(self) -> Drawing.Rectangle: ...
    @property
    def ScrollGripBounds(self) -> Drawing.Rectangle: ...
    @property
    def ScrollGripControlBounds(self) -> Drawing.Rectangle: ...
    @property
    def TitleBounds(self) -> Drawing.Rectangle: ...
    @overload
    def GetContentAsString(self, includeIndices: bool, includePaths: bool) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @MarginLeft.setter
    def MarginLeft(self, value: System.Void): ...
    @MarginRight.setter
    def MarginRight(self, value: System.Void): ...
    @MarginTop.setter
    def MarginTop(self, value: System.Void): ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Panel(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AddedToDocument(self, document: Kernel.GH_Document) -> None: ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DestroyStreamDestination() -> bool: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def InstanceDescription(self) -> str: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def PanelID(self) -> System.Guid: ...
    @property
    def Properties(self) -> GH_PanelProperties: ...
    @property
    def ScrollRatio(self) -> float: ...
    @property
    def UserText(self) -> str: ...
    @overload
    @staticmethod
    def GetMappingList() -> str: ...
    @overload
    def PickNewFont() -> None: ...
    @overload
    def PublishRcpItem() -> RemotePanel.IRcpItem: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RemovedFromDocument(self, document: Kernel.GH_Document) -> None: ...
    @ScrollRatio.setter
    def ScrollRatio(self, value: System.Void): ...
    @UserText.setter
    def UserText(self, value: System.Void): ...
    @overload
    def SetInitCode(self, code: str) -> None: ...
    @overload
    def SetUserText(self, text: str) -> None: ...
    @overload
    def ShowEditDialog() -> None: ...
    @overload
    def StreamCurrentContent() -> bool: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_PanelProperties(object):
    """Aggregates all properties of a Text Panel object.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: GH_PanelProperties): ...
    @overload
    def DecreaseFont() -> bool: ...
    @property
    def Alignment(self) -> Alignment: ...
    @property
    def Colour(self) -> Drawing.Color: ...
    @property
    def DrawIndices(self) -> bool: ...
    @property
    def DrawPaths(self) -> bool: ...
    @property
    def Font(self) -> Drawing.Font: ...
    @property
    def InferredBackColour(self) -> Drawing.Color: ...
    @property
    def InferredBackColourSelected(self) -> Drawing.Color: ...
    @property
    def InferredForeColour(self) -> Drawing.Color: ...
    @property
    def InferredForeColourSelected(self) -> Drawing.Color: ...
    @property
    def Multiline(self) -> bool: ...
    @property
    def SpecialCodes(self) -> bool: ...
    @property
    def StreamContents(self) -> bool: ...
    @property
    def StreamPath(self) -> str: ...
    @property
    def Wrap(self) -> bool: ...
    @overload
    def IncreaseFont() -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ResetToDefault() -> None: ...
    @Alignment.setter
    def Alignment(self, value: System.Void): ...
    @Colour.setter
    def Colour(self, value: System.Void): ...
    @DrawIndices.setter
    def DrawIndices(self, value: System.Void): ...
    @DrawPaths.setter
    def DrawPaths(self, value: System.Void): ...
    @Font.setter
    def Font(self, value: System.Void): ...
    @Multiline.setter
    def Multiline(self, value: System.Void): ...
    @SpecialCodes.setter
    def SpecialCodes(self, value: System.Void): ...
    @StreamContents.setter
    def StreamContents(self, value: System.Void): ...
    @StreamPath.setter
    def StreamPath(self, value: System.Void): ...
    @Wrap.setter
    def Wrap(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_TimerAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_Timer): ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @property
    def PathName(self) -> str: ...
    @overload
    @staticmethod
    def RenderTimerConnection(g: Drawing.Graphics, anchor: Drawing.PointF, box: Drawing.RectangleF, col: Drawing.Color, active: bool) -> None: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    @staticmethod
    def TimerWire(anchor: Drawing.PointF, box: Drawing.RectangleF) -> Drawing2D.GraphicsPath: ...

class GH_Timer(Kernel.GH_ActiveObject):
    """    """
    def __init__(self): ...
    @overload
    def AddTarget(self, target_object_id: System.Guid) -> None: ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def AppendMenuItems(self, menu: Forms.ToolStripDropDown) -> bool: ...
    @overload
    def CleanTargetList() -> None: ...
    @overload
    def CollectData() -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DependsOn(self, PotentialSource: Kernel.IGH_ActiveObject) -> bool: ...
    @overload
    @staticmethod
    def DestroyBlockIcon() -> None: ...
    @overload
    @staticmethod
    def EnsureBlockIcon() -> None: ...
    @overload
    def ExpireTargets() -> None: ...
    @overload
    def ExpireTargets() -> (int): ...
    @property
    def AllowModeSwitching(self) -> bool: ...
    @property
    def AllowTargetLocking(self) -> bool: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DisplayIcon(self) -> bool: ...
    @property
    def DisplayUserName(self) -> bool: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def GlobalTimerBlock(self) -> bool: ...
    @property
    def IconCapableUI(self) -> bool: ...
    @property
    def InstanceDescription(self) -> str: ...
    @property
    def Interval(self) -> int: ...
    @property
    def IntervalString(self) -> str: ...
    @property
    def IsDataProvider(self) -> bool: ...
    @property
    def LockTargets(self) -> bool: ...
    @property
    def Manual(self) -> bool: ...
    @property
    def TargetCount(self) -> int: ...
    @property
    def Targets(self) -> Generic.List: ...
    @property
    def TargetsRecursive(self) -> Generic.List: ...
    @property
    def TimerComponentID(self) -> System.Guid: ...
    @overload
    def InstanceGuidsChanged(self, map_: Generic.SortedDictionary) -> None: ...
    @overload
    def LockAllTargetObjects() -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RemoveTarget(self, target_object_id: System.Guid) -> None: ...
    @Interval.setter
    def Interval(self, value: System.Void): ...
    @LockTargets.setter
    def LockTargets(self, value: System.Void): ...
    @overload
    def UnlockAllTargetObjects() -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ValueListItem(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, name: str, expression: str): ...
    @overload
    def ExpireValue() -> None: ...
    @property
    def BoxLeft(self) -> Drawing.RectangleF: ...
    @property
    def BoxName(self) -> Drawing.RectangleF: ...
    @property
    def BoxRight(self) -> Drawing.RectangleF: ...
    @property
    def Expression(self) -> str: ...
    @property
    def IsVisible(self) -> bool: ...
    @property
    def Name(self) -> str: ...
    @property
    def Selected(self) -> bool: ...
    @property
    def Value(self) -> Types.IGH_Goo: ...
    @BoxLeft.setter
    def BoxLeft(self, value: System.Void): ...
    @BoxName.setter
    def BoxName(self, value: System.Void): ...
    @BoxRight.setter
    def BoxRight(self, value: System.Void): ...
    @Expression.setter
    def Expression(self, value: System.Void): ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @Selected.setter
    def Selected(self, value: System.Void): ...

class GH_ValueListMode(enum.Enum):
    CheckList = 0
    DropDown = 1
    Sequence = 2
    Cycle = 3

class GH_ValueListAttributes(Kernel.GH_Attributes):
    """    """
    def __init__(self, owner: GH_ValueList): ...
    @property
    def ItemHeight(self) -> int: ...
    @property
    def AllowMessageBalloon(self) -> bool: ...
    @property
    def HasInputGrip(self) -> bool: ...
    @property
    def HasOutputGrip(self) -> bool: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_ValueList(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, obj_ids: Generic.List) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes, obj_ids: Generic.List) -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.IGH_PreviewArgs) -> None: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def DisplayName(self) -> str: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def FirstSelectedItem(self) -> GH_ValueListItem: ...
    @property
    def Hidden(self) -> bool: ...
    @property
    def IsBakeCapable(self) -> bool: ...
    @property
    def IsPreviewCapable(self) -> bool: ...
    @property
    def ListItems(self) -> Generic.List: ...
    @property
    def ListMode(self) -> GH_ValueListMode: ...
    @property
    def SelectedItems(self) -> Generic.List: ...
    @property
    def Values(self) -> Generic.List: ...
    @overload
    def LoadState(self, state: str) -> None: ...
    @overload
    def NextItem() -> None: ...
    @overload
    def PrevItem() -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveState() -> str: ...
    @overload
    def SelectItem(self, index: int) -> None: ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @ListMode.setter
    def ListMode(self, value: System.Void): ...
    @overload
    def ShowListEditor(self, owner: Forms.IWin32Window) -> None: ...
    @overload
    def ToggleItem(self, index: int) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ValueTimeline(Kernel.GH_Component):
    """    """
    def __init__(self): ...
    @overload
    def CanInsertParameter(self, side: Kernel.GH_ParameterSide, index: int) -> bool: ...
    @overload
    def CanRemoveParameter(self, side: Kernel.GH_ParameterSide, index: int) -> bool: ...
    @overload
    def CreateParameter(self, side: Kernel.GH_ParameterSide, index: int) -> Kernel.IGH_Param: ...
    @overload
    def DestroyParameter(self, side: Kernel.GH_ParameterSide, index: int) -> bool: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @overload
    def VariableParameterMaintenance() -> None: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_ValueTrackerAttributes(Attributes.GH_ResizableAttributes):
    """    """
    def __init__(self, owner: GH_ValueTracker): ...
    @overload
    def ExpireLayout() -> None: ...

class GH_ValueTracker(Kernel.GH_Param):
    """    """
    def __init__(self): ...
    @overload
    def AppendAdditionalMenuItems(self, menu: Forms.ToolStripDropDown) -> None: ...
    @overload
    def CleanRecording() -> None: ...
    @overload
    def CreateAttributes() -> None: ...
    @property
    def AutoDomain(self) -> bool: ...
    @property
    def ComponentGuid(self) -> System.Guid: ...
    @property
    def Domain(self) -> Geometry.Interval: ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def GraphColour(self) -> Drawing.Color: ...
    @property
    def Kind(self) -> Kernel.GH_ParamKind: ...
    @property
    def Period(self) -> int: ...
    @property
    def Recording(self) -> VT_Recording: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def UpdateFrequency(self) -> int: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @AutoDomain.setter
    def AutoDomain(self, value: System.Void): ...
    @Domain.setter
    def Domain(self, value: System.Void): ...
    @GraphColour.setter
    def GraphColour(self, value: System.Void): ...
    @Period.setter
    def Period(self, value: System.Void): ...
    @UpdateFrequency.setter
    def UpdateFrequency(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...
    @property
    def ObjectChanged(self): ...
    @property
    def AttributesChanged(self): ...
    @property
    def SolutionExpired(self): ...
    @property
    def DisplayExpired(self): ...
    @property
    def PreviewExpired(self): ...
    @property
    def PingDocument(self): ...

class GH_BarData(object):
    """    """
    def __init__(self, min_: float, max_: float): ...
    @property
    def m_min(self) -> float: ...
    @property
    def m_max(self) -> float: ...
    @property
    def m_count(self) -> int: ...
    @property
    def m_percent(self) -> float: ...

class GH_BooleanTogglePublishProxy(RemotePanel.RcpDocumentObjectItem):
    """    """
    def __init__(self, owner: GH_BooleanToggle): ...
    @property
    def DesiredHeight(self) -> int: ...
    @overload
    def MouseClick(self, e: Forms.MouseEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def MouseDoubleClick(self, e: Forms.MouseEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def Render(self, G: Drawing.Graphics) -> None: ...

class GH_ButtonPublishProxy(RemotePanel.RcpDocumentObjectItem):
    """    """
    def __init__(self, owner: GH_ButtonObject): ...
    @property
    def DesiredHeight(self) -> int: ...
    @overload
    def MouseDown(self, e: Forms.MouseEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def MouseUp(self, e: Forms.MouseEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def Render(self, G: Drawing.Graphics) -> None: ...

class GH_ClusterPasswordUndoAction(Undo.GH_ObjectUndoAction):
    """Stores a single password change undo record.

    """
    def __init__(self, cluster: GH_Cluster): ...

class GH_ClusterPropertiesUndoAction(Undo.GH_ObjectUndoAction):
    """Stores a single properties change undo record.

    """
    def __init__(self, cluster: GH_Cluster): ...

class GH_ClusterPreviewDocumentAction(Undo.GH_ObjectUndoAction):
    """Stores a single preview document change undo record.

    """
    def __init__(self, cluster: GH_Cluster): ...

class GH_ClusterDocumentIdAction(Undo.GH_ObjectUndoAction):
    """Stores a single document id change undo record.

    """
    def __init__(self, cluster: GH_Cluster): ...

class GH_ClusterReferenceAction(Undo.GH_ObjectUndoAction):
    """Stores a single file reference change undo record.

    """
    def __init__(self, cluster: GH_Cluster): ...

class GH_ColourSwatchPublishProxy(RemotePanel.RcpDocumentObjectItem):
    """    """
    def __init__(self, owner: GH_ColourSwatch): ...
    @property
    def DesiredHeight(self) -> int: ...
    @overload
    def MouseClick(self, e: Forms.MouseEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def Render(self, G: Drawing.Graphics) -> None: ...

class GH_NumberSliderPublishProxy(RemotePanel.RcpDocumentObjectItem):
    """    """
    def __init__(self, owner: GH_NumberSlider): ...
    @property
    def DesiredHeight(self) -> int: ...
    @overload
    def MouseDown(self, e: Forms.MouseEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def MouseMove(self, e: Forms.MouseEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def MouseUp(self, e: Forms.MouseEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def Render(self, G: Drawing.Graphics) -> None: ...

class DotDisplay(System.ValueType):
    """    """
    @property
    def Center(self) -> Geometry.Point3d: ...
    @property
    def Label(self) -> str: ...
    @property
    def TextHeigh(self) -> float: ...

class BranchDisplay(System.ValueType):
    """    """
    @property
    def MaskColor(self) -> Drawing.Color: ...
    @property
    def Dots(self) -> Generic.List: ...
    @property
    def TextColor(self) -> Drawing.Color: ...

class Alignment(enum.Enum):
    Default = 0
    Left = 1
    Center = 2
    Right = 3

class GH_PanelPublishProxy(RemotePanel.RcpDocumentObjectItem):
    """    """
    def __init__(self, owner: GH_Panel): ...
    @property
    def DesiredHeight(self) -> int: ...
    @overload
    def Render(self, G: Drawing.Graphics) -> None: ...

class GH_TimerTargetInteraction(Interaction.GH_AbstractInteraction):
    """    """
    def __init__(self, timer: GH_Timer, canvas: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent): ...
    @overload
    def Destroy() -> None: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class VT_DataPoint(System.ValueType):
    """    """
    @property
    def m_time(self) -> System.Int64: ...
    @property
    def m_data(self) -> System.System.Array[float]: ...

class VT_Recording(object):
    """    """
    def __init__(self): ...
    @overload
    def Add(self, values: System.System.Array[float]) -> None: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> VT_DataPoint: ...
    @property
    def MaximumValue(self) -> float: ...
    @property
    def MinimumValue(self) -> float: ...
    @overload
    def RemoveOldestItems(self, N: int) -> None: ...

# endregion
