"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Transforms", "GH_AngularDimension", "GH_AnnotationBase", "GH_Centermark", "GH_Dimension", "GH_Hatch", "GH_InstanceReference", "GH_Leader", "GH_Light", "GH_LinearDimension", "GH_OrdinateDimension", "GH_RadialDimension", "IGH_ReferencedData", "GH_TextDot", "GH_TextEntity", "GH_Arc", "GH_Boolean", "GH_Box", "GH_Brep", "GH_Circle", "GH_Colour", "Complex", "GH_ComplexNumber", "GH_Culture", "GH_Curve", "GH_DetailView", "GH_Extrusion", "GH_DifferentialSolver", "GH_Field", "IGH_FieldElement", "GH_FieldElement", "GH_PointCharge", "GH_LineCharge", "GH_VectorForce", "GH_SpinForce", "IGH_GeometricGoo", "GH_GeometricGoo", "GH_GeometricGooWrapper", "GH_GeometryGroup", "IGH_Goo", "GH_Goo", "GH_QuickCastType", "IGH_QuickCast", "IGH_GooProxy", "GH_GooProxy", "GH_Guid", "GH_Integer", "GH_Interval", "UVInterval", "GH_Interval2D", "GH_Line", "GH_LonLatCoordinate", "GH_Material", "GH_Matrix", "GH_Mesh", "GH_MeshFace", "GH_MeshingParameters", "GH_Number", "GH_ObjectWrapper", "GH_Plane", "GH_PointRefType", "GH_PointRefData", "GH_Point", "GH_PointCloud", "GH_PointUtil", "GH_Predicate", "GH_Rectangle", "GH_String", "GH_StructurePath", "GH_SubD", "GH_Surface", "GH_Time", "GH_Transform", "GH_Vector", "GH_WrapperType", "GH_AnnotationBaseProxy", "GH_DimensionProxy", "GH_HatchProxy", "GH_InstanceReferenceProxy", "GH_TextDotProxy", "GH_BoxProxy", "GH_BrepProxy", "GH_CircleProxy", "GH_CurveProxy", "GH_ExtrusionProxy", "GH_GeometryGroupProxy", "GH_Interval2DProxy", "GH_LineProxy", "MaterialType", "GH_Material_Proxy", "GH_MeshProxy", "GH_MeshFaceProxy", "RhMesherSettings_Proxy", "GH_PlaneProxy", "GH_PointProxy", "PointCloudProxy", "GH_RectangleProxy", "GH_SubDProxy", "GH_SurfaceProxy", "GH_VectorProxy"]
# endregion

# region: Imports
from GH_IO import Serialization
from Grasshopper import Kernel
from Grasshopper.Kernel import Data
from Grasshopper.Kernel import Utility
from Grasshopper.Kernel.Types import Transforms
from Grasshopper.Rhinoceros import Annotations
from Grasshopper.Rhinoceros import Drafting
from Grasshopper.Rhinoceros import Model
from Rhino import Collections
from Rhino import Display
from Rhino import DocObjects
from Rhino import Geometry
from Rhino import Render
from System import Drawing
from System import Globalization
from System.Collections import Generic
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import enum
import Rhino
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_AngularDimension(GH_Dimension):
    """Represents an implementation of a Rhino angular dimension.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, dimension: Geometry.AngularDimension): ...
    @overload
    def __init__(self, other: GH_AngularDimension): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, dimension: Geometry.AngularDimension, style: Annotations.ModelAnnotationStyle): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DuplicateAngularDimension() -> GH_AngularDimension: ...
    @overload
    def DuplicateAnnotation() -> GH_AnnotationBase: ...
    @property
    def Arc(self) -> Geometry.Arc: ...
    @property
    def DimlinePoint(self) -> Geometry.Point3d: ...
    @property
    def Line1(self) -> Geometry.Line: ...
    @property
    def Line2(self) -> Geometry.Line: ...
    @property
    def Offset(self) -> float: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.AngularDimension: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class GH_AnnotationBase(GH_GeometricGoo):
    """Represents an implementation of a Rhino annotation base class.

    """
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateAnnotation() -> GH_AnnotationBase: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def Style(self) -> Annotations.ModelAnnotationStyle: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def GetOverrides() -> DocObjects.DimensionStyle: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Style.setter
    def Style(self, value: System.Void): ...
    @overload
    def SetOverrides(self, style: DocObjects.DimensionStyle) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Centermark(GH_Dimension):
    """Represents an implementation of a Rhino centermark.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, centermark: Geometry.Centermark): ...
    @overload
    def __init__(self, other: GH_Centermark): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, centermark: Geometry.Centermark, style: Annotations.ModelAnnotationStyle): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DuplicateAnnotation() -> GH_AnnotationBase: ...
    @overload
    def DuplicateCentermark() -> GH_Centermark: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Centermark: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class GH_Dimension(GH_AnnotationBase):
    """Represents an implementation of a Rhino dimension base class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Value(self) -> Geometry.Dimension: ...
    @Value.setter
    def Value(self, value: System.Void): ...

class GH_Hatch(GH_GeometricGoo):
    """Represents an implementation of a Rhino hatch.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, hatch: Geometry.Hatch): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, other: GH_Hatch): ...
    @overload
    def __init__(self, hatch: Geometry.Hatch, pattern: Drafting.ModelHatchPattern): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateHatch() -> GH_Hatch: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def BackgroundColor(self) -> Drawing.Color: ...
    @property
    def BoundaryVisible(self) -> bool: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def Pattern(self) -> Drafting.ModelHatchPattern: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Hatch: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @BackgroundColor.setter
    def BackgroundColor(self, value: System.Void): ...
    @BoundaryVisible.setter
    def BoundaryVisible(self, value: System.Void): ...
    @Pattern.setter
    def Pattern(self, value: System.Void): ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_InstanceReference(GH_GeometricGoo):
    """Represents block instance reference. Wraps the functionality of the
type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, xform: Geometry.Transform): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, iref: Geometry.InstanceReferenceGeometry): ...
    @overload
    def __init__(self, other: GH_InstanceReference): ...
    @overload
    def __init__(self, iref: Geometry.InstanceReferenceGeometry, idef: Model.ModelInstanceDefinition): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateInstanceReference() -> GH_InstanceReference: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def InstanceDefinition(self) -> Model.ModelInstanceDefinition: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsReferencedGeometry(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ModelTransform(self) -> Geometry.Transform: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @InstanceDefinition.setter
    def InstanceDefinition(self, value: System.Void): ...
    @ModelTransform.setter
    def ModelTransform(self, value: System.Void): ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Leader(GH_AnnotationBase):
    """Represents an implementation of a Rhino leader.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, leader: Geometry.Leader): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, other: GH_Leader): ...
    @overload
    def __init__(self, leader: Geometry.Leader, style: Annotations.ModelAnnotationStyle): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DuplicateAnnotation() -> GH_AnnotationBase: ...
    @overload
    def DuplicateLeader() -> GH_Leader: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Leader: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class GH_Light(GH_GeometricGoo):
    """Represents an implementation of a Rhino Light class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, light: Geometry.Light): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, other: GH_Light): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateLight() -> GH_Light: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Light: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_LinearDimension(GH_Dimension):
    """Represents an implementation of a Rhino linear dimension.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, dimension: Geometry.LinearDimension): ...
    @overload
    def __init__(self, other: GH_LinearDimension): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, dimension: Geometry.LinearDimension, style: Annotations.ModelAnnotationStyle): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DuplicateAnnotation() -> GH_AnnotationBase: ...
    @overload
    def DuplicateLinearDimension() -> GH_LinearDimension: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.LinearDimension: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class GH_OrdinateDimension(GH_Dimension):
    """Represents an implementation of a Rhino ordinate dimension.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, dimension: Geometry.OrdinateDimension): ...
    @overload
    def __init__(self, other: GH_OrdinateDimension): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, dimension: Geometry.OrdinateDimension, style: Annotations.ModelAnnotationStyle): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DuplicateAnnotation() -> GH_AnnotationBase: ...
    @overload
    def DuplicateOrdinateDimension() -> GH_OrdinateDimension: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.OrdinateDimension: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class GH_RadialDimension(GH_Dimension):
    """Represents an implementation of a Rhino radial dimension.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, dimension: Geometry.RadialDimension): ...
    @overload
    def __init__(self, other: GH_RadialDimension): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, dimension: Geometry.RadialDimension, style: Annotations.ModelAnnotationStyle): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DuplicateAnnotation() -> GH_AnnotationBase: ...
    @overload
    def DuplicateRadialDimension() -> GH_RadialDimension: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.RadialDimension: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class IGH_ReferencedData:
    """    """
    @property
    def IsReferencedData(self) -> bool: ...
    @property
    def IsReferencedDataLoaded(self) -> bool: ...
    @overload
    def LoadReferencedData() -> bool: ...
    @overload
    def UnloadReferencedData() -> None: ...

class GH_TextDot(GH_GeometricGoo):
    """Represents an implementation of a Rhino text dot.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, textDot: Geometry.TextDot): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, other: GH_TextDot): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateTextDot() -> GH_TextDot: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.TextDot: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_TextEntity(GH_AnnotationBase):
    """Represents an implementation of a Rhino text entity.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, textEntity: Geometry.TextEntity): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, other: GH_TextEntity): ...
    @overload
    def __init__(self, textEntity: Geometry.TextEntity, style: Annotations.ModelAnnotationStyle): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DuplicateAnnotation() -> GH_AnnotationBase: ...
    @overload
    def DuplicateTextEntity() -> GH_TextEntity: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.TextEntity: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class GH_Arc(GH_GeometricGoo):
    """Represents a 3D circular arc. GH_Arc re-implements the OpenNURBS OnArc class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, arc: Geometry.Arc): ...
    @overload
    def __init__(self, other: GH_Arc): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateArc() -> GH_Arc: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Boolean(GH_Goo):
    """Represents a boolean value. GH_Boolean re-implements the framework System.Boolean type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, bool_: bool): ...
    @overload
    def __init__(self, other: GH_Boolean): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateBoolean() -> GH_Boolean: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Box(GH_GeometricGoo):
    """Represents a 3D oriented Box volume.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, box: Geometry.Box): ...
    @overload
    def __init__(self, box: Geometry.BoundingBox): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, other: GH_Box): ...
    @overload
    def AppendRenderGeometry(self, args: Kernel.GH_RenderArgs, materialHint: Render.RenderMaterial) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def Brep() -> Geometry.Brep: ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateBox() -> GH_Box: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @overload
    def Geometry() -> (bool, Geometry.Brep, Geometry.Curve, Geometry.Point): ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Box: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Mesh() -> Geometry.Mesh: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Brep(GH_GeometricGoo):
    """Represents a 3D polysurface. GH_Brep wraps the functionality of the OpenNURBS OnBrep class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, brep: Geometry.Brep): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, other: GH_Brep): ...
    @overload
    def AppendRenderGeometry(self, args: Kernel.GH_RenderArgs, materialHint: Render.RenderMaterial) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    @staticmethod
    def BrepTightBoundingBox(in_: Geometry.Brep) -> Geometry.BoundingBox: ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DestroyPreviewMeshes() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateBrep() -> GH_Brep: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Brep: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def GetPreviewMeshes() -> Geometry.System.Array[Geometry.Mesh]: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Circle(GH_GeometricGoo):
    """Represents a 3D circle. GH_Circle re-implements the OpenNURBS OnCircle class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, circle: Geometry.Circle): ...
    @overload
    def __init__(self, other: GH_Circle): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateCircle() -> GH_Circle: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Colour(GH_Goo):
    """Represents an ARGB colour. GH_Colour re-implements the framework System.Drawing.Color type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, colour: Drawing.Color): ...
    @overload
    def __init__(self, other: GH_Colour): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateColour() -> GH_Colour: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class Complex(System.ValueType):
    """Complex number type in Grasshopper. Do not confuse with GH_Complex which is the IGH_Goo implementation of ComplexNumber.

    """
    @overload
    def __init__(self, real_component: float): ...
    @overload
    def __init__(self, real_component: float, imaginary_component: float): ...
    @overload
    def ACos() -> Complex: ...
    @overload
    def ASin() -> Complex: ...
    @overload
    def ATan() -> Complex: ...
    @overload
    def Cos() -> Complex: ...
    @overload
    def Cosecant() -> Complex: ...
    @overload
    def CoTan() -> Complex: ...
    @overload
    def Exponential() -> Complex: ...
    @property
    def Argument(self) -> float: ...
    @property
    def ComplexUnit(self) -> Complex: ...
    @property
    def Imaginary(self) -> float: ...
    @property
    def Infinity(self) -> Complex: ...
    @property
    def IsReal(self) -> bool: ...
    @property
    def IsRealNonNegative(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsZero(self) -> bool: ...
    @property
    def NaN(self) -> Complex: ...
    @property
    def NegativeInfinity(self) -> Complex: ...
    @property
    def Real(self) -> float: ...
    @property
    def Zero(self) -> Complex: ...
    @overload
    def GetHashCode() -> int: ...
    @overload
    def Log() -> Complex: ...
    @overload
    def Log10() -> Complex: ...
    @overload
    def Modulus() -> float: ...
    @overload
    def ModulusSquared() -> float: ...
    @overload
    def Power(self, exponent: Complex) -> Complex: ...
    @overload
    def Root(self, rootexponent: Complex) -> Complex: ...
    @overload
    def Secant() -> Complex: ...
    @Argument.setter
    def Argument(self, value: System.Void): ...
    @Imaginary.setter
    def Imaginary(self, value: System.Void): ...
    @Real.setter
    def Real(self, value: System.Void): ...
    @overload
    def Sin() -> Complex: ...
    @overload
    def Square() -> Complex: ...
    @overload
    def SquareRoot() -> Complex: ...
    @overload
    def Tan() -> Complex: ...

class GH_ComplexNumber(GH_Goo):
    """Wraps up the Complex data type for IGH_Goo adherence.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, number: Complex): ...
    @overload
    def __init__(self, other: GH_ComplexNumber): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateComplex() -> GH_ComplexNumber: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Culture(GH_Goo):
    """Represents a globally unique identifier. GH_Guid re-implements the framework System.Guid type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, culture: Globalization.CultureInfo): ...
    @overload
    def __init__(self, other: GH_Culture): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateCulture() -> GH_Culture: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Curve(GH_GeometricGoo):
    """Represents a 3D spline curve.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, curve: Geometry.Curve): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, other: GH_Curve): ...
    @overload
    def __init__(self, ref_guid: System.Guid, ref_edge: int): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateCurve() -> GH_Curve: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceEdge(self) -> int: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Curve: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def MakeDeformable() -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceEdge.setter
    def ReferenceEdge(self, value: System.Void): ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_DetailView(GH_GeometricGoo):
    """Represents a Rhino model detail view. Wraps the functionality of the
type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, detailView: Geometry.DetailView): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, other: GH_DetailView): ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateDetailView() -> GH_DetailView: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.DetailView: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Extrusion(GH_GeometricGoo):
    """Represents a 3D extrusion. GH_Extrusion wraps the functionality of the OpenNURBS OnExtrusion class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, extrusion: Geometry.Extrusion): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, other: GH_Extrusion): ...
    @overload
    def AppendRenderGeometry(self, args: Kernel.GH_RenderArgs, materialHint: Render.RenderMaterial) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DestroyPreviewMeshes() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateExtrusion() -> GH_Extrusion: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Extrusion: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def GetPreviewMeshes() -> Geometry.System.Array[Geometry.Mesh]: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_DifferentialSolver(enum.Enum):
    None_ = 0
    Euler = 1
    RungeKutta2 = 2
    RungeKutta3 = 3
    RungeKutta4 = 4

class GH_Field(object):
    """Represents a field of forces.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: GH_Field): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def CurvatureAt(self, location: Geometry.Point3d) -> float: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Elements(self) -> Generic.List: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @overload
    def SolveStep(self, location: Geometry.Point3d, factor: float, method: GH_DifferentialSolver) -> Geometry.Vector3d: ...
    @overload
    def SolveSteps(self, location: Geometry.Point3d, accuracy: float, count: int, method: GH_DifferentialSolver) -> Collections.Point3dList: ...
    @overload
    def TensorAt(self, location: Geometry.Point3d) -> Geometry.Vector3d: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class IGH_FieldElement:
    """Represents the basic interface for field elements.

    """
    @overload
    def Duplicate() -> IGH_FieldElement: ...
    @overload
    def Force(self, location: Geometry.Point3d) -> Geometry.Vector3d: ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ElementGuid(self) -> System.Guid: ...
    @property
    def IsLimited(self) -> bool: ...
    @property
    def Limits(self) -> Geometry.Box: ...
    @overload
    def IsCoincident(self, point: Geometry.Point3d, tolerance: float) -> bool: ...
    @IsLimited.setter
    def IsLimited(self, value: System.Void): ...
    @Limits.setter
    def Limits(self, value: System.Void): ...

class GH_FieldElement(object):
    """Abstract implementation of IGH_FieldElement, derive from this class rather than implementing IGH_FieldElement to save yourself time and effort.

    """
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_FieldElement: ...
    @overload
    def Force(self, location: Geometry.Point3d) -> Geometry.Vector3d: ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def ElementGuid(self) -> System.Guid: ...
    @property
    def IsLimited(self) -> bool: ...
    @property
    def Limits(self) -> Geometry.Box: ...
    @overload
    def IsCoincident(self, point: Geometry.Point3d, tolerance: float) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @IsLimited.setter
    def IsLimited(self, value: System.Void): ...
    @Limits.setter
    def Limits(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_PointCharge(GH_FieldElement):
    """Point charge implementation for IGH_Fields.

    """
    def __init__(self): ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_FieldElement: ...
    @overload
    def Force(self, location: Geometry.Point3d) -> Geometry.Vector3d: ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Charge(self) -> float: ...
    @property
    def Decay(self) -> float: ...
    @property
    def ElementGuid(self) -> System.Guid: ...
    @property
    def Location(self) -> Geometry.Point3d: ...
    @overload
    def IsCoincident(self, point: Geometry.Point3d, tolerance: float) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Charge.setter
    def Charge(self, value: System.Void): ...
    @Decay.setter
    def Decay(self, value: System.Void): ...
    @Location.setter
    def Location(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_LineCharge(GH_FieldElement):
    """Line charge implementation for IGH_Fields.

    """
    def __init__(self): ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_FieldElement: ...
    @overload
    def Force(self, location: Geometry.Point3d) -> Geometry.Vector3d: ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Charge(self) -> float: ...
    @property
    def ElementGuid(self) -> System.Guid: ...
    @property
    def Segment(self) -> Geometry.Line: ...
    @overload
    def IsCoincident(self, point: Geometry.Point3d, tolerance: float) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Charge.setter
    def Charge(self, value: System.Void): ...
    @Segment.setter
    def Segment(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_VectorForce(GH_FieldElement):
    """Linear vector force implementation for IGH_Fields.

    """
    def __init__(self): ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_FieldElement: ...
    @overload
    def Force(self, location: Geometry.Point3d) -> Geometry.Vector3d: ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Chord(self) -> Geometry.Line: ...
    @property
    def ElementGuid(self) -> System.Guid: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Chord.setter
    def Chord(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_SpinForce(GH_FieldElement):
    """Rotational spin force for IGH_Fields.

    """
    def __init__(self): ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_FieldElement: ...
    @overload
    def Force(self, location: Geometry.Point3d) -> Geometry.Vector3d: ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Decay(self) -> float: ...
    @property
    def ElementGuid(self) -> System.Guid: ...
    @property
    def Plane(self) -> Geometry.Plane: ...
    @property
    def Radius(self) -> float: ...
    @property
    def Strength(self) -> float: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Decay.setter
    def Decay(self, value: System.Void): ...
    @Plane.setter
    def Plane(self, value: System.Void): ...
    @Radius.setter
    def Radius(self, value: System.Void): ...
    @Strength.setter
    def Strength(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class IGH_GeometricGoo:
    """Base interface for all Data inside Grasshoper that could pass for Geometry

    """
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsReferencedGeometry(self) -> bool: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...

class GH_GeometricGoo(GH_Goo):
    """Abstract base implementation of IGH_GeometricGoo. If you implement IGH_GeometricGoo, use this for a booster.

    GH_GeometricGoo[T]
    """
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, Q): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsReferencedGeometry(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def Value(self) -> T: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...

class GH_GeometricGooWrapper(object):
    """Utility class for maintaining all kinds of IGH_GeometricGoo types.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, goo: IGH_GeometricGoo): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def InternalGoo(self) -> IGH_GeometricGoo: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsReferencedGeometry(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_GeometryGroup(object):
    """    """
    def __init__(self): ...
    @overload
    def AppendRenderGeometry(self, args: Kernel.GH_RenderArgs, material: Render.RenderMaterial) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsReferencedGeometry(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Objects(self) -> Generic.List: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class IGH_Goo:
    """Base interface for all Data inside Grasshopper. Every parameter must implement a type of Goo.

    """
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def ScriptVariable() -> object: ...
    @overload
    def ToString() -> str: ...

class GH_Goo(object):
    """Base class for IGH_Goo implementation. Takes care of some default behaviour.

    GH_Goo[T]
    """
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, Q): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> T: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_QuickCastType(enum.Enum):
    bool_ = 0
    int_ = 1
    num = 2
    text = 3
    col = 4
    pt = 5
    vec = 6
    complex_ = 7
    interval = 8
    matrix = 9

class IGH_QuickCast:
    """IGH_QuickCast allows certain components to speed up type detection for inputs. This interface is a Grasshopper core interface only, do not implement it. Do not use it.

    """
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...

class IGH_GooProxy:
    """Base interface for all type proxies.

    """
    @overload
    def Construct() -> None: ...
    @overload
    def FormatInstance() -> str: ...
    @overload
    def FromString(self, in_: str) -> bool: ...
    @property
    def IsParsable(self) -> bool: ...
    @property
    def ProxyOwner(self) -> IGH_Goo: ...
    @property
    def UserString(self) -> str: ...
    @property
    def Valid(self) -> bool: ...
    @overload
    def MutateString(self, in_: str) -> str: ...
    @UserString.setter
    def UserString(self, value: System.Void): ...

class GH_GooProxy(object):
    """Abstract base implementation of IGH_GooProxy

    GH_GooProxy[T]
    """
    @overload
    def Construct() -> None: ...
    @overload
    def FormatInstance() -> str: ...
    @overload
    def FromString(self, in_: str) -> bool: ...
    @property
    def IsParsable(self) -> bool: ...
    @property
    def ProxyOwner(self) -> IGH_Goo: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def UserString(self) -> str: ...
    @property
    def Valid(self) -> bool: ...
    @overload
    def MutateString(self, in_: str) -> str: ...
    @UserString.setter
    def UserString(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class GH_Guid(GH_Goo):
    """Represents a globally unique identifier. GH_Guid re-implements the framework System.Guid type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, other: GH_Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGuid() -> GH_Guid: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Integer(GH_Goo):
    """Represents a 32-bit signed integer. GH_Integer re-implements the framework System.Int32 type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, number: int): ...
    @overload
    def __init__(self, other: GH_Integer): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateInteger() -> GH_Integer: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Interval(GH_Goo):
    """Represents a one-dimensional numeric domain.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, interval: Geometry.Interval): ...
    @overload
    def __init__(self, other: GH_Interval): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateInterval() -> GH_Interval: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class UVInterval(System.ValueType):
    """UVInterval data type. Do not confuse this with GH_Interval2D.

    """
    def __init__(self, newU: Geometry.Interval, newV: Geometry.Interval): ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def U(self) -> Geometry.Interval: ...
    @property
    def U0(self) -> float: ...
    @property
    def U1(self) -> float: ...
    @property
    def V(self) -> Geometry.Interval: ...
    @property
    def V0(self) -> float: ...
    @property
    def V1(self) -> float: ...
    @U.setter
    def U(self, value: System.Void): ...
    @U0.setter
    def U0(self, value: System.Void): ...
    @U1.setter
    def U1(self, value: System.Void): ...
    @V.setter
    def V(self, value: System.Void): ...
    @V0.setter
    def V0(self, value: System.Void): ...
    @V1.setter
    def V1(self, value: System.Void): ...

class GH_Interval2D(GH_Goo):
    """Represents a two-dimensional numeric domain.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, uv: UVInterval): ...
    @overload
    def __init__(self, other: GH_Interval2D): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateInterval() -> GH_Interval2D: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Line(GH_GeometricGoo):
    """Represents a 3D line segment. GH_Line re-implements the OpenNURBS OnLine class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, line: Geometry.Line): ...
    @overload
    def __init__(self, other: GH_Line): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateLine() -> GH_Line: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_LonLatCoordinate(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, longitude: float, latitude: float): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def Latitude(self) -> float: ...
    @property
    def Longitude(self) -> float: ...
    @property
    def SphereUParameter(self) -> float: ...
    @property
    def SphereVParameter(self) -> float: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @Latitude.setter
    def Latitude(self, value: System.Void): ...
    @Longitude.setter
    def Longitude(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Material(GH_Goo):
    """Represents a implementation of the Rhino material

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, rdkId: System.Guid): ...
    @overload
    def __init__(self, rdkXml: str): ...
    @overload
    def __init__(self, diffuse: Drawing.Color): ...
    @overload
    def __init__(self, material: Display.DisplayMaterial): ...
    @overload
    def __init__(self, material: Render.RenderMaterial): ...
    @overload
    def __init__(self, other: GH_Material): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    @staticmethod
    def CreateRhinoMaterial(colour: Drawing.Color) -> DocObjects.Material: ...
    @overload
    @staticmethod
    def CreateStandardMaterial(colour: Drawing.Color) -> Display.DisplayMaterial: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateMaterial() -> GH_Material: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def RdkMaterialId(self) -> System.Guid: ...
    @property
    def RdkMaterialRmtl(self) -> str: ...
    @property
    def RdkMaterialXml(self) -> str: ...
    @property
    def Type(self) -> MaterialType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def MaterialBestGuess() -> Render.RenderMaterial: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @RdkMaterialId.setter
    def RdkMaterialId(self, value: System.Void): ...
    @RdkMaterialRmtl.setter
    def RdkMaterialRmtl(self, value: System.Void): ...
    @RdkMaterialXml.setter
    def RdkMaterialXml(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Matrix(GH_Goo):
    """Represents a rectangular numeric matrix. GH_Integer re-implements Rhino.Geometry.Matrix.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, matrix: Geometry.Matrix): ...
    @overload
    def __init__(self, other: GH_Matrix): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    @staticmethod
    def CloneMatrix(matrix: Geometry.Matrix) -> Geometry.Matrix: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateMatrix() -> GH_Matrix: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Mesh(GH_GeometricGoo):
    """Represents a 3D polygonal mesh composed of quads and tris. GH_MEsh wraps the functionality of the OpenNURBS OnMesh class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, mesh: Geometry.Mesh): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, other: GH_Mesh): ...
    @overload
    def AppendRenderGeometry(self, args: Kernel.GH_RenderArgs, materialHint: Render.RenderMaterial) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateMesh() -> GH_Mesh: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_MeshFace(GH_Goo):
    """Represents a tri or quad mesh face. GH_MeshFace works similar to the OpenNURBS OnMeshFace class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: Geometry.MeshFace): ...
    @overload
    def __init__(self, other: GH_MeshFace): ...
    @overload
    def __init__(self, nA: int, nB: int, nC: int): ...
    @overload
    def __init__(self, nA: int, nB: int, nC: int, nD: int): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateMeshFace() -> GH_MeshFace: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_MeshingParameters(GH_Goo):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: Geometry.MeshingParameters): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateMesherSettings() -> GH_MeshingParameters: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Number(GH_Goo):
    """Represents a double-precision floating point number. GH_Number re-implements the framework System.Double type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, number: float): ...
    @overload
    def __init__(self, other: GH_Number): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateNumber() -> GH_Number: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_ObjectWrapper(GH_Goo):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, obj: object): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateObject() -> GH_ObjectWrapper: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @overload
    def ToString() -> str: ...

class GH_Plane(GH_GeometricGoo):
    """Represents a 3D plane. GH_Plane re-implements the OpenNURBS OnPlane class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, plane: Geometry.Plane): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, other: GH_Plane): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    @staticmethod
    def DrawPlane(display: Display.DisplayPipeline, plane: Geometry.Plane) -> None: ...
    @overload
    @staticmethod
    def DrawPlane(display: Display.DisplayPipeline, plane: Geometry.Plane, size: float, frequency: int) -> None: ...
    @overload
    @staticmethod
    def DrawPlane(display: Display.DisplayPipeline, plane: Geometry.Plane, size: float, frequency: int, grid_color: Drawing.Color, x_color: Drawing.Color, y_color: Drawing.Color) -> None: ...
    @overload
    @staticmethod
    def DrawPlane(display: Display.DisplayPipeline, plane: Geometry.Plane, size: float, frequency: int, grid_color: Drawing.Color, x_color: Drawing.Color, y_color: Drawing.Color, back_color: Drawing.Color) -> None: ...
    @overload
    @staticmethod
    def DrawPlaneIcon(display: Display.DisplayPipeline, plane: Geometry.Plane, size: float, edgeColour: Drawing.Color, fillColour: Drawing.Color) -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicatePlane() -> GH_Plane: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_PointRefType(enum.Enum):
    coordinate = 1
    point_object = 2
    curve_ratio = 10
    curve_dist_start = 11
    curve_dist_end = 12
    srf_param = 20

class GH_PointRefData(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, iOther: GH_PointRefData): ...
    @property
    def m_RefID(self) -> System.Guid: ...
    @property
    def m_RefIndex(self) -> int: ...
    @property
    def m_RefParam(self) -> System.System.Array[float]: ...
    @property
    def m_RefType(self) -> GH_PointRefType: ...
    @overload
    def EvCurve(self, c: Geometry.Curve) -> Geometry.Point3d: ...
    @overload
    def EvCurveParam(self, c: Geometry.Curve) -> float: ...
    @overload
    def EvSurface(self, s: Geometry.Surface) -> Geometry.Point3d: ...
    @overload
    def SetCurveParam(self, c: Geometry.Curve, t: float) -> bool: ...
    @overload
    def SetSurfaceParam(self, srf: Geometry.Surface, u: float, v: float) -> bool: ...

class GH_Point(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, pt: Geometry.Point3d): ...
    @overload
    def __init__(self, iOther: GH_Point): ...
    @overload
    def __init__(self, rh_obj_id: System.Guid): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def CreateFromCoordinate(self, pt: Geometry.Point3d) -> None: ...
    @overload
    def CreateFromCurveDistance(self, crv_id: System.Guid, crv: Geometry.Curve, t: float, bFromStart: bool) -> None: ...
    @overload
    def CreateFromCurveRatio(self, crv_id: System.Guid, crv: Geometry.Curve, t: float) -> None: ...
    @overload
    def CreateFromEdgeDistance(self, brp_id: System.Guid, edge: Geometry.Curve, e_index: int, t: float, bFromStart: bool) -> None: ...
    @overload
    def CreateFromEdgeRatio(self, brp_id: System.Guid, edge: Geometry.Curve, e_index: int, t: float) -> None: ...
    @overload
    def CreateFromPointObject(self, id_: System.Guid) -> None: ...
    @overload
    def CreateFromSurfaceParam(self, brp_id: System.Guid, f_index: int, srf: Geometry.Surface, u: float, v: float) -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicatePoint() -> GH_Point: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @overload
    def EnsureReferenceData() -> None: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsReferencedGeometry(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def ReferenceData(self) -> GH_PointRefData: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Point3d: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ReferenceCurve() -> Geometry.Curve: ...
    @overload
    def ReferenceCurve(self, ref: DocObjects.RhinoObject) -> Geometry.Curve: ...
    @overload
    def ReferenceIndex() -> int: ...
    @overload
    def ReferenceIndex(self, new_index: int) -> None: ...
    @overload
    def ReferenceParam(self, index: int) -> float: ...
    @overload
    def ReferenceParam(self, index: int, new_param: float) -> None: ...
    @overload
    def ReferencesCurve() -> bool: ...
    @overload
    def ReferencesEdge() -> bool: ...
    @overload
    def ReferenceSurface() -> Geometry.BrepFace: ...
    @overload
    def ReferenceType() -> GH_PointRefType: ...
    @overload
    def ReferenceType(self, new_type: GH_PointRefType) -> None: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceData.setter
    def ReferenceData(self, value: System.Void): ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def SetReferenceParams(self, u: float, v: float) -> None: ...
    @overload
    def ShowReferenceDialog() -> Forms.DialogResult: ...
    @overload
    def ShowReferenceDialog(self, owner: Forms.IWin32Window) -> Forms.DialogResult: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_PointCloud(GH_GeometricGoo):
    """Represents a point cloud.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, pointCloud: Geometry.PointCloud): ...
    @overload
    def __init__(self, ref_guid: System.Guid): ...
    @overload
    def __init__(self, other: GH_PointCloud): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicatePointCloud() -> GH_PointCloud: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.PointCloud: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_PointUtil(object):
    """    """
    @overload
    @staticmethod
    def FitPlaneThroughPoints(pts: Generic.IEnumerable) -> Geometry.Plane: ...
    @overload
    @staticmethod
    def ProjectPointsToPlane(pts: Generic.IEnumerable, plane: Geometry.Plane, include_nulls: bool) -> Generic.List: ...
    @overload
    @staticmethod
    def PullPointsToPlane(pts: Generic.IEnumerable, plane: Geometry.Plane, include_nulls: bool) -> Generic.List: ...
    @overload
    @staticmethod
    def RemapPointsToPlane(pts: Generic.IEnumerable, plane: Geometry.Plane, include_nulls: bool) -> Generic.List: ...

class GH_Predicate(object):
    """    """
    def __init__(self, predicate: System.Predicate, description: str): ...
    @overload
    @staticmethod
    def Cast(source: object) -> GH_Predicate: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @overload
    def Format(self, value: object) -> str: ...
    @property
    def Description(self) -> str: ...
    @property
    def Empty(self) -> GH_Predicate: ...
    @property
    def False_(self) -> GH_Predicate: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def Missing(self) -> GH_Predicate: ...
    @property
    def Present(self) -> GH_Predicate: ...
    @property
    def True_(self) -> GH_Predicate: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Invoke(self, value: object) -> bool: ...
    @overload
    def Negate() -> GH_Predicate: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @overload
    def ToString() -> str: ...
    @overload
    @staticmethod
    def TryCastTo(source: object) -> (bool, T): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Rectangle(GH_GeometricGoo):
    """Represents a 3D rectangle. GH_Rectangle re-implements the RhinoCommon Rectangle3d.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, rec: Geometry.Rectangle3d): ...
    @overload
    def __init__(self, other: GH_Rectangle): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateRectangle() -> GH_Rectangle: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_String(GH_Goo):
    """Represents a literal string. GH_String re-implements the framework System.String type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, str_: str): ...
    @overload
    def __init__(self, other: GH_String): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateString() -> GH_String: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_StructurePath(GH_Goo):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, path: Data.GH_Path): ...
    @overload
    def __init__(self, other: GH_StructurePath): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicatePath() -> GH_StructurePath: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Data.GH_Path: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_SubD(GH_GeometricGoo):
    """Represents a 3D subdivision surface.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, subd: Geometry.SubD): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, other: GH_SubD): ...
    @overload
    def AppendRenderGeometry(self, args: Kernel.GH_RenderArgs, materialHint: Render.RenderMaterial) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DestroyPreviewMeshes() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateSubD() -> GH_SubD: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.SubD: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def GetPreviewMeshes() -> Geometry.System.Array[Geometry.Mesh]: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Surface(GH_GeometricGoo):
    """Represents a 3D (trimmed) surface. GH_Surface wraps the functionality of the OpenNURBS OnBrepFace class.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, srf: Geometry.Surface): ...
    @overload
    def __init__(self, brep: Geometry.Brep): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, other: GH_Surface): ...
    @overload
    def AppendRenderGeometry(self, args: Kernel.GH_RenderArgs, materialHint: Render.RenderMaterial) -> None: ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def DestroyPreviewMeshes() -> None: ...
    @overload
    def DrawViewportMeshes(self, args: Kernel.GH_PreviewMeshArgs) -> None: ...
    @overload
    def DrawViewportWires(self, args: Kernel.GH_PreviewWireArgs) -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateGeometry() -> IGH_GeometricGoo: ...
    @overload
    def DuplicateSurface() -> GH_Surface: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def Boundingbox(self) -> Geometry.BoundingBox: ...
    @property
    def ClippingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Face(self) -> Geometry.BrepFace: ...
    @property
    def IsGeometryLoaded(self) -> bool: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def ReferenceID(self) -> System.Guid: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Brep: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def GetPreviewMeshes() -> Geometry.System.Array[Geometry.Mesh]: ...
    @overload
    def IsPointOnDomain(self, u: float, v: float) -> bool: ...
    @overload
    def IsPointOnFace(self, u: float, v: float) -> bool: ...
    @overload
    def LoadGeometry() -> bool: ...
    @overload
    def LoadGeometry(self, doc: Rhino.RhinoDoc) -> bool: ...
    @overload
    def Morph(self, xmorph: Geometry.SpaceMorph) -> IGH_GeometricGoo: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @ReferenceID.setter
    def ReferenceID(self, value: System.Void): ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Transform(self, xform: Geometry.Transform) -> IGH_GeometricGoo: ...
    @overload
    def Untrim() -> bool: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Time(GH_Goo):
    """Represents a date and time. GH_Time re-implements the framework System.DateTime type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, time: System.DateTime): ...
    @overload
    def __init__(self, other: GH_Time): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateDateTime() -> GH_Time: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Transform(GH_Goo):
    """Represents a collection of transformations.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, transform: Transforms.ITransform): ...
    @overload
    def __init__(self, transform: Geometry.Transform): ...
    @overload
    def __init__(self, other: GH_Transform): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, Q): ...
    @overload
    def ClearCaches() -> None: ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def CompoundTransforms(self) -> Generic.List: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def IsValidWhyNot(self) -> str: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Value(self) -> Geometry.Transform: ...
    @overload
    def GetInverse() -> GH_Transform: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ScriptVariable() -> object: ...
    @Value.setter
    def Value(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Vector(GH_Goo):
    """Represents a 3D vector. GH_Vector re-implements the RhinoCommon Vector3d struct.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, vector: Geometry.Vector3d): ...
    @overload
    def __init__(self, other: GH_Vector): ...
    @overload
    def CastFrom(self, source: object) -> bool: ...
    @overload
    def CastTo() -> (bool, T): ...
    @overload
    def Duplicate() -> IGH_Goo: ...
    @overload
    def DuplicateVector() -> GH_Vector: ...
    @overload
    def EmitProxy() -> IGH_GooProxy: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def QC_Type(self) -> GH_QuickCastType: ...
    @property
    def TypeDescription(self) -> str: ...
    @property
    def TypeName(self) -> str: ...
    @overload
    def QC_Bool() -> bool: ...
    @overload
    def QC_Col() -> Drawing.Color: ...
    @overload
    def QC_CompareTo(self, other: IGH_QuickCast) -> int: ...
    @overload
    def QC_Complex() -> Complex: ...
    @overload
    def QC_Distance(self, other: IGH_QuickCast) -> float: ...
    @overload
    def QC_Hash() -> int: ...
    @overload
    def QC_Int() -> int: ...
    @overload
    def QC_Interval() -> Geometry.Interval: ...
    @overload
    def QC_Matrix() -> Geometry.Matrix: ...
    @overload
    def QC_Num() -> float: ...
    @overload
    def QC_Pt() -> Geometry.Point3d: ...
    @overload
    def QC_Text() -> str: ...
    @overload
    def QC_Vec() -> Geometry.Vector3d: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def ToString() -> str: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_WrapperType(object):
    """Defines basic implementation for a wrapper data type.

    GH_WrapperType[T]
    """
    @property
    def Value(self) -> T: ...
    @Value.setter
    def Value(self, value: System.Void): ...

class GH_AnnotationBaseProxy(GH_GooProxy):
    """    GH_AnnotationBaseProxy[T]
    """
    def __init__(self, Value: T): ...
    @property
    def AnnotationType(self) -> Geometry.AnnotationType: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def PlainText(self) -> str: ...
    @property
    def Style(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_DimensionProxy(GH_AnnotationBaseProxy):
    """    """
    def __init__(self, Value: GH_Dimension): ...
    @overload
    def Construct() -> None: ...
    @property
    def Measure(self) -> str: ...

class GH_HatchProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_Hatch): ...
    @overload
    def Construct() -> None: ...
    @property
    def BasePoint(self) -> Utility.GH_Point3d_Wrapper: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def Pattern(self) -> str: ...
    @property
    def PatternRotation(self) -> float: ...
    @property
    def PatternScale(self) -> float: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_InstanceReferenceProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_InstanceReference): ...
    @overload
    def Construct() -> None: ...
    @property
    def Definition(self) -> str: ...
    @property
    def ObjectID(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_TextDotProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_TextDot): ...
    @overload
    def Construct() -> None: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def Point(self) -> Utility.GH_Point3d_Wrapper: ...
    @property
    def SecondaryText(self) -> str: ...
    @property
    def Text(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_BoxProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_Box): ...
    @overload
    def Construct() -> None: ...
    @property
    def Area(self) -> str: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def Origin(self) -> Utility.GH_Point3d_Wrapper: ...
    @property
    def Volume(self) -> str: ...
    @property
    def XAxis(self) -> Utility.GH_Vector3d_Wrapper: ...
    @property
    def XSize(self) -> Utility.GH_Interval_Wrapper: ...
    @property
    def YAxis(self) -> Utility.GH_Vector3d_Wrapper: ...
    @property
    def YSize(self) -> Utility.GH_Interval_Wrapper: ...
    @property
    def ZAxis(self) -> Utility.GH_Vector3d_Wrapper: ...
    @property
    def ZSize(self) -> Utility.GH_Interval_Wrapper: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_BrepProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_Brep): ...
    @overload
    def Construct() -> None: ...
    @overload
    def FromString(self, in_: str) -> bool: ...
    @property
    def Area(self) -> str: ...
    @property
    def EdgeCount(self) -> int: ...
    @property
    def FaceCount(self) -> int: ...
    @property
    def LoopCount(self) -> int: ...
    @property
    def Manifold(self) -> bool: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def Solid(self) -> bool: ...
    @property
    def VertexCount(self) -> int: ...
    @property
    def Volume(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_CircleProxy(GH_GooProxy):
    """Proxy description of GH_Circle class. This class is used by the Generic Multivalue interfaces.

    """
    def __init__(self, nOwner: GH_Circle): ...
    @overload
    def Construct() -> None: ...
    @property
    def Area(self) -> str: ...
    @property
    def Center(self) -> Utility.GH_Point3d_Wrapper: ...
    @property
    def Circumference(self) -> str: ...
    @property
    def Normal(self) -> Utility.GH_Vector3d_Wrapper: ...
    @property
    def Radius(self) -> str: ...
    @Area.setter
    def Area(self, value: System.Void): ...
    @Circumference.setter
    def Circumference(self, value: System.Void): ...
    @Radius.setter
    def Radius(self, value: System.Void): ...

class GH_CurveProxy(GH_GooProxy):
    """Proxy description of GH_Curve class. This class is used by the Generic Multivalue interfaces.

    """
    def __init__(self, owner: GH_Curve): ...
    @overload
    def Construct() -> None: ...
    @overload
    def FromString(self, in_: str) -> bool: ...
    @property
    def Closed(self) -> bool: ...
    @property
    def Deformable(self) -> bool: ...
    @property
    def Domain(self) -> str: ...
    @property
    def Length(self) -> str: ...
    @property
    def Linear(self) -> bool: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def Periodic(self) -> bool: ...
    @property
    def Planar(self) -> bool: ...
    @property
    def Type(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_ExtrusionProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_Extrusion): ...
    @overload
    def Construct() -> None: ...
    @overload
    def FromString(self, in_: str) -> bool: ...
    @property
    def Area(self) -> str: ...
    @property
    def CapCount(self) -> int: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def ProfileCount(self) -> int: ...
    @property
    def Solid(self) -> bool: ...
    @property
    def Volume(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_GeometryGroupProxy(GH_GooProxy):
    """    """
    def __init__(self, owner: GH_GeometryGroup): ...

class GH_Interval2DProxy(GH_GooProxy):
    """Proxy description of GH_Interval class. This class is used by the Generic Multivalue interfaces.

    """
    def __init__(self, nValue: GH_Interval2D): ...
    @property
    def Area(self) -> float: ...
    @property
    def U0(self) -> float: ...
    @property
    def U1(self) -> float: ...
    @property
    def UIsIncreasing(self) -> bool: ...
    @property
    def UIsNormalized(self) -> bool: ...
    @property
    def ULength(self) -> float: ...
    @property
    def UMiddle(self) -> float: ...
    @property
    def V0(self) -> float: ...
    @property
    def V1(self) -> float: ...
    @property
    def VIsIncreasing(self) -> bool: ...
    @property
    def VIsNormalized(self) -> bool: ...
    @property
    def VLength(self) -> float: ...
    @property
    def VMiddle(self) -> float: ...
    @U0.setter
    def U0(self, value: System.Void): ...
    @U1.setter
    def U1(self, value: System.Void): ...
    @UIsIncreasing.setter
    def UIsIncreasing(self, value: System.Void): ...
    @UIsNormalized.setter
    def UIsNormalized(self, value: System.Void): ...
    @V0.setter
    def V0(self, value: System.Void): ...
    @V1.setter
    def V1(self, value: System.Void): ...
    @VIsIncreasing.setter
    def VIsIncreasing(self, value: System.Void): ...
    @VIsNormalized.setter
    def VIsNormalized(self, value: System.Void): ...

class GH_LineProxy(GH_GooProxy):
    """Proxy description of GH_Line class. This class is used by the Generic Multivalue interfaces.

    """
    def __init__(self, nOwner: GH_Line): ...
    @overload
    def Construct() -> None: ...
    @property
    def Ax(self) -> str: ...
    @property
    def Ay(self) -> str: ...
    @property
    def Az(self) -> str: ...
    @property
    def Bx(self) -> str: ...
    @property
    def By(self) -> str: ...
    @property
    def Bz(self) -> str: ...
    @property
    def Length(self) -> str: ...
    @Ax.setter
    def Ax(self, value: System.Void): ...
    @Ay.setter
    def Ay(self, value: System.Void): ...
    @Az.setter
    def Az(self, value: System.Void): ...
    @Bx.setter
    def Bx(self, value: System.Void): ...
    @By.setter
    def By(self, value: System.Void): ...
    @Bz.setter
    def Bz(self, value: System.Void): ...
    @Length.setter
    def Length(self, value: System.Void): ...

class MaterialType(enum.Enum):
    Shader = 0
    RhinoMaterial = 1
    XmlMaterial = 2
    RmtlMaterial = 3

class GH_Material_Proxy(GH_GooProxy):
    """    """
    def __init__(self, nValue: GH_Material): ...
    @property
    def Diffuse(self) -> Drawing.Color: ...
    @property
    def Emission(self) -> Drawing.Color: ...
    @property
    def IsRDKMaterial(self) -> bool: ...
    @property
    def Shine(self) -> float: ...
    @property
    def Specular(self) -> Drawing.Color: ...
    @property
    def Transparency(self) -> float: ...
    @Diffuse.setter
    def Diffuse(self, value: System.Void): ...
    @Emission.setter
    def Emission(self, value: System.Void): ...
    @Shine.setter
    def Shine(self, value: System.Void): ...
    @Specular.setter
    def Specular(self, value: System.Void): ...
    @Transparency.setter
    def Transparency(self, value: System.Void): ...

class GH_MeshProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_Mesh): ...
    @overload
    def Construct() -> None: ...
    @property
    def Area(self) -> str: ...
    @property
    def EdgeCount(self) -> int: ...
    @property
    def FaceCount(self) -> int: ...
    @property
    def Manifold(self) -> bool: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def Solid(self) -> bool: ...
    @property
    def VertexCount(self) -> int: ...
    @property
    def Volume(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_MeshFaceProxy(GH_GooProxy):
    """Proxy description of GH_MeshFace class. This class is used by the Generic Multivalue interfaces.

    """
    def __init__(self, nValue: GH_MeshFace): ...
    @property
    def A(self) -> int: ...
    @property
    def B(self) -> int: ...
    @property
    def C(self) -> int: ...
    @property
    def D(self) -> int: ...
    @property
    def Kind(self) -> str: ...
    @A.setter
    def A(self, value: System.Void): ...
    @B.setter
    def B(self, value: System.Void): ...
    @C.setter
    def C(self, value: System.Void): ...
    @D.setter
    def D(self, value: System.Void): ...

class RhMesherSettings_Proxy(GH_GooProxy):
    """    """
    def __init__(self, owner: GH_MeshingParameters): ...
    @property
    def AngleTolerance(self) -> float: ...
    @property
    def AspectRatio(self) -> float: ...
    @property
    def GridMaxCount(self) -> int: ...
    @property
    def GridMinCount(self) -> int: ...
    @property
    def IsParsable(self) -> bool: ...
    @property
    def JaggedSeams(self) -> bool: ...
    @property
    def MaxEdgeLength(self) -> float: ...
    @property
    def MinEdgeLength(self) -> float: ...
    @property
    def Refine(self) -> bool: ...
    @property
    def SimplePlanes(self) -> bool: ...
    @property
    def Tolerance(self) -> float: ...
    @AngleTolerance.setter
    def AngleTolerance(self, value: System.Void): ...
    @AspectRatio.setter
    def AspectRatio(self, value: System.Void): ...
    @GridMaxCount.setter
    def GridMaxCount(self, value: System.Void): ...
    @GridMinCount.setter
    def GridMinCount(self, value: System.Void): ...
    @JaggedSeams.setter
    def JaggedSeams(self, value: System.Void): ...
    @MaxEdgeLength.setter
    def MaxEdgeLength(self, value: System.Void): ...
    @MinEdgeLength.setter
    def MinEdgeLength(self, value: System.Void): ...
    @Refine.setter
    def Refine(self, value: System.Void): ...
    @SimplePlanes.setter
    def SimplePlanes(self, value: System.Void): ...
    @Tolerance.setter
    def Tolerance(self, value: System.Void): ...

class GH_PlaneProxy(GH_GooProxy):
    """Proxy description of GH_Plane class. This class is used by the Generic Multivalue interfaces.

    """
    def __init__(self, nOwner: GH_Plane): ...
    @overload
    def Construct() -> None: ...
    @property
    def Origin(self) -> Utility.GH_Point3d_Wrapper: ...
    @property
    def XAxis(self) -> Utility.GH_Vector3d_Wrapper: ...
    @property
    def YAxis(self) -> Utility.GH_Vector3d_Wrapper: ...
    @property
    def ZAxis(self) -> Utility.GH_Vector3d_Wrapper: ...

class GH_PointProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_Point): ...
    @overload
    def Construct() -> None: ...
    @property
    def Distance(self) -> str: ...
    @property
    def Referenced(self) -> bool: ...
    @property
    def ReferenceID(self) -> str: ...
    @property
    def ReferenceType(self) -> str: ...
    @property
    def TParameterRatio(self) -> str: ...
    @property
    def UVParameterRatio(self) -> Utility.GH_PointRefUV_Wrapper: ...
    @property
    def X(self) -> str: ...
    @property
    def Y(self) -> str: ...
    @property
    def Z(self) -> str: ...
    @Distance.setter
    def Distance(self, value: System.Void): ...
    @TParameterRatio.setter
    def TParameterRatio(self, value: System.Void): ...
    @X.setter
    def X(self, value: System.Void): ...
    @Y.setter
    def Y(self, value: System.Void): ...
    @Z.setter
    def Z(self, value: System.Void): ...

class PointCloudProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_PointCloud): ...
    @overload
    def Construct() -> None: ...
    @property
    def ContainsColors(self) -> bool: ...
    @property
    def ContainsHiddenFlags(self) -> bool: ...
    @property
    def ContainsNormals(self) -> bool: ...
    @property
    def ContainsValues(self) -> bool: ...
    @property
    def HiddenPointCount(self) -> int: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def PointCount(self) -> int: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_RectangleProxy(GH_GooProxy):
    """Proxy description of GH_Rectangle class. This class is used by the Generic Multivalue interfaces.

    """
    def __init__(self, nOwner: GH_Rectangle): ...
    @overload
    def Construct() -> None: ...
    @property
    def Area(self) -> str: ...
    @property
    def Circumference(self) -> str: ...
    @property
    def Height(self) -> Utility.GH_Interval_Wrapper: ...
    @property
    def Origin(self) -> Utility.GH_Point3d_Wrapper: ...
    @property
    def Width(self) -> Utility.GH_Interval_Wrapper: ...
    @property
    def XAxis(self) -> Utility.GH_Vector3d_Wrapper: ...
    @property
    def YAxis(self) -> Utility.GH_Vector3d_Wrapper: ...
    @property
    def ZAxis(self) -> Utility.GH_Vector3d_Wrapper: ...

class GH_SubDProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_SubD): ...
    @overload
    def Construct() -> None: ...
    @property
    def Area(self) -> str: ...
    @property
    def EdgeCount(self) -> int: ...
    @property
    def FaceCount(self) -> int: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def Solid(self) -> bool: ...
    @property
    def VertexCount(self) -> int: ...
    @property
    def Volume(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_SurfaceProxy(GH_GooProxy):
    """    """
    def __init__(self, Value: GH_Surface): ...
    @overload
    def Construct() -> None: ...
    @overload
    def FromString(self, in_: str) -> bool: ...
    @property
    def Area(self) -> str: ...
    @property
    def Closed(self) -> bool: ...
    @property
    def Deformable(self) -> bool: ...
    @property
    def EdgeCount(self) -> int: ...
    @property
    def LoopCount(self) -> int: ...
    @property
    def ObjectID(self) -> str: ...
    @property
    def Periodic(self) -> bool: ...
    @property
    def Planar(self) -> bool: ...
    @property
    def Singular(self) -> bool: ...
    @property
    def Solid(self) -> bool: ...
    @property
    def Trimmed(self) -> bool: ...
    @property
    def VertexCount(self) -> int: ...
    @property
    def Volume(self) -> str: ...
    @ObjectID.setter
    def ObjectID(self, value: System.Void): ...

class GH_VectorProxy(GH_GooProxy):
    """Proxy description of GH_Vector class. This class is used by the Generic Multivalue interfaces.

    """
    def __init__(self, nOwner: GH_Vector): ...
    @overload
    def Construct() -> None: ...
    @overload
    def FromString(self, in_: str) -> bool: ...
    @property
    def IsParsable(self) -> bool: ...
    @property
    def Length(self) -> str: ...
    @property
    def X(self) -> str: ...
    @property
    def Y(self) -> str: ...
    @property
    def Z(self) -> str: ...
    @Length.setter
    def Length(self, value: System.Void): ...
    @X.setter
    def X(self, value: System.Void): ...
    @Y.setter
    def Y(self, value: System.Void): ...
    @Z.setter
    def Z(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

# endregion
