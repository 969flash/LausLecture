"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["IGH_IconObjectGrip", "IGH_IconObject", "GH_IconObject", "GH_IconObject_Rectangle"]
# endregion

# region: Imports
from GH_IO import Serialization
from System import Drawing
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class IGH_IconObjectGrip:
    """Represents a single GH_IconObject grip.

    """
    @property
    def Index(self) -> int: ...
    @property
    def Owner(self) -> IGH_IconObject: ...
    @property
    def Position(self) -> Drawing.PointF: ...
    @property
    def Selected(self) -> bool: ...
    @property
    def Tag(self) -> object: ...
    @overload
    def RenderGrip(self, G: Drawing.Graphics) -> None: ...
    @Position.setter
    def Position(self, value: System.Void): ...
    @Selected.setter
    def Selected(self, value: System.Void): ...
    @Tag.setter
    def Tag(self, value: System.Void): ...

class IGH_IconObject:
    """Represents a procedural object inside an Icon image.

    """
    @overload
    def Contains(self, pt: Drawing.PointF) -> bool: ...
    @property
    def Image(self) -> Drawing.Bitmap: ...
    @property
    def ObjectID(self) -> System.Guid: ...
    @property
    def Pivot(self) -> Drawing.Point: ...
    @property
    def Size(self) -> Drawing.Size: ...
    @overload
    def Grips() -> Generic.List: ...
    @overload
    def RenderObject(self, G: Drawing.Graphics) -> None: ...
    @overload
    def Resize(self, newSize: Drawing.Size) -> None: ...
    @Pivot.setter
    def Pivot(self, value: System.Void): ...
    @Size.setter
    def Size(self, value: System.Void): ...

class GH_IconObject(object):
    """Abstract implementation of IGH_IconObject.

    """
    @overload
    def Contains(self, pt: Drawing.PointF) -> bool: ...
    @property
    def Image(self) -> Drawing.Bitmap: ...
    @property
    def ObjectID(self) -> System.Guid: ...
    @property
    def Pivot(self) -> Drawing.Point: ...
    @property
    def Size(self) -> Drawing.Size: ...
    @overload
    def Grips() -> Generic.List: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RenderObject(self, G: Drawing.Graphics) -> None: ...
    @overload
    def Resize(self, newSize: Drawing.Size) -> None: ...
    @Pivot.setter
    def Pivot(self, value: System.Void): ...
    @Size.setter
    def Size(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_IconObject_Rectangle(GH_IconObject):
    """    """
    def __init__(self): ...
    @overload
    def Contains(self, pt: Drawing.PointF) -> bool: ...
    @property
    def ObjectID(self) -> System.Guid: ...
    @property
    def Rectangle(self) -> Drawing.Rectangle: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def RenderObject(self, G: Drawing.Graphics) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

# endregion
