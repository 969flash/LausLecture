"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_BackgroundStyle", "GH_BackgroundSettings", "GH_PageSettings", "GH_WireSettings", "GH_ObjectSettings", "GH_PaletteSettings", "GH_Theme"]
# endregion

# region: Imports
from GH_IO import Serialization
from Grasshopper.GUI import Canvas
from System import Drawing
from System.Drawing import Drawing2D
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_BackgroundStyle(enum.Enum):
    Solid = 0
    Hatch = 1
    GradientLeftRight = 10
    GradientTopBottom = 11

class GH_BackgroundSettings(object):
    """    """
    @property
    def Colour1(self) -> Drawing.Color: ...
    @property
    def Colour2(self) -> Drawing.Color: ...
    @property
    def Hatch(self) -> Drawing2D.HatchStyle: ...
    @property
    def Style(self) -> GH_BackgroundStyle: ...
    @Colour1.setter
    def Colour1(self, value: System.Void): ...
    @Colour2.setter
    def Colour2(self, value: System.Void): ...
    @Hatch.setter
    def Hatch(self, value: System.Void): ...
    @Style.setter
    def Style(self, value: System.Void): ...

class GH_PageSettings(object):
    """    """
    @property
    def DrawGrid(self) -> bool: ...
    @property
    def DrawPage(self) -> bool: ...
    @property
    def DrawShadow(self) -> bool: ...
    @property
    def EdgeColour(self) -> Drawing.Color: ...
    @property
    def FillColour(self) -> Drawing.Color: ...
    @property
    def GridColour(self) -> Drawing.Color: ...
    @property
    def GridHeight(self) -> int: ...
    @property
    def GridPattern(self) -> System.System.Array[System.Single]: ...
    @property
    def GridWidth(self) -> int: ...
    @property
    def ShadowColour(self) -> Drawing.Color: ...
    @property
    def ShadowSize(self) -> int: ...
    @DrawGrid.setter
    def DrawGrid(self, value: System.Void): ...
    @DrawPage.setter
    def DrawPage(self, value: System.Void): ...
    @DrawShadow.setter
    def DrawShadow(self, value: System.Void): ...
    @EdgeColour.setter
    def EdgeColour(self, value: System.Void): ...
    @FillColour.setter
    def FillColour(self, value: System.Void): ...
    @GridColour.setter
    def GridColour(self, value: System.Void): ...
    @GridHeight.setter
    def GridHeight(self, value: System.Void): ...
    @GridPattern.setter
    def GridPattern(self, value: System.Void): ...
    @GridWidth.setter
    def GridWidth(self, value: System.Void): ...
    @ShadowColour.setter
    def ShadowColour(self, value: System.Void): ...
    @ShadowSize.setter
    def ShadowSize(self, value: System.Void): ...

class GH_WireSettings(object):
    """    """
    @property
    def DefaultColour(self) -> Drawing.Color: ...
    @property
    def EmptyColour(self) -> Drawing.Color: ...
    @property
    def SelectedColour0(self) -> Drawing.Color: ...
    @property
    def SelectedColour1(self) -> Drawing.Color: ...
    @DefaultColour.setter
    def DefaultColour(self, value: System.Void): ...
    @EmptyColour.setter
    def EmptyColour(self, value: System.Void): ...
    @SelectedColour0.setter
    def SelectedColour0(self, value: System.Void): ...
    @SelectedColour1.setter
    def SelectedColour1(self, value: System.Void): ...

class GH_ObjectSettings(object):
    """    """
    @property
    def GroupColour(self) -> Drawing.Color: ...
    @property
    def PanelColour(self) -> Drawing.Color: ...
    @property
    def ZuiEdgeColour(self) -> Drawing.Color: ...
    @property
    def ZuiFillColour(self) -> Drawing.Color: ...
    @GroupColour.setter
    def GroupColour(self, value: System.Void): ...
    @PanelColour.setter
    def PanelColour(self, value: System.Void): ...
    @ZuiEdgeColour.setter
    def ZuiEdgeColour(self, value: System.Void): ...
    @ZuiFillColour.setter
    def ZuiFillColour(self, value: System.Void): ...

class GH_PaletteSettings(object):
    """    """
    @property
    def ErrorSelected(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def ErrorStandard(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def HiddenSelected(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def HiddenStandard(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def LockedSelected(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def LockedStandard(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def NormalSelected(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def NormalStandard(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def WarningSelected(self) -> Canvas.GH_PaletteStyle: ...
    @property
    def WarningStandard(self) -> Canvas.GH_PaletteStyle: ...
    @ErrorSelected.setter
    def ErrorSelected(self, value: System.Void): ...
    @ErrorStandard.setter
    def ErrorStandard(self, value: System.Void): ...
    @HiddenSelected.setter
    def HiddenSelected(self, value: System.Void): ...
    @HiddenStandard.setter
    def HiddenStandard(self, value: System.Void): ...
    @LockedSelected.setter
    def LockedSelected(self, value: System.Void): ...
    @LockedStandard.setter
    def LockedStandard(self, value: System.Void): ...
    @NormalSelected.setter
    def NormalSelected(self, value: System.Void): ...
    @NormalStandard.setter
    def NormalStandard(self, value: System.Void): ...
    @WarningSelected.setter
    def WarningSelected(self, value: System.Void): ...
    @WarningStandard.setter
    def WarningStandard(self, value: System.Void): ...

class GH_Theme(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: GH_Theme): ...
    @property
    def BackGround(self) -> GH_BackgroundSettings: ...
    @property
    def DefaultTheme(self) -> GH_Theme: ...
    @property
    def Objects(self) -> GH_ObjectSettings: ...
    @property
    def Page(self) -> GH_PageSettings: ...
    @property
    def Palettes(self) -> GH_PaletteSettings: ...
    @property
    def Wires(self) -> GH_WireSettings: ...
    @overload
    def LoadTheme() -> None: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def SaveTheme() -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

# endregion
