"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_Interpolation", "GH_Stack", "GH_Motion", "GH_StackEventDelegate"]
# endregion

# region: Imports
from System import Drawing
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import enum
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_Interpolation(enum.Enum):
    linear = 1
    cubic = 2

class GH_Stack(object):
    """Represents a manager for animating asynchronous box movements. This is a useful feature for GUIs that want to mimic physical behaviour or continuous UI changes.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, update_interval: int): ...
    @overload
    def __init__(self, update_interval: int, animation_length: int): ...
    @overload
    def __init__(self, update_interval: int, animation_length: int, animation_interpolation: GH_Interpolation): ...
    @overload
    def AddElement(self, rec: Drawing.Rectangle) -> None: ...
    @overload
    def AddElement(self, rec_0: Drawing.Rectangle, rec_1: Drawing.Rectangle) -> None: ...
    @overload
    def AddElement(self, rec_0: Drawing.Rectangle, rec_1: Drawing.Rectangle, duration_override: int) -> None: ...
    @overload
    def Clear() -> None: ...
    @overload
    def Destroy() -> None: ...
    @property
    def Count(self) -> int: ...
    @property
    def Duration(self) -> int: ...
    @property
    def Element_Final(self) -> Drawing.Rectangle: ...
    @property
    def Element_Initial(self) -> Drawing.Rectangle: ...
    @property
    def Element_Intermediate(self) -> Drawing.Rectangle: ...
    @property
    def InMotion(self) -> bool: ...
    @property
    def InMotion(self) -> bool: ...
    @property
    def Interpolation(self) -> GH_Interpolation: ...
    @property
    def UpdateInterval(self) -> int: ...
    @overload
    def InsertElement(self, index: int, rec: Drawing.Rectangle) -> None: ...
    @overload
    def InsertElement(self, index: int, rec_0: Drawing.Rectangle, rec_1: Drawing.Rectangle) -> None: ...
    @overload
    def InsertElement(self, index: int, rec_0: Drawing.Rectangle, rec_1: Drawing.Rectangle, duration_override: int) -> None: ...
    @overload
    def RemoveElement(self, index: int) -> None: ...
    @overload
    def ResizeContainer(self, region: Drawing.Rectangle, fit_horizontal: bool, fit_vertical: bool) -> None: ...
    @Duration.setter
    def Duration(self, value: System.Void): ...
    @Interpolation.setter
    def Interpolation(self, value: System.Void): ...
    @UpdateInterval.setter
    def UpdateInterval(self, value: System.Void): ...
    @overload
    def SetNewTarget(self, index: int, element: Drawing.Rectangle) -> None: ...
    @overload
    def SetNewTarget(self, index: int, element: Drawing.Rectangle, bAnimate: bool) -> None: ...
    @overload
    def SetOwner(self, ui_thread_owner: Forms.Control, ui_thread_update: GH_StackEventDelegate) -> None: ...
    @overload
    def SetOwner(self, ui_thread_owner: Forms.Control, ui_thread_update: GH_StackEventDelegate, ui_thread_complete: GH_StackEventDelegate) -> None: ...

class GH_Motion(object):
    """Provides functionality for individual rectangle animation.

    """
    @overload
    def __init__(self, rec_0: Drawing.Rectangle, rec_1: Drawing.Rectangle, duration: int): ...
    @overload
    def __init__(self, rec_0: Drawing.Rectangle, rec_1: Drawing.Rectangle, time_0: System.Int64, time_1: System.Int64): ...
    @property
    def CurrentBox(self) -> Drawing.Rectangle: ...
    @property
    def FinalBox(self) -> Drawing.Rectangle: ...
    @property
    def InitialBox(self) -> Drawing.Rectangle: ...
    @property
    def InMotion(self) -> bool: ...
    @property
    def Interpolation(self) -> GH_Interpolation: ...
    @property
    def Parameter(self) -> float: ...
    @property
    def t0(self) -> System.Int64: ...
    @property
    def t1(self) -> System.Int64: ...
    @overload
    def ResizeContainer(self, region: Drawing.Rectangle, fit_horizontal: bool, fit_vertical: bool) -> None: ...
    @Interpolation.setter
    def Interpolation(self, value: System.Void): ...

class GH_StackEventDelegate(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, sender: GH_Stack, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, sender: GH_Stack) -> None: ...

# endregion
