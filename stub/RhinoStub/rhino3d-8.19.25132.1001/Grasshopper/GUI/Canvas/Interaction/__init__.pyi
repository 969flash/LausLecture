"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["IGH_MouseInteraction", "GH_AbstractInteraction", "GH_WindowSelectInteraction", "GH_DragInteraction", "GH_SplitInteraction", "GH_DumpInteraction", "GH_PanInteraction", "GH_ZoomInteraction", "GH_CycleInteraction", "GH_WireInteraction", "GH_RewireInteraction", "GH_RadialMenuInteraction", "GH_SketchInteraction"]
# endregion

# region: Imports
from Grasshopper import GUI
from Grasshopper import Kernel
from Grasshopper.GUI import Canvas
from System import Drawing
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class IGH_MouseInteraction:
    """    """
    @overload
    def Destroy() -> None: ...
    @property
    def CanvasPointDown(self) -> Drawing.PointF: ...
    @property
    def ControlPointDown(self) -> Drawing.Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def Owner(self) -> Canvas.GH_Canvas: ...

class GH_AbstractInteraction(object):
    """    """
    @overload
    def Destroy() -> None: ...
    @property
    def Canvas(self) -> Canvas.GH_Canvas: ...
    @property
    def CanvasPointDown(self) -> Drawing.PointF: ...
    @property
    def ControlPointDown(self) -> Drawing.Point: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def IsActive(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: Drawing.PointF) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, canvasPoint: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_WindowSelectInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, canvas: Canvas.GH_Canvas, mEvent: GUI.GH_CanvasMouseEvent): ...
    @overload
    def Destroy() -> None: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_DragInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, canvas: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent): ...
    @overload
    def AddAttribute(self, attribute: Kernel.IGH_Attributes) -> None: ...
    @overload
    def AddSnapAttributes(self, attribute: Kernel.IGH_Attributes) -> None: ...
    @overload
    def Destroy() -> None: ...
    @property
    def AttributeCount(self) -> int: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_SplitInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, canvas: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent): ...
    @overload
    def AddAttribute(self, Attribute: Kernel.IGH_Attributes) -> None: ...
    @overload
    def Destroy() -> None: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_DumpInteraction(GH_AbstractInteraction):
    """    """
    @overload
    def __init__(self, parent: Canvas.GH_Canvas): ...
    @overload
    def __init__(self, parent: Canvas.GH_Canvas, objectId: System.Guid): ...
    @overload
    def AppendProxy(self, proxy: Kernel.IGH_ObjectProxy) -> None: ...
    @overload
    def Destroy() -> None: ...
    @property
    def IsAggregating(self) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_PanInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, iParent: Canvas.GH_Canvas, mEvent: GUI.GH_CanvasMouseEvent): ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_ZoomInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, iParent: Canvas.GH_Canvas, mEvent: GUI.GH_CanvasMouseEvent): ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_CycleInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, parentCanvas: Canvas.GH_Canvas): ...
    @overload
    def Destroy() -> None: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDoubleClick(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_WireInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, iParent: Canvas.GH_Canvas, mEvent: GUI.GH_CanvasMouseEvent, Source: Kernel.IGH_Param): ...
    @overload
    def Destroy() -> None: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_RewireInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, iParent: Canvas.GH_Canvas, mEvent: GUI.GH_CanvasMouseEvent, Source: Kernel.IGH_Param): ...
    @overload
    def Destroy() -> None: ...
    @property
    def IsValid(self) -> bool: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToKeyUp(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

class GH_RadialMenuInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, canvas: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent): ...
    @overload
    def Destroy() -> None: ...
    @property
    def DeactivateOnFocusLoss(self) -> bool: ...
    @property
    def TooltipEnabled(self) -> bool: ...
    @overload
    def IsTooltipRegion(self, canvas_coordinate: Drawing.PointF) -> bool: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def SetupTooltip(self, point: Drawing.PointF, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...

class GH_SketchInteraction(GH_AbstractInteraction):
    """    """
    def __init__(self, iParent: Canvas.GH_Canvas): ...
    @overload
    def Destroy() -> None: ...
    @overload
    def RespondToKeyDown(self, sender: Canvas.GH_Canvas, e: Forms.KeyEventArgs) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseDown(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseMove(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...
    @overload
    def RespondToMouseUp(self, sender: Canvas.GH_Canvas, e: GUI.GH_CanvasMouseEvent) -> Canvas.GH_ObjectResponse: ...

# endregion
