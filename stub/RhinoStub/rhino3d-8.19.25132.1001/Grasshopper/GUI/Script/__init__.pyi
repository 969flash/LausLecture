"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_ScriptEditor", "GH_ScriptEditorButton", "GH_FontPickButton", "GH_BeforeAfterSolveInstanceSnippetButton", "GH_PreviewSnippetButton", "GH_ShrinkEditorButton", "GH_ScriptLanguage", "GH_CustomReference", "GH_CodeBlock", "GH_CodeBlocks", "GH_AssemblyBrowser", "GH_HistoricAssembly", "SourceCodeChangedEventHandler", "CompileCodeRequestEventHandler"]
# endregion

# region: Imports
from Grasshopper import GUI
from Grasshopper import Kernel
from System import Drawing
from System import Reflection
from System.Collections import Generic
from System.Collections import ObjectModel
from System.Runtime import CompilerServices
from System.Threading import Tasks
from System.Windows import Forms
from typing import overload
import enum
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_ScriptEditor(object):
    """    """
    @overload
    def __init__(self, language: GH_ScriptLanguage): ...
    @overload
    def __init__(self, language: GH_ScriptLanguage, owner: Kernel.IGH_DocumentObject): ...
    @property
    def InstanceTable(self) -> Generic.List: ...
    @property
    def CacheLimit(self) -> int: ...
    @overload
    def AddButton(self, button: GH_ScriptEditorButton) -> None: ...
    @overload
    def AppendSourceCode(self, code: Generic.List) -> None: ...
    @overload
    def CacheCurrentScriptAsync() -> Tasks.Task: ...
    @overload
    def CenterFormOnCursor(self, limitToScreen: bool) -> None: ...
    @overload
    def Close() -> None: ...
    @overload
    def CodeEditor_TextChanged() -> None: ...
    @overload
    def CompileTimerTick(self, sender: object, args: System.EventArgs) -> None: ...
    @overload
    @staticmethod
    def DefaultAssemblyLocations() -> Generic.List: ...
    @overload
    @staticmethod
    def FindScriptEditor(owner: Kernel.IGH_DocumentObject) -> GH_ScriptEditor: ...
    @overload
    def FocusOnSource() -> None: ...
    @property
    def AutoSolveEnabled(self) -> bool: ...
    @property
    def Cache_AppDataDirectory(self) -> str: ...
    @property
    def CurrentPosition(self) -> Drawing.Point: ...
    @property
    def EditorFont(self) -> Drawing.Font: ...
    @property
    def Language(self) -> GH_ScriptLanguage: ...
    @property
    def Owner(self) -> object: ...
    @property
    def Visible(self) -> bool: ...
    @overload
    @staticmethod
    def GetAllCacheFiles() -> Generic.List: ...
    @overload
    def GetSourceCodeAsync() -> Tasks.Task: ...
    @overload
    def Initialize(self, language: GH_ScriptLanguage, owner: Kernel.IGH_DocumentObject) -> None: ...
    @overload
    def RegisterAssemblies(self, customReferences: Generic.List) -> None: ...
    @overload
    def RestoreScriptCache(self, path: str) -> None: ...
    @AutoSolveEnabled.setter
    def AutoSolveEnabled(self, value: System.Void): ...
    @EditorFont.setter
    def EditorFont(self, value: System.Void): ...
    @Owner.setter
    def Owner(self, value: System.Void): ...
    @Visible.setter
    def Visible(self, value: System.Void): ...
    @overload
    def SetCurrentPosition(self, position: Drawing.Point) -> None: ...
    @overload
    def SetSourceCode(self, code: GH_CodeBlocks) -> None: ...
    @overload
    def Show() -> None: ...
    @overload
    def Show(self, documentEditor: GUI.GH_DocumentEditor) -> None: ...
    @property
    def SourceCodeChanged(self): ...
    @property
    def CompileCodeRequest(self): ...
    @property
    def Closed(self): ...
    @property
    def HandleDestroyed(self): ...

class GH_ScriptEditorButton(object):
    """Inherit from this class if you want to add custom buttons to a GH_ScriptEditor toolbar.

    """
    @overload
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    @overload
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Bounds(self) -> Drawing.Rectangle: ...
    @property
    def Highlight(self) -> bool: ...
    @property
    def HighlightOnHover(self) -> bool: ...
    @property
    def Icon(self) -> Drawing.Bitmap: ...
    @overload
    def PopulateTooltip(self, sender: object, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: Forms.MouseEventArgs) -> None: ...
    @Bounds.setter
    def Bounds(self, value: System.Void): ...

class GH_FontPickButton(GH_ScriptEditorButton):
    """Peovides standard font picker button.

    """
    def __init__(self): ...
    @overload
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    @overload
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Icon(self) -> Drawing.Bitmap: ...
    @overload
    def PopulateTooltip(self, sender: object, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: Forms.MouseEventArgs) -> None: ...

class GH_BeforeAfterSolveInstanceSnippetButton(GH_ScriptEditorButton):
    """Provides standard implementation of VB and C# preview participation snippet insert button.

    """
    def __init__(self): ...
    @overload
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    @overload
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Icon(self) -> Drawing.Bitmap: ...
    @overload
    def PopulateTooltip(self, sender: object, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: Forms.MouseEventArgs) -> None: ...

class GH_PreviewSnippetButton(GH_ScriptEditorButton):
    """Provides standard implementation of VB and C# preview participation snippet insert button.

    """
    def __init__(self): ...
    @overload
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    @overload
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Icon(self) -> Drawing.Bitmap: ...
    @overload
    def PopulateTooltip(self, sender: object, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: Forms.MouseEventArgs) -> None: ...

class GH_ShrinkEditorButton(GH_ScriptEditorButton):
    """Provides standard implementation of script editor shrink button.

    """
    def __init__(self): ...
    @overload
    def FormHandleCreated(self, window: GH_ScriptEditor) -> None: ...
    @overload
    def FormHandleDestroyed(self, window: GH_ScriptEditor) -> None: ...
    @property
    def Frame(self) -> Drawing.Rectangle: ...
    @property
    def Highlight(self) -> bool: ...
    @property
    def HighlightOnHover(self) -> bool: ...
    @property
    def Icon(self) -> Drawing.Bitmap: ...
    @property
    def Shrink(self) -> bool: ...
    @property
    def Shrunk(self) -> bool: ...
    @overload
    def PopulateTooltip(self, sender: object, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def RespondToMouseDown(self, window: GH_ScriptEditor, e: Forms.MouseEventArgs) -> None: ...
    @Frame.setter
    def Frame(self, value: System.Void): ...
    @Shrink.setter
    def Shrink(self, value: System.Void): ...
    @Shrunk.setter
    def Shrunk(self, value: System.Void): ...

class GH_ScriptLanguage(enum.Enum):
    None_ = 0
    VB = 1
    CS = 2

class GH_CustomReference(object):
    """Represents a custom (user) assembly reference.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, path: str, assembly: Reflection.Assembly): ...
    @property
    def Assembly(self) -> Reflection.Assembly: ...
    @property
    def Path(self) -> str: ...
    @Assembly.setter
    def Assembly(self, value: System.Void): ...
    @Path.setter
    def Path(self, value: System.Void): ...

class GH_CodeBlock(object):
    """Represents a collection of lines of code in the GH_ScriptEditor window.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, line: str, readonly: bool): ...
    @overload
    def __init__(self, lines: Generic.IEnumerable, readonly: bool): ...
    @overload
    def AddLine(self, line: str) -> None: ...
    @overload
    def AddLines(self, lines: Generic.IEnumerable) -> None: ...
    @property
    def Lines(self) -> Generic.IEnumerable: ...
    @property
    def ReadOnly(self) -> bool: ...
    @ReadOnly.setter
    def ReadOnly(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...

class GH_CodeBlocks(Generic.List):
    """Represents a list of source code blocks in a GH_ScriptEditor window.

    """
    def __init__(self): ...
    @overload
    def Add(self, line: str, readonly: bool) -> None: ...
    @overload
    def Add(self, lines: Generic.IEnumerable, readonly: bool) -> None: ...
    @overload
    def GetAllLines() -> (System.System.Array[str], System.System.Array[bool]): ...
    @overload
    def GetMutableCodeBlock(self, index: int) -> GH_CodeBlock: ...
    @overload
    def MergeConsecutiveBlocks() -> int: ...
    @overload
    @staticmethod
    def StringSplit(delim: str, stream: str) -> Generic.List: ...

class GH_AssemblyBrowser(Forms.Form):
    """    """
    def __init__(self): ...
    @overload
    def AddAssemblies(self, paths: Generic.IEnumerable) -> None: ...
    @overload
    def AddAssembly(self, path: str) -> None: ...
    @overload
    def AssignExtraAssemblies(self, tabName: str, assemblies: Generic.IEnumerable) -> None: ...
    @property
    def Assemblies(self) -> ObjectModel.ReadOnlyCollection: ...
    @property
    def AssembliesChanged(self) -> bool: ...
    @overload
    def UpdateUI() -> None: ...
    @property
    def AutoSizeChanged(self): ...
    @property
    def AutoValidateChanged(self): ...
    @property
    def HelpButtonClicked(self): ...
    @property
    def MaximizedBoundsChanged(self): ...
    @property
    def MaximumSizeChanged(self): ...
    @property
    def MarginChanged(self): ...
    @property
    def MinimumSizeChanged(self): ...
    @property
    def TabIndexChanged(self): ...
    @property
    def TabStopChanged(self): ...
    @property
    def Activated(self): ...
    @property
    def Closing(self): ...
    @property
    def Closed(self): ...
    @property
    def Deactivate(self): ...
    @property
    def FormClosing(self): ...
    @property
    def FormClosed(self): ...
    @property
    def Load(self): ...
    @property
    def MdiChildActivate(self): ...
    @property
    def MenuComplete(self): ...
    @property
    def MenuStart(self): ...
    @property
    def InputLanguageChanged(self): ...
    @property
    def InputLanguageChanging(self): ...
    @property
    def RightToLeftLayoutChanged(self): ...
    @property
    def Shown(self): ...
    @property
    def DpiChanged(self): ...
    @property
    def ResizeBegin(self): ...
    @property
    def ResizeEnd(self): ...
    @property
    def Scroll(self): ...
    @property
    def BackColorChanged(self): ...
    @property
    def BackgroundImageChanged(self): ...
    @property
    def BackgroundImageLayoutChanged(self): ...
    @property
    def BindingContextChanged(self): ...
    @property
    def CausesValidationChanged(self): ...
    @property
    def ClientSizeChanged(self): ...
    @property
    def ContextMenuStripChanged(self): ...
    @property
    def CursorChanged(self): ...
    @property
    def DockChanged(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def FontChanged(self): ...
    @property
    def ForeColorChanged(self): ...
    @property
    def LocationChanged(self): ...
    @property
    def RegionChanged(self): ...
    @property
    def RightToLeftChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def TextChanged(self): ...
    @property
    def VisibleChanged(self): ...
    @property
    def Click(self): ...
    @property
    def ControlAdded(self): ...
    @property
    def ControlRemoved(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragLeave(self): ...
    @property
    def GiveFeedback(self): ...
    @property
    def HandleCreated(self): ...
    @property
    def HandleDestroyed(self): ...
    @property
    def HelpRequested(self): ...
    @property
    def Invalidated(self): ...
    @property
    def PaddingChanged(self): ...
    @property
    def Paint(self): ...
    @property
    def QueryContinueDrag(self): ...
    @property
    def QueryAccessibilityHelp(self): ...
    @property
    def DoubleClick(self): ...
    @property
    def Enter(self): ...
    @property
    def GotFocus(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyPress(self): ...
    @property
    def KeyUp(self): ...
    @property
    def Layout(self): ...
    @property
    def Leave(self): ...
    @property
    def LostFocus(self): ...
    @property
    def MouseClick(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseCaptureChanged(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def DpiChangedBeforeParent(self): ...
    @property
    def DpiChangedAfterParent(self): ...
    @property
    def MouseHover(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def Move(self): ...
    @property
    def PreviewKeyDown(self): ...
    @property
    def Resize(self): ...
    @property
    def ChangeUICues(self): ...
    @property
    def StyleChanged(self): ...
    @property
    def SystemColorsChanged(self): ...
    @property
    def Validating(self): ...
    @property
    def Validated(self): ...
    @property
    def ParentChanged(self): ...
    @property
    def ImeModeChanged(self): ...
    @property
    def Disposed(self): ...

class GH_HistoricAssembly(object):
    """Represents a history record for an assembly.

    """
    def __init__(self): ...
    @property
    def Path(self) -> str: ...
    @property
    def Date(self) -> System.DateTime: ...
    @overload
    def CompareTo(self, other: GH_HistoricAssembly) -> int: ...

class SourceCodeChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, sender: GH_ScriptEditor, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, sender: GH_ScriptEditor) -> None: ...

class CompileCodeRequestEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, sender: GH_ScriptEditor, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, sender: GH_ScriptEditor) -> None: ...

# endregion
