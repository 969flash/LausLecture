"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_Ribbon", "GH_RibbonContentBase", "GH_RibbonDropdown", "GH_RibbonMouseEvent", "GH_RibbonMouseEventArgs", "IGH_RibbonInteractiveObject", "GH_RibbonItem", "GH_LayoutTab", "GH_LayoutPanel", "GH_LayoutItem", "GH_Layout", "GH_LayoutMenuItem", "GH_RibbonPainter", "GH_RibbonPanel", "GH_TabDisplay", "GH_RibbonTab"]
# endregion

# region: Imports
from GH_IO import Serialization
from Grasshopper import GUI
from Grasshopper import Kernel
from System import Drawing
from System.Collections import Generic
from System.Drawing import Drawing2D
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import enum
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_Ribbon(Forms.UserControl):
    """    """
    def __init__(self): ...
    @overload
    def AmIFocused(self, item: GH_RibbonItem) -> bool: ...
    @overload
    def CreateRibbonLayoutMenu() -> Forms.ToolStripDropDown: ...
    @overload
    def FindAndDisplayProxy(self, id_: System.Guid) -> (bool, Drawing.Rectangle, Drawing.Rectangle, GH_RibbonDropdown): ...
    @property
    def ActiveObject(self) -> IGH_RibbonInteractiveObject: ...
    @property
    def ActiveTab(self) -> GH_RibbonTab: ...
    @property
    def ActiveTabIndex(self) -> int: ...
    @property
    def ActiveTabName(self) -> str: ...
    @property
    def IsActiveObject(self) -> bool: ...
    @property
    def Tabs(self) -> Generic.List: ...
    @property
    def TooltipDelay(self) -> int: ...
    @overload
    def LayoutRibbon() -> None: ...
    @overload
    def NearestHeight(self, initialHeight: int) -> int: ...
    @overload
    def NearestWidth(self, w: int) -> int: ...
    @overload
    def PopulateRibbon() -> None: ...
    @overload
    def RenderFocusRectangle(self, g: Drawing.Graphics) -> None: ...
    @ActiveObject.setter
    def ActiveObject(self, value: System.Void): ...
    @ActiveTab.setter
    def ActiveTab(self, value: System.Void): ...
    @ActiveTabIndex.setter
    def ActiveTabIndex(self, value: System.Void): ...
    @ActiveTabName.setter
    def ActiveTabName(self, value: System.Void): ...
    @TooltipDelay.setter
    def TooltipDelay(self, value: System.Void): ...
    @property
    def AutoSizeChanged(self): ...
    @property
    def AutoValidateChanged(self): ...
    @property
    def Load(self): ...
    @property
    def TextChanged(self): ...
    @property
    def Scroll(self): ...
    @property
    def BackColorChanged(self): ...
    @property
    def BackgroundImageChanged(self): ...
    @property
    def BackgroundImageLayoutChanged(self): ...
    @property
    def BindingContextChanged(self): ...
    @property
    def CausesValidationChanged(self): ...
    @property
    def ClientSizeChanged(self): ...
    @property
    def ContextMenuStripChanged(self): ...
    @property
    def CursorChanged(self): ...
    @property
    def DockChanged(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def FontChanged(self): ...
    @property
    def ForeColorChanged(self): ...
    @property
    def LocationChanged(self): ...
    @property
    def MarginChanged(self): ...
    @property
    def RegionChanged(self): ...
    @property
    def RightToLeftChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def TabIndexChanged(self): ...
    @property
    def TabStopChanged(self): ...
    @property
    def VisibleChanged(self): ...
    @property
    def Click(self): ...
    @property
    def ControlAdded(self): ...
    @property
    def ControlRemoved(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragLeave(self): ...
    @property
    def GiveFeedback(self): ...
    @property
    def HandleCreated(self): ...
    @property
    def HandleDestroyed(self): ...
    @property
    def HelpRequested(self): ...
    @property
    def Invalidated(self): ...
    @property
    def PaddingChanged(self): ...
    @property
    def Paint(self): ...
    @property
    def QueryContinueDrag(self): ...
    @property
    def QueryAccessibilityHelp(self): ...
    @property
    def DoubleClick(self): ...
    @property
    def Enter(self): ...
    @property
    def GotFocus(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyPress(self): ...
    @property
    def KeyUp(self): ...
    @property
    def Layout(self): ...
    @property
    def Leave(self): ...
    @property
    def LostFocus(self): ...
    @property
    def MouseClick(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseCaptureChanged(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def DpiChangedBeforeParent(self): ...
    @property
    def DpiChangedAfterParent(self): ...
    @property
    def MouseHover(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def Move(self): ...
    @property
    def PreviewKeyDown(self): ...
    @property
    def Resize(self): ...
    @property
    def ChangeUICues(self): ...
    @property
    def StyleChanged(self): ...
    @property
    def SystemColorsChanged(self): ...
    @property
    def Validating(self): ...
    @property
    def Validated(self): ...
    @property
    def ParentChanged(self): ...
    @property
    def ImeModeChanged(self): ...
    @property
    def Disposed(self): ...

class GH_RibbonContentBase(object):
    """    """
    @property
    def Region(self) -> Drawing.Rectangle: ...
    @overload
    def Contains(self, pt: Drawing.Point) -> bool: ...
    @property
    def ClientRegion(self) -> Drawing.Rectangle: ...
    @property
    def ContentRegion(self) -> Drawing.Rectangle: ...
    @property
    def Margin(self) -> Forms.Padding: ...
    @property
    def Padding(self) -> Forms.Padding: ...
    @property
    def Visible(self) -> bool: ...
    @overload
    def PerformLayout() -> None: ...
    @ClientRegion.setter
    def ClientRegion(self, value: System.Void): ...
    @ContentRegion.setter
    def ContentRegion(self, value: System.Void): ...
    @Margin.setter
    def Margin(self, value: System.Void): ...
    @Padding.setter
    def Padding(self, value: System.Void): ...
    @Visible.setter
    def Visible(self, value: System.Void): ...

class GH_RibbonDropdown(Forms.Form):
    """    """
    def __init__(self): ...
    @overload
    def FindIconRectangle(self, id_: System.Guid) -> (bool, Drawing.Rectangle): ...
    @property
    def AutoClose(self) -> bool: ...
    @overload
    def PopulateContent(self, proxies: Generic.List) -> None: ...
    @AutoClose.setter
    def AutoClose(self, value: System.Void): ...
    @overload
    def SetOwner(self, owner: GH_RibbonPanel) -> None: ...
    @property
    def AutoSizeChanged(self): ...
    @property
    def AutoValidateChanged(self): ...
    @property
    def HelpButtonClicked(self): ...
    @property
    def MaximizedBoundsChanged(self): ...
    @property
    def MaximumSizeChanged(self): ...
    @property
    def MarginChanged(self): ...
    @property
    def MinimumSizeChanged(self): ...
    @property
    def TabIndexChanged(self): ...
    @property
    def TabStopChanged(self): ...
    @property
    def Activated(self): ...
    @property
    def Closing(self): ...
    @property
    def Closed(self): ...
    @property
    def Deactivate(self): ...
    @property
    def FormClosing(self): ...
    @property
    def FormClosed(self): ...
    @property
    def Load(self): ...
    @property
    def MdiChildActivate(self): ...
    @property
    def MenuComplete(self): ...
    @property
    def MenuStart(self): ...
    @property
    def InputLanguageChanged(self): ...
    @property
    def InputLanguageChanging(self): ...
    @property
    def RightToLeftLayoutChanged(self): ...
    @property
    def Shown(self): ...
    @property
    def DpiChanged(self): ...
    @property
    def ResizeBegin(self): ...
    @property
    def ResizeEnd(self): ...
    @property
    def Scroll(self): ...
    @property
    def BackColorChanged(self): ...
    @property
    def BackgroundImageChanged(self): ...
    @property
    def BackgroundImageLayoutChanged(self): ...
    @property
    def BindingContextChanged(self): ...
    @property
    def CausesValidationChanged(self): ...
    @property
    def ClientSizeChanged(self): ...
    @property
    def ContextMenuStripChanged(self): ...
    @property
    def CursorChanged(self): ...
    @property
    def DockChanged(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def FontChanged(self): ...
    @property
    def ForeColorChanged(self): ...
    @property
    def LocationChanged(self): ...
    @property
    def RegionChanged(self): ...
    @property
    def RightToLeftChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def TextChanged(self): ...
    @property
    def VisibleChanged(self): ...
    @property
    def Click(self): ...
    @property
    def ControlAdded(self): ...
    @property
    def ControlRemoved(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragLeave(self): ...
    @property
    def GiveFeedback(self): ...
    @property
    def HandleCreated(self): ...
    @property
    def HandleDestroyed(self): ...
    @property
    def HelpRequested(self): ...
    @property
    def Invalidated(self): ...
    @property
    def PaddingChanged(self): ...
    @property
    def Paint(self): ...
    @property
    def QueryContinueDrag(self): ...
    @property
    def QueryAccessibilityHelp(self): ...
    @property
    def DoubleClick(self): ...
    @property
    def Enter(self): ...
    @property
    def GotFocus(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyPress(self): ...
    @property
    def KeyUp(self): ...
    @property
    def Layout(self): ...
    @property
    def Leave(self): ...
    @property
    def LostFocus(self): ...
    @property
    def MouseClick(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseCaptureChanged(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def DpiChangedBeforeParent(self): ...
    @property
    def DpiChangedAfterParent(self): ...
    @property
    def MouseHover(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def Move(self): ...
    @property
    def PreviewKeyDown(self): ...
    @property
    def Resize(self): ...
    @property
    def ChangeUICues(self): ...
    @property
    def StyleChanged(self): ...
    @property
    def SystemColorsChanged(self): ...
    @property
    def Validating(self): ...
    @property
    def Validated(self): ...
    @property
    def ParentChanged(self): ...
    @property
    def ImeModeChanged(self): ...
    @property
    def Disposed(self): ...

class GH_RibbonMouseEvent(enum.Enum):
    Unset = 0
    Ignored = 1
    Handled = 2
    Handled_Redraw = 3

class GH_RibbonMouseEventArgs(Forms.MouseEventArgs):
    """    """
    @overload
    def __init__(self, e: Forms.MouseEventArgs): ...
    @overload
    def __init__(self, e: Forms.MouseEventArgs, nActiveObject: IGH_RibbonInteractiveObject): ...
    @property
    def ActiveObject(self) -> IGH_RibbonInteractiveObject: ...
    @property
    def IsActiveObject(self) -> bool: ...
    @property
    def Release(self) -> bool: ...
    @overload
    def NewActiveObject(self, nObject: IGH_RibbonInteractiveObject) -> None: ...
    @overload
    def ReleaseActiveObject() -> None: ...
    @overload
    def ReleaseActiveObject(self, owner_filter: IGH_RibbonInteractiveObject) -> None: ...
    @overload
    def Reset() -> None: ...

class IGH_RibbonInteractiveObject:
    """    """
    @overload
    def DisplayTooltip(self, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def MouseClick(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseDoubleClick(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseDown(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseMove(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseUp(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...

class GH_RibbonItem(GH_RibbonContentBase):
    """    """
    def __init__(self, item_proxy: Kernel.IGH_ObjectProxy): ...
    @property
    def Region(self) -> Drawing.Rectangle: ...
    @overload
    def CompareTo(self, other: GH_RibbonItem) -> int: ...
    @overload
    def DisplayTooltip(self, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @property
    def Owner(self) -> GH_RibbonPanel: ...
    @property
    def Proxy(self) -> Kernel.IGH_ObjectProxy: ...
    @overload
    def MouseClick(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseDoubleClick(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseDown(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseMove(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseUp(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def PerformLayout() -> None: ...
    @overload
    def RenderItem(self, g: Drawing.Graphics) -> None: ...
    @Owner.setter
    def Owner(self, value: System.Void): ...
    @Proxy.setter
    def Proxy(self, value: System.Void): ...

class GH_LayoutTab(object):
    """Represents a tab on a ribbon layout.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, name: str): ...
    @overload
    def __init__(self, other: GH_LayoutTab): ...
    @overload
    def AddPanel() -> GH_LayoutPanel: ...
    @overload
    def AddPanel(self, name: str) -> GH_LayoutPanel: ...
    @overload
    def CompareTo(self, other: GH_LayoutTab) -> int: ...
    @overload
    def Deselect() -> None: ...
    @property
    def Name(self) -> str: ...
    @property
    def Panels(self) -> Generic.List: ...
    @property
    def Selected(self) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @Selected.setter
    def Selected(self, value: System.Void): ...
    @overload
    def SortPanels(self, order: System.System.Array[str]) -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_LayoutPanel(object):
    """Represents a panel on a ribbon layout.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, name: str): ...
    @overload
    def __init__(self, other: GH_LayoutPanel): ...
    @overload
    def CompareTo(self, other: GH_LayoutPanel) -> int: ...
    @property
    def Items(self) -> Generic.List: ...
    @property
    def Name(self) -> str: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @overload
    def Sort() -> None: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_LayoutItem(object):
    """Represents an item on a ribbon layout.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: GH_LayoutItem): ...
    @overload
    def __init__(self, objectId: System.Guid, exposure: Kernel.GH_Exposure): ...
    @property
    def Exposure(self) -> Kernel.GH_Exposure: ...
    @property
    def Id(self) -> System.Guid: ...
    @property
    def Selected(self) -> bool: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @Exposure.setter
    def Exposure(self, value: System.Void): ...
    @Selected.setter
    def Selected(self, value: System.Void): ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_Layout(object):
    """Represents a complete ribbon layout.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: GH_Layout): ...
    @overload
    def AddItem(self, category: str, subcategory: str, id_: System.Guid) -> None: ...
    @overload
    def AddItem(self, category: str, subcategory: str, item: GH_LayoutItem) -> None: ...
    @overload
    def AddItem(self, category: str, subcategory: str, id_: System.Guid, exposure: Kernel.GH_Exposure) -> None: ...
    @overload
    def AddTab() -> GH_LayoutTab: ...
    @overload
    def AddTab(self, name: str) -> GH_LayoutTab: ...
    @overload
    def Deserialize(self, filepath: str) -> bool: ...
    @overload
    def FindTab(self, name: str) -> GH_LayoutTab: ...
    @property
    def FilePath(self) -> str: ...
    @property
    def ItemCount(self) -> int: ...
    @property
    def Items(self) -> Generic.IEnumerable: ...
    @property
    def Name(self) -> str: ...
    @property
    def PanelCount(self) -> int: ...
    @property
    def TabCount(self) -> int: ...
    @property
    def Tabs(self) -> Generic.List: ...
    @overload
    def Read(self, reader: Serialization.GH_IReader) -> bool: ...
    @overload
    def Serialize() -> str: ...
    @overload
    def Serialize(self, filepath: str) -> bool: ...
    @FilePath.setter
    def FilePath(self, value: System.Void): ...
    @overload
    @staticmethod
    def StringSort(a: str, b: str) -> int: ...
    @overload
    def Write(self, writer: Serialization.GH_IWriter) -> bool: ...

class GH_LayoutMenuItem(GUI.GH_DoubleBufferedPanel):
    """    """
    def __init__(self): ...
    @property
    def CloseRegion(self) -> Drawing.Rectangle: ...
    @property
    def EditRegion(self) -> Drawing.Rectangle: ...
    @property
    def LabelRegion(self) -> Drawing.Rectangle: ...
    @property
    def LayoutFile(self) -> str: ...
    @property
    def Ribbon(self) -> GH_Ribbon: ...
    @property
    def VisibleRegion(self) -> Drawing.Rectangle: ...
    @LayoutFile.setter
    def LayoutFile(self, value: System.Void): ...
    @Ribbon.setter
    def Ribbon(self, value: System.Void): ...
    @property
    def AutoSizeChanged(self): ...
    @property
    def KeyUp(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyPress(self): ...
    @property
    def TextChanged(self): ...
    @property
    def Scroll(self): ...
    @property
    def BackColorChanged(self): ...
    @property
    def BackgroundImageChanged(self): ...
    @property
    def BackgroundImageLayoutChanged(self): ...
    @property
    def BindingContextChanged(self): ...
    @property
    def CausesValidationChanged(self): ...
    @property
    def ClientSizeChanged(self): ...
    @property
    def ContextMenuStripChanged(self): ...
    @property
    def CursorChanged(self): ...
    @property
    def DockChanged(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def FontChanged(self): ...
    @property
    def ForeColorChanged(self): ...
    @property
    def LocationChanged(self): ...
    @property
    def MarginChanged(self): ...
    @property
    def RegionChanged(self): ...
    @property
    def RightToLeftChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def TabIndexChanged(self): ...
    @property
    def TabStopChanged(self): ...
    @property
    def VisibleChanged(self): ...
    @property
    def Click(self): ...
    @property
    def ControlAdded(self): ...
    @property
    def ControlRemoved(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragLeave(self): ...
    @property
    def GiveFeedback(self): ...
    @property
    def HandleCreated(self): ...
    @property
    def HandleDestroyed(self): ...
    @property
    def HelpRequested(self): ...
    @property
    def Invalidated(self): ...
    @property
    def PaddingChanged(self): ...
    @property
    def Paint(self): ...
    @property
    def QueryContinueDrag(self): ...
    @property
    def QueryAccessibilityHelp(self): ...
    @property
    def DoubleClick(self): ...
    @property
    def Enter(self): ...
    @property
    def GotFocus(self): ...
    @property
    def Layout(self): ...
    @property
    def Leave(self): ...
    @property
    def LostFocus(self): ...
    @property
    def MouseClick(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseCaptureChanged(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def DpiChangedBeforeParent(self): ...
    @property
    def DpiChangedAfterParent(self): ...
    @property
    def MouseHover(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def Move(self): ...
    @property
    def PreviewKeyDown(self): ...
    @property
    def Resize(self): ...
    @property
    def ChangeUICues(self): ...
    @property
    def StyleChanged(self): ...
    @property
    def SystemColorsChanged(self): ...
    @property
    def Validating(self): ...
    @property
    def Validated(self): ...
    @property
    def ParentChanged(self): ...
    @property
    def ImeModeChanged(self): ...
    @property
    def Disposed(self): ...

class GH_RibbonPainter(object):
    """    """
    @overload
    @staticmethod
    def DropDownBar(rec: Drawing.Rectangle) -> Drawing2D.GraphicsPath: ...
    @property
    def PanelBarHeight(self) -> int: ...
    @property
    def PanelCornerRadius(self) -> int: ...
    @property
    def TabGripHeight(self) -> int: ...
    @overload
    @staticmethod
    def PanelBottomBar(rec: Drawing.Rectangle) -> Drawing2D.GraphicsPath: ...
    @overload
    @staticmethod
    def PanelInnerBorder(rec: Drawing.Rectangle) -> Drawing2D.GraphicsPath: ...
    @overload
    @staticmethod
    def PanelOuterBorder(rec: Drawing.Rectangle) -> Drawing2D.GraphicsPath: ...
    @overload
    @staticmethod
    def TabEdgeBrush(rec: Drawing.Rectangle) -> Drawing.Brush: ...
    @overload
    @staticmethod
    def TabOuterBorder(GripRec: Drawing.Rectangle, ContentRec: Drawing.Rectangle) -> Drawing2D.GraphicsPath: ...
    @overload
    @staticmethod
    def TabPaneBrush(rec: Drawing.Rectangle, bg: Drawing.Color) -> Drawing.Brush: ...

class GH_RibbonPanel(GH_RibbonContentBase):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, iName: str): ...
    @property
    def Region(self) -> Drawing.Rectangle: ...
    @overload
    def AddItem(self, item: GH_RibbonItem) -> bool: ...
    @overload
    def CollapseLastColumn() -> bool: ...
    @overload
    def CollapseLeastSignificantColumn() -> bool: ...
    @overload
    def CompareTo(self, other: GH_RibbonPanel) -> int: ...
    @overload
    def Contains(self, id_: System.Guid, exposure: Kernel.GH_Exposure) -> bool: ...
    @overload
    def DesiredHeight(self, initialHeight: int) -> int: ...
    @overload
    def DisplayDropdown() -> None: ...
    @overload
    def DisplayDropdown(self, autoCloseDropdown: bool) -> GH_RibbonDropdown: ...
    @overload
    def DisplayTooltip(self, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @property
    def AllItems(self) -> Generic.List: ...
    @property
    def Name(self) -> str: ...
    @property
    def Owner(self) -> GH_RibbonTab: ...
    @property
    def VisibleItems(self) -> Generic.List: ...
    @overload
    def IndexAt(self, pt: Drawing.Point) -> int: ...
    @overload
    def ItemAt(self, pt: Drawing.Point) -> GH_RibbonItem: ...
    @overload
    def ItemAt(self, index: int) -> GH_RibbonItem: ...
    @overload
    def MinimumWidth() -> int: ...
    @overload
    def MouseClick(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseDoubleClick(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseDown(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseMove(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseUp(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MoveTo(self, x: int, y: int) -> None: ...
    @overload
    def PanelBarRegion() -> Drawing.Rectangle: ...
    @overload
    def PerformLayout() -> None: ...
    @overload
    def RemoveItem(self, item: GH_RibbonItem) -> bool: ...
    @overload
    def RenderPanel(self, g: Drawing.Graphics) -> None: ...
    @overload
    def RibbonFont() -> Drawing.Font: ...
    @Name.setter
    def Name(self, value: System.Void): ...
    @Owner.setter
    def Owner(self, value: System.Void): ...
    @overload
    def Sort() -> None: ...

class GH_TabDisplay(enum.Enum):
    None_ = 0
    FullName = 1
    ShortName = 2
    Symbol = 3
    Icon = 4

class GH_RibbonTab(GH_RibbonContentBase):
    """    """
    def __init__(self, owner: GH_Ribbon, name: str): ...
    @property
    def Region(self) -> Drawing.Rectangle: ...
    @overload
    def DisplayTooltip(self, e: GUI.GH_TooltipDisplayEventArgs) -> None: ...
    @overload
    def EnsurePanel(self, name: str) -> GH_RibbonPanel: ...
    @property
    def DisplayStyle(self) -> GH_TabDisplay: ...
    @property
    def Grip(self) -> Drawing.Rectangle: ...
    @property
    def HasIcon(self) -> bool: ...
    @property
    def Icon(self) -> Drawing.Bitmap: ...
    @property
    def NameFull(self) -> str: ...
    @property
    def NameShort(self) -> str: ...
    @property
    def NameSymbol(self) -> str: ...
    @property
    def Owner(self) -> GH_Ribbon: ...
    @property
    def Panels(self) -> Generic.List: ...
    @overload
    def MouseClick(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseDoubleClick(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseDown(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseMove(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def MouseUp(self, sender: GH_Ribbon, e: GH_RibbonMouseEventArgs) -> GH_RibbonMouseEvent: ...
    @overload
    def PerformLayout() -> None: ...
    @overload
    def RenderTab(self, g: Drawing.Graphics) -> None: ...
    @DisplayStyle.setter
    def DisplayStyle(self, value: System.Void): ...
    @Grip.setter
    def Grip(self, value: System.Void): ...

# endregion
