"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_CssProperty", "GH_CssStyle", "GH_CssStyleSheet", "GH_CssConstants", "GH_HtmlFormatterPalette", "GH_HtmlRemark", "GH_HtmlTableRow", "GH_HtmlTable", "GH_HtmlFormatter", "GH_HtmlTextProperties", "GH_HtmlListType", "GH_HtmlWriter", "GH_HtmlHelpPopup"]
# endregion

# region: Imports
from Grasshopper import Kernel
from System import Drawing
from System.Collections import Generic
from System.Collections import ObjectModel
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import enum
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_CssProperty(object):
    """Represents a single Property/Values pair in a CSS style.

    """
    @overload
    def __init__(self, property_: str): ...
    @overload
    def __init__(self, property_: str, value: str): ...
    @overload
    def __init__(self, property_: str, values: Generic.IEnumerable): ...
    @overload
    def AddValue(self, value: str) -> None: ...
    @overload
    def AddValues(self, values: Generic.IEnumerable) -> None: ...
    @overload
    def CompareTo(self, other: GH_CssProperty) -> int: ...
    @overload
    def FormatCss(self, indent: int) -> str: ...
    @property
    def Name(self) -> str: ...
    @property
    def Value(self) -> str: ...
    @property
    def ValueCount(self) -> int: ...
    @property
    def Values(self) -> ObjectModel.ReadOnlyCollection: ...

class GH_CssStyle(object):
    """Represents a single CSS style, consisting of a selector and a collection of properties.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, selector: str): ...
    @overload
    def __init__(self, selector: str, property_: GH_CssProperty): ...
    @overload
    def __init__(self, selector: str, properties: Generic.IEnumerable): ...
    @overload
    def AddComment(self, comment: str) -> None: ...
    @overload
    def AddProperty(self, property_: GH_CssProperty) -> None: ...
    @overload
    def AddProperty(self, name: str, value: str) -> None: ...
    @overload
    def CompareTo(self, other: GH_CssStyle) -> int: ...
    @overload
    def FormatCss(self, indent: int) -> str: ...
    @property
    def Comments(self) -> ObjectModel.ReadOnlyCollection: ...
    @property
    def IsClassSelector(self) -> bool: ...
    @property
    def IsIdSelector(self) -> bool: ...
    @property
    def IsPluralSelector(self) -> bool: ...
    @property
    def Properties(self) -> ObjectModel.ReadOnlyCollection: ...
    @property
    def Selector(self) -> str: ...
    @Selector.setter
    def Selector(self, value: System.Void): ...

class GH_CssStyleSheet(object):
    """Represents an entire CSS style sheet specification.

    """
    def __init__(self): ...
    @overload
    def AddStyle(self, styles: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def FormatCss(self, indent: int) -> str: ...
    @property
    def Links(self) -> ObjectModel.ReadOnlyCollection: ...
    @property
    def Styles(self) -> ObjectModel.ReadOnlyCollection: ...
    @overload
    def IsStyleDefined(self, style: GH_CssStyle) -> bool: ...

class GH_CssConstants(object):
    """Provides default Grasshopper CSS styles.

    """
    def __init__(self): ...
    @property
    def BlockChapter(self) -> GH_CssStyle: ...
    @property
    def BlockContent(self) -> GH_CssStyle: ...
    @property
    def BlockListTight(self) -> GH_CssStyle: ...
    @property
    def BlockParagraph(self) -> GH_CssStyle: ...
    @property
    def BlockSection(self) -> GH_CssStyle: ...
    @property
    def BlockSeparator(self) -> GH_CssStyle: ...
    @property
    def BlockTight(self) -> GH_CssStyle: ...
    @property
    def ColourBackground(self) -> Drawing.Color: ...
    @property
    def ColourChapterBackground(self) -> Drawing.Color: ...
    @property
    def ColourFakeFaint(self) -> Drawing.Color: ...
    @property
    def ColourForeground(self) -> Drawing.Color: ...
    @property
    def ColourSectionBackground(self) -> Drawing.Color: ...
    @property
    def Default(self) -> GH_CssStyle: ...
    @property
    def Text(self) -> GH_CssStyle: ...
    @property
    def TextChapter(self) -> GH_CssStyle: ...
    @property
    def TextFaint(self) -> GH_CssStyle: ...
    @property
    def TextFaintCheat(self) -> GH_CssStyle: ...
    @property
    def TextMonospace(self) -> GH_CssStyle: ...
    @property
    def TextParagraph(self) -> GH_CssStyle: ...
    @property
    def TextSection(self) -> GH_CssStyle: ...
    @ColourBackground.setter
    def ColourBackground(self, value: System.Void): ...
    @ColourChapterBackground.setter
    def ColourChapterBackground(self, value: System.Void): ...
    @ColourFakeFaint.setter
    def ColourFakeFaint(self, value: System.Void): ...
    @ColourForeground.setter
    def ColourForeground(self, value: System.Void): ...
    @ColourSectionBackground.setter
    def ColourSectionBackground(self, value: System.Void): ...

class GH_HtmlFormatterPalette(enum.Enum):
    Black = 0
    Gray = 1
    White = 2
    Red = 3
    Green = 4
    Blue = 5
    Yellow = 6
    Cyan = 7
    Magenta = 8

class GH_HtmlRemark(object):
    """    """
    def __init__(self): ...
    @property
    def m_Text(self) -> str: ...
    @property
    def m_forecolour(self) -> GH_HtmlFormatterPalette: ...
    @property
    def m_backcolour(self) -> GH_HtmlFormatterPalette: ...

class GH_HtmlTableRow(object):
    """    """
    def __init__(self, n_Cells: int): ...
    @overload
    def FormatHtml() -> str: ...
    @property
    def BackColor(self) -> Drawing.Color: ...
    @property
    def Bold(self) -> bool: ...
    @property
    def Content(self) -> str: ...
    @property
    def ForeColor(self) -> Drawing.Color: ...
    @property
    def Header(self) -> bool: ...
    @property
    def Italic(self) -> bool: ...
    @property
    def Size(self) -> int: ...
    @property
    def Width(self) -> int: ...
    @BackColor.setter
    def BackColor(self, value: System.Void): ...
    @Bold.setter
    def Bold(self, value: System.Void): ...
    @Content.setter
    def Content(self, value: System.Void): ...
    @ForeColor.setter
    def ForeColor(self, value: System.Void): ...
    @Header.setter
    def Header(self, value: System.Void): ...
    @Italic.setter
    def Italic(self, value: System.Void): ...
    @Size.setter
    def Size(self, value: System.Void): ...
    @Width.setter
    def Width(self, value: System.Void): ...

class GH_HtmlTable(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, rows: int, columns: int, FirstRowIsHeader: bool): ...
    @overload
    def FormatHtml() -> str: ...
    @property
    def Border(self) -> int: ...
    @property
    def ColumnWidth(self) -> int: ...
    @property
    def Content(self) -> str: ...
    @property
    def Padding(self) -> int: ...
    @property
    def Row(self) -> GH_HtmlTableRow: ...
    @property
    def Width(self) -> int: ...
    @Border.setter
    def Border(self, value: System.Void): ...
    @ColumnWidth.setter
    def ColumnWidth(self, value: System.Void): ...
    @Content.setter
    def Content(self, value: System.Void): ...
    @Padding.setter
    def Padding(self, value: System.Void): ...
    @Row.setter
    def Row(self, value: System.Void): ...
    @Width.setter
    def Width(self, value: System.Void): ...
    @overload
    def SetAllTextSizes(self, nSize: int) -> None: ...

class GH_HtmlFormatter(object):
    """    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, nSource: Kernel.IGH_InstanceDescription): ...
    @overload
    def __init__(self, nSource: Kernel.IGH_InstanceDescription, nTitle: str): ...
    @overload
    def __init__(self, nSource: Kernel.IGH_InstanceDescription, nTitle: str, nDescription: str): ...
    @overload
    def AddRemark(self, text: str, forecolour: GH_HtmlFormatterPalette, backcolour: GH_HtmlFormatterPalette) -> None: ...
    @property
    def ContactURI(self) -> str: ...
    @property
    def Description(self) -> str: ...
    @property
    def Remarks(self) -> Generic.List: ...
    @property
    def Title(self) -> str: ...
    @property
    def WebPageURI(self) -> str: ...
    @overload
    def HtmlFormat() -> str: ...
    @overload
    @staticmethod
    def HtmlPaletteTag(palette: GH_HtmlFormatterPalette) -> str: ...
    @overload
    @staticmethod
    def ReplaceBoxDrawingCodes(source: str) -> str: ...
    @overload
    @staticmethod
    def ReplaceSpecialCharCodes(source: str) -> str: ...
    @ContactURI.setter
    def ContactURI(self, value: System.Void): ...
    @Description.setter
    def Description(self, value: System.Void): ...
    @Title.setter
    def Title(self, value: System.Void): ...
    @WebPageURI.setter
    def WebPageURI(self, value: System.Void): ...

class GH_HtmlTextProperties(enum.Enum):
    None_ = 0
    Strong = 1
    Emphasis = 2
    SuperScript = 4
    SubScript = 8
    Code = 16

class GH_HtmlListType(enum.Enum):
    None_ = 0
    Unordered = 1
    Ordered = 2

class GH_HtmlWriter(object):
    """General purpose HTML writer.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, cssStyles: System.Array[GH_CssStyle]): ...
    @overload
    def ComposeHTMLDocument(self, cssBodyStyles: System.System.Array[str]) -> str: ...
    @overload
    def ComposeHTMLDocument(self, cssBodyStyles: System.Array[GH_CssStyle]) -> str: ...
    @property
    def CssStyleSheet(self) -> GH_CssStyleSheet: ...
    @property
    def Title(self) -> str: ...
    @Title.setter
    def Title(self, value: System.Void): ...
    @overload
    def ToString() -> str: ...
    @overload
    def WriteBlankSpace(self, height: int) -> None: ...
    @overload
    def WriteComment(self, comment: str) -> None: ...
    @overload
    def WriteDivEnd() -> None: ...
    @overload
    def WriteDivStart() -> None: ...
    @overload
    def WriteDivStart(self, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WriteDivStart(self, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteHorizontalGradient(self, top: Drawing.Color, bottom: Drawing.Color, steps: int, stepHeight: int) -> None: ...
    @overload
    def WriteHorizontalRule() -> None: ...
    @overload
    def WriteHorizontalRule(self, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteHorizontalRule(self, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WriteLineBreak() -> None: ...
    @overload
    def WriteLink(self, target: str, name: str) -> None: ...
    @overload
    def WriteLink(self, target: str, name: str, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WriteLink(self, target: str, name: str, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteListEnd() -> None: ...
    @overload
    def WriteListItem(self, itemContent: str) -> None: ...
    @overload
    def WriteListItem(self, itemContent: str, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteListItem(self, itemContent: str, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WriteListItemEnd() -> None: ...
    @overload
    def WriteListItemStart() -> None: ...
    @overload
    def WriteListItemStart(self, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WriteListItemStart(self, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteOrderedListStart(self, start: int) -> None: ...
    @overload
    def WriteOrderedListStart(self, start: int, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteOrderedListStart(self, start: int, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WritePreEnd() -> None: ...
    @overload
    def WritePreStart() -> None: ...
    @overload
    def WritePreStart(self, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WritePreStart(self, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteSpanEnd() -> None: ...
    @overload
    def WriteSpanStart() -> None: ...
    @overload
    def WriteSpanStart(self, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WriteSpanStart(self, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteText(self, text: str) -> None: ...
    @overload
    def WriteText(self, text: str, cssClasses: System.Array[GH_CssStyle]) -> None: ...
    @overload
    def WriteText(self, text: str, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteText(self, text: str, properties: GH_HtmlTextProperties) -> None: ...
    @overload
    def WriteUnorderedListStart() -> None: ...
    @overload
    def WriteUnorderedListStart(self, cssClasses: System.System.Array[str]) -> None: ...
    @overload
    def WriteUnorderedListStart(self, cssClasses: System.Array[GH_CssStyle]) -> None: ...

class GH_HtmlHelpPopup(Forms.Form):
    """    """
    def __init__(self): ...
    @overload
    @staticmethod
    def CloseAllPopupDialogs() -> None: ...
    @property
    def BrowserControl(self) -> Forms.WebBrowser: ...
    @property
    def RegisteredForms(self) -> Generic.List: ...
    @overload
    def LoadHTML(self, syntax: GH_HtmlFormatter) -> None: ...
    @overload
    def LoadHTML(self, syntax: str) -> None: ...
    @overload
    def LoadObject(self, obj: Kernel.GH_DocumentObject) -> bool: ...
    @overload
    def LoadRemoteHTML(self, uri: str) -> None: ...
    @overload
    def SetLocation(self, pt: Drawing.Point) -> None: ...
    @property
    def AutoSizeChanged(self): ...
    @property
    def AutoValidateChanged(self): ...
    @property
    def HelpButtonClicked(self): ...
    @property
    def MaximizedBoundsChanged(self): ...
    @property
    def MaximumSizeChanged(self): ...
    @property
    def MarginChanged(self): ...
    @property
    def MinimumSizeChanged(self): ...
    @property
    def TabIndexChanged(self): ...
    @property
    def TabStopChanged(self): ...
    @property
    def Activated(self): ...
    @property
    def Closing(self): ...
    @property
    def Closed(self): ...
    @property
    def Deactivate(self): ...
    @property
    def FormClosing(self): ...
    @property
    def FormClosed(self): ...
    @property
    def Load(self): ...
    @property
    def MdiChildActivate(self): ...
    @property
    def MenuComplete(self): ...
    @property
    def MenuStart(self): ...
    @property
    def InputLanguageChanged(self): ...
    @property
    def InputLanguageChanging(self): ...
    @property
    def RightToLeftLayoutChanged(self): ...
    @property
    def Shown(self): ...
    @property
    def DpiChanged(self): ...
    @property
    def ResizeBegin(self): ...
    @property
    def ResizeEnd(self): ...
    @property
    def Scroll(self): ...
    @property
    def BackColorChanged(self): ...
    @property
    def BackgroundImageChanged(self): ...
    @property
    def BackgroundImageLayoutChanged(self): ...
    @property
    def BindingContextChanged(self): ...
    @property
    def CausesValidationChanged(self): ...
    @property
    def ClientSizeChanged(self): ...
    @property
    def ContextMenuStripChanged(self): ...
    @property
    def CursorChanged(self): ...
    @property
    def DockChanged(self): ...
    @property
    def EnabledChanged(self): ...
    @property
    def FontChanged(self): ...
    @property
    def ForeColorChanged(self): ...
    @property
    def LocationChanged(self): ...
    @property
    def RegionChanged(self): ...
    @property
    def RightToLeftChanged(self): ...
    @property
    def SizeChanged(self): ...
    @property
    def TextChanged(self): ...
    @property
    def VisibleChanged(self): ...
    @property
    def Click(self): ...
    @property
    def ControlAdded(self): ...
    @property
    def ControlRemoved(self): ...
    @property
    def DataContextChanged(self): ...
    @property
    def DragDrop(self): ...
    @property
    def DragEnter(self): ...
    @property
    def DragOver(self): ...
    @property
    def DragLeave(self): ...
    @property
    def GiveFeedback(self): ...
    @property
    def HandleCreated(self): ...
    @property
    def HandleDestroyed(self): ...
    @property
    def HelpRequested(self): ...
    @property
    def Invalidated(self): ...
    @property
    def PaddingChanged(self): ...
    @property
    def Paint(self): ...
    @property
    def QueryContinueDrag(self): ...
    @property
    def QueryAccessibilityHelp(self): ...
    @property
    def DoubleClick(self): ...
    @property
    def Enter(self): ...
    @property
    def GotFocus(self): ...
    @property
    def KeyDown(self): ...
    @property
    def KeyPress(self): ...
    @property
    def KeyUp(self): ...
    @property
    def Layout(self): ...
    @property
    def Leave(self): ...
    @property
    def LostFocus(self): ...
    @property
    def MouseClick(self): ...
    @property
    def MouseDoubleClick(self): ...
    @property
    def MouseCaptureChanged(self): ...
    @property
    def MouseDown(self): ...
    @property
    def MouseEnter(self): ...
    @property
    def MouseLeave(self): ...
    @property
    def DpiChangedBeforeParent(self): ...
    @property
    def DpiChangedAfterParent(self): ...
    @property
    def MouseHover(self): ...
    @property
    def MouseMove(self): ...
    @property
    def MouseUp(self): ...
    @property
    def MouseWheel(self): ...
    @property
    def Move(self): ...
    @property
    def PreviewKeyDown(self): ...
    @property
    def Resize(self): ...
    @property
    def ChangeUICues(self): ...
    @property
    def StyleChanged(self): ...
    @property
    def SystemColorsChanged(self): ...
    @property
    def Validating(self): ...
    @property
    def Validated(self): ...
    @property
    def ParentChanged(self): ...
    @property
    def ImeModeChanged(self): ...
    @property
    def Disposed(self): ...

# endregion
