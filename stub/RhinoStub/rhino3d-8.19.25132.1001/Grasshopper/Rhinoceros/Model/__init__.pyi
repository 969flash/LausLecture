"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Params", "ModelEarthAnchorPoint", "ModelInstanceDefinition", "ModelLayer", "ModelObject", "Attributes"]
# endregion

# region: Imports
from Grasshopper import Rhinoceros
from Grasshopper.Rhinoceros import Display
from Grasshopper.Rhinoceros import Drafting
from Grasshopper.Rhinoceros import Render
from Rhino import DocObjects
from Rhino import Geometry
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import Rhino
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class ModelEarthAnchorPoint(Rhinoceros.ModelContent):
    """Represents a Rhino Earth anchor point. Wraps the functionality of the
type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, anchorPoint: DocObjects.EarthAnchorPoint): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelEarthAnchorPoint: ...
    @overload
    def CastTo() -> (bool, T): ...
    @property
    def Elevation(self) -> System.Nullable: ...
    @property
    def ElevationCoordinateSystem(self) -> System.Nullable: ...
    @property
    def Latitude(self) -> System.Nullable: ...
    @property
    def Longitude(self) -> System.Nullable: ...
    @property
    def ModelCompass(self) -> System.Nullable: ...
    @property
    def SphereUParameter(self) -> System.Nullable: ...
    @property
    def SphereVParameter(self) -> System.Nullable: ...
    @overload
    def ToAttributes() -> Attributes: ...
    @overload
    def TooltipString() -> str: ...
    @overload
    def ToString() -> str: ...

class ModelInstanceDefinition(Rhinoceros.ModelComponentContent):
    """Represents a Rhino block definition. Wraps the functionality of the
type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, block: DocObjects.InstanceDefinition): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def BakeGeometry(self, doc: Rhino.RhinoDoc, att: DocObjects.ObjectAttributes) -> (bool, System.Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelInstanceDefinition: ...
    @overload
    def CastTo() -> (bool, T): ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def FilePath(self) -> str: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Objects(self) -> Generic.IReadOnlyList: ...
    @property
    def Unset(self) -> ModelInstanceDefinition: ...
    @property
    def UpdateType(self) -> System.Nullable: ...
    @property
    def Url(self) -> str: ...
    @property
    def UrlDescription(self) -> str: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @overload
    def ToAttributes() -> Attributes: ...

class ModelLayer(Rhinoceros.ModelComponentContent):
    """Represents a Rhino model layer. Wraps the functionality of the
type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, layer: DocObjects.Layer): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelLayer: ...
    @property
    def DisplayColor(self) -> System.Nullable: ...
    @property
    def DraftingColor(self) -> System.Nullable: ...
    @property
    def Hidden(self) -> System.Nullable: ...
    @property
    def HiddenOnModel(self) -> System.Nullable: ...
    @property
    def HiddenOnNewDetail(self) -> System.Nullable: ...
    @property
    def Linetype(self) -> Drafting.ModelLinetype: ...
    @property
    def LineWeight(self) -> System.Nullable: ...
    @property
    def Locked(self) -> System.Nullable: ...
    @property
    def Material(self) -> Render.ModelRenderMaterial: ...
    @property
    def Unset(self) -> ModelLayer: ...
    @overload
    def ToAttributes() -> Attributes: ...

class ModelObject(Rhinoceros.ModelComponentContent):
    """Represents a Rhino model object. Wraps the functionality of the
type.

    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, attributes: Attributes): ...
    @overload
    def __init__(self, rhinoObject: DocObjects.RhinoObject): ...
    @overload
    def __init__(self, id_: System.Guid): ...
    @overload
    def __init__(self, document: Rhino.RhinoDoc, objectAttributes: DocObjects.ObjectAttributes): ...
    @overload
    def __init__(self, document: Rhino.RhinoDoc, objectAttributes: DocObjects.ObjectAttributes, geometry: Geometry.GeometryBase): ...
    @overload
    @staticmethod
    def Cast(source: object) -> ModelObject: ...
    @overload
    def CastTo() -> (bool, T): ...
    @property
    def BoundingBox(self) -> Geometry.BoundingBox: ...
    @property
    def Display(self) -> Display.ObjectDisplay: ...
    @property
    def Drafting(self) -> Drafting.ObjectDrafting: ...
    @property
    def Frame(self) -> System.Nullable: ...
    @property
    def IsValid(self) -> bool: ...
    @property
    def Layer(self) -> ModelLayer: ...
    @property
    def ObjectType(self) -> DocObjects.ObjectType: ...
    @property
    def ObjectTypeMask(self) -> DocObjects.ObjectType: ...
    @property
    def Render(self) -> Render.ObjectRender: ...
    @property
    def TypeName(self) -> str: ...
    @property
    def Url(self) -> str: ...
    @property
    def Visibility(self) -> Display.ObjectVisibility: ...
    @overload
    def GetBoundingBox(self, xform: Geometry.Transform) -> Geometry.BoundingBox: ...
    @ObjectTypeMask.setter
    def ObjectTypeMask(self, value: System.Void): ...
    @overload
    def ToAttributes() -> Attributes: ...
    @overload
    def TooltipString() -> str: ...
    @overload
    def ToString() -> str: ...

class Attributes(Rhinoceros.Attributes):
    """    """
    def __init__(self): ...
    @property
    def Elevation(self) -> System.Nullable: ...
    @property
    def ElevationCoordinateSystem(self) -> System.Nullable: ...
    @property
    def Latitude(self) -> System.Nullable: ...
    @property
    def Longitude(self) -> System.Nullable: ...
    @property
    def ModelCompass(self) -> System.Nullable: ...
    @Elevation.setter
    def Elevation(self, value: System.Void): ...
    @ElevationCoordinateSystem.setter
    def ElevationCoordinateSystem(self, value: System.Void): ...
    @Latitude.setter
    def Latitude(self, value: System.Void): ...
    @Longitude.setter
    def Longitude(self, value: System.Void): ...
    @ModelCompass.setter
    def ModelCompass(self, value: System.Void): ...
    @overload
    def ToModelData() -> Rhinoceros.ModelData: ...
    @overload
    def ToString() -> str: ...

class Attributes(Rhinoceros.Attributes):
    """    """
    def __init__(self): ...
    @property
    def FilePath(self) -> str: ...
    @property
    def Objects(self) -> Generic.IReadOnlyList: ...
    @property
    def Units(self) -> System.Nullable: ...
    @property
    def UpdateType(self) -> System.Nullable: ...
    @property
    def Url(self) -> str: ...
    @property
    def UrlDescription(self) -> str: ...
    @FilePath.setter
    def FilePath(self, value: System.Void): ...
    @Objects.setter
    def Objects(self, value: System.Void): ...
    @Units.setter
    def Units(self, value: System.Void): ...
    @UpdateType.setter
    def UpdateType(self, value: System.Void): ...
    @Url.setter
    def Url(self, value: System.Void): ...
    @UrlDescription.setter
    def UrlDescription(self, value: System.Void): ...
    @overload
    def ToDetails() -> str: ...
    @overload
    def ToModelData() -> Rhinoceros.ModelData: ...

class Attributes(Rhinoceros.Attributes):
    """    """
    def __init__(self): ...
    @property
    def DisplayColor(self) -> System.Nullable: ...
    @property
    def DraftingColor(self) -> System.Nullable: ...
    @property
    def Hidden(self) -> System.Nullable: ...
    @property
    def HiddenOnModel(self) -> System.Nullable: ...
    @property
    def HiddenOnNewDetail(self) -> System.Nullable: ...
    @property
    def Linetype(self) -> Drafting.ModelLinetype: ...
    @property
    def LineWeight(self) -> System.Nullable: ...
    @property
    def Locked(self) -> System.Nullable: ...
    @property
    def Material(self) -> Render.ModelRenderMaterial: ...
    @DisplayColor.setter
    def DisplayColor(self, value: System.Void): ...
    @DraftingColor.setter
    def DraftingColor(self, value: System.Void): ...
    @Hidden.setter
    def Hidden(self, value: System.Void): ...
    @HiddenOnModel.setter
    def HiddenOnModel(self, value: System.Void): ...
    @HiddenOnNewDetail.setter
    def HiddenOnNewDetail(self, value: System.Void): ...
    @Linetype.setter
    def Linetype(self, value: System.Void): ...
    @LineWeight.setter
    def LineWeight(self, value: System.Void): ...
    @Locked.setter
    def Locked(self, value: System.Void): ...
    @Material.setter
    def Material(self, value: System.Void): ...
    @overload
    def ToDetails() -> str: ...
    @overload
    def ToModelData() -> Rhinoceros.ModelData: ...

class Attributes(Rhinoceros.Attributes):
    """    """
    def __init__(self): ...
    @property
    def Display(self) -> Display.ObjectDisplay: ...
    @property
    def Drafting(self) -> Drafting.ObjectDrafting: ...
    @property
    def Frame(self) -> System.Nullable: ...
    @property
    def Layer(self) -> ModelLayer: ...
    @property
    def Render(self) -> Render.ObjectRender: ...
    @property
    def Url(self) -> str: ...
    @property
    def Visibility(self) -> Display.ObjectVisibility: ...
    @Display.setter
    def Display(self, value: System.Void): ...
    @Drafting.setter
    def Drafting(self, value: System.Void): ...
    @Frame.setter
    def Frame(self, value: System.Void): ...
    @Layer.setter
    def Layer(self, value: System.Void): ...
    @Render.setter
    def Render(self, value: System.Void): ...
    @Url.setter
    def Url(self, value: System.Void): ...
    @Visibility.setter
    def Visibility(self, value: System.Void): ...
    @overload
    def ToDetails() -> str: ...
    @overload
    def ToModelData() -> Rhinoceros.ModelData: ...

# endregion
