"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["GH_Target", "GH_Style", "GH_Audience", "IGH_Content", "GH_ContentCollection", "GH_Paragraph", "GH_Text", "GH_Format", "GH_List", "GH_Link", "GH_RuntimeFile", "GH_Parser", "GH_GlossaryItem", "GH_Topic"]
# endregion

# region: Imports
from System.Collections import Generic
from System.Collections import ObjectModel
from System.Runtime import CompilerServices
from typing import overload
import enum
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class GH_Target(enum.Enum):
    Glossary = 0
    Topic = 1
    External = 2

class GH_Style(enum.Enum):
    None_ = 0
    WeakEmphasis = 1
    StrongEmphasis = 2
    Monospaced = 3
    Boxed = 4
    ChapterHeader = 5
    ParagraphHeader = 6

class GH_Audience(enum.Enum):
    Beginner = 0
    Intermediate = 1
    Expert = 2

class IGH_Content:
    """All parts that make up documentation content must implement this interface.

    """

class GH_ContentCollection(object):
    """Represents an ordered collection of IGH_Content.

    """
    def __init__(self): ...
    @property
    def Content(self) -> Generic.List: ...
    @property
    def Count(self) -> int: ...
    @property
    def Item(self) -> IGH_Content: ...
    @overload
    def ToString() -> str: ...

class GH_Paragraph(object):
    """    """
    @overload
    @staticmethod
    def Create(content: str) -> GH_Paragraph: ...
    @overload
    @staticmethod
    def Create(content: System.System.Array[str]) -> GH_Paragraph: ...
    @property
    def Content(self) -> IGH_Content: ...
    @overload
    def ToString() -> str: ...

class GH_Text(object):
    """Represents a single string.

    """
    @overload
    @staticmethod
    def Create(text: str) -> GH_Text: ...
    @property
    def Text(self) -> str: ...
    @overload
    def ToString() -> str: ...

class GH_Format(object):
    """Represents a piece of formatted content.

    """
    @overload
    @staticmethod
    def Create(content: str, style: GH_Style) -> GH_Format: ...
    @overload
    @staticmethod
    def Create(content: IGH_Content, style: GH_Style) -> GH_Format: ...
    @property
    def Content(self) -> IGH_Content: ...
    @property
    def Style(self) -> GH_Style: ...
    @overload
    def ToString() -> str: ...

class GH_List(object):
    """Represents a list of items in the Grasshopper help.

    """
    @overload
    @staticmethod
    def Create(ordered: bool) -> GH_List: ...
    @overload
    @staticmethod
    def Create(ordered: bool, items: Generic.IEnumerable) -> GH_List: ...
    @property
    def Items(self) -> Generic.List: ...
    @property
    def Ordered(self) -> bool: ...
    @overload
    def ToString() -> str: ...

class GH_Link(object):
    """Represents a link to another location in the Help or some external address.

    """
    @overload
    @staticmethod
    def CreateExternalLink(text: str, url: str) -> GH_Link: ...
    @overload
    @staticmethod
    def CreateExternalLink(text: str, url: str, tooltip: str) -> GH_Link: ...
    @overload
    @staticmethod
    def CreateGlossaryLink(text: str) -> GH_Link: ...
    @overload
    @staticmethod
    def CreateGlossaryLink(text: str, glossaryEntry: str) -> GH_Link: ...
    @overload
    @staticmethod
    def CreateSharedLink(linkId: str, target: str) -> GH_Link: ...
    @overload
    @staticmethod
    def CreateSharedLink(linkId: str, target: str, tooltip: str) -> GH_Link: ...
    @overload
    @staticmethod
    def CreateTopicLink(text: str, topicName: str) -> GH_Link: ...
    @overload
    @staticmethod
    def CreateTopicLink(text: str, topicName: str, tooltip: str) -> GH_Link: ...
    @property
    def Destination(self) -> str: ...
    @property
    def IsSharedLink(self) -> bool: ...
    @property
    def LinkId(self) -> str: ...
    @property
    def Target(self) -> GH_Target: ...
    @property
    def Text(self) -> IGH_Content: ...
    @property
    def Tooltip(self) -> str: ...
    @overload
    def ToString() -> str: ...

class GH_RuntimeFile(object):
    """Runtime representation of a Grasshopper help file. A GH_RuntimeFile is nothing more than a collection of keywords with associated content. This class does not interpret a file or check its validity, it merely figures out the different content section based on "Keyword:" entries.

    """
    @property
    def TagAuthor(self) -> str: ...
    @property
    def TagContact(self) -> str: ...
    @property
    def TagTitle(self) -> str: ...
    @property
    def TagSeeAlso(self) -> str: ...
    @property
    def TagCategory(self) -> str: ...
    @property
    def TagKeywords(self) -> str: ...
    @property
    def TagSynonyms(self) -> str: ...
    @property
    def TagErranyms(self) -> str: ...
    @property
    def TagComponent(self) -> str: ...
    @property
    def TagRhinoCommand(self) -> str: ...
    @property
    def TagPronunciation(self) -> str: ...
    @property
    def TagExpert(self) -> str: ...
    @property
    def TagBeginner(self) -> str: ...
    @property
    def TagDescription(self) -> str: ...
    @property
    def TagIntermediate(self) -> str: ...
    @property
    def TagAutoLink(self) -> str: ...
    @property
    def TagInclude(self) -> str: ...
    @overload
    def ContainsKey(self, key: str) -> bool: ...
    @property
    def Content(self) -> Generic.List: ...
    @property
    def Keys(self) -> Generic.List: ...
    @property
    def Path(self) -> str: ...
    @property
    def Tags(self) -> Generic.IEnumerable: ...
    @overload
    @staticmethod
    def IsTag(text: str) -> bool: ...
    @overload
    @staticmethod
    def IsTagLine(line: str) -> (bool, str, str): ...
    @overload
    @staticmethod
    def ParseFile(path: str) -> GH_RuntimeFile: ...

class GH_Parser(object):
    """Provides parsing methods for the Grasshopper Markdown flavour.

    """
    @property
    def Whitespace(self) -> System.System.Array[System.Char]: ...
    @overload
    @staticmethod
    def IsChapterHeaderLine(line: str) -> bool: ...
    @overload
    @staticmethod
    def IsCommentLine(line: str) -> bool: ...
    @overload
    @staticmethod
    def IsLinkLine(line: str) -> bool: ...
    @overload
    @staticmethod
    def IsLinkLine(line: str) -> (bool, str, str, str): ...
    @overload
    @staticmethod
    def IsListLine(line: str) -> bool: ...
    @overload
    @staticmethod
    def IsParagraphHeaderLine(line: str) -> bool: ...
    @overload
    @staticmethod
    def IsQuoteLine(line: str) -> bool: ...
    @overload
    @staticmethod
    def StringToFragment(text: str) -> IGH_Content: ...

class GH_GlossaryItem(object):
    """Represents a single glossary entry in the Grasshopper help.

    """
    @property
    def Author(self) -> IGH_Content: ...
    @property
    def Contact(self) -> IGH_Content: ...
    @property
    def Descriptions(self) -> Generic.List: ...
    @property
    def Path(self) -> str: ...
    @property
    def Pronunciation(self) -> IGH_Content: ...
    @property
    def Synonyms(self) -> ObjectModel.ReadOnlyCollection: ...
    @property
    def Word(self) -> str: ...
    @overload
    @staticmethod
    def ParseFile(path: str) -> GH_GlossaryItem: ...

class GH_Topic(object):
    """Represents a single topic in the Grasshopper help.

    """
    @property
    def Description(self) -> GH_ContentCollection: ...
    @property
    def SafeDescription(self) -> GH_ContentCollection: ...
    @overload
    @staticmethod
    def ParseFile(path: str) -> GH_Topic: ...

# endregion
