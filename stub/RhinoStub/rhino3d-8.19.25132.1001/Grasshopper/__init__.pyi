"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["My", "Kernel", "Rhinoceros", "GUI", "Documentation", "Plugin", "Getters", "EtoExtensions", "Folders", "CentralSettings", "DataTree", "Utility", "Tracing", "Versioning", "Global_Proc", "Instances", "EtoWin32Window", "AuthorNameChangedEventHandler", "AuthorCompanyChangedEventHandler", "AuthorCopyrightChangedEventHandler", "AuthorAddressChangedEventHandler", "AuthorWebsiteChangedEventHandler", "AuthorEMailChangedEventHandler", "AuthorPhoneChangedEventHandler", "FormattingChangedEventHandler", "RibbonVisibleChangedEventHandler", "RibbonAllIconsChangedEventHandler", "RibbonSeparatorsChangedEventHandler", "RibbonDrawTabIconsChangedEventHandler", "UiScaleChangedEventHandler", "TemplateFileChangedEventHandler", "CanvasToolbarChangedEventHandler", "CanvasFancyWiresChangedEventHandler", "CanvasObjectIconsChangedEventHandler", "CanvasRadialMenuChangedEventHandler", "CanvasFullNamesChangedEventHandler", "CanvasObsoleteTagsChangedEventHandler", "CanvasZuiZoomLevelChangedEventHandler", "TooltipWiggleRadiusChangedEventHandler", "PreviewMeshEdgesChangedEventHandler", "PreviewPlaneRadiusChangedEventHandler", "PreviewPointStyleChangedEventHandler", "PreviewBumpZBufferChangedEventHandler", "PreviewGumballsChangedEventHandler", "ComponentCascadeMenusChangedEventHandler", "PanelDefaultFontChangedEventHandler", "CreateSolutionUndoRecordChangedEventHandler", "PruderyLevelChangedEventHandler", "LoadProtectionChangedEventHandler", "LoadMechanismChangedEventHandler", "DuplicateT", "CanvasCreatedEventHandler", "CanvasDestroyedEventHandler"]
# endregion

# region: Imports
from Eto import Drawing
from Eto import Forms
from GH_IO import Types
from Grasshopper import GUI
from Grasshopper import Kernel
from Grasshopper.GUI import Canvas
from Grasshopper.GUI import MRU
from Grasshopper.GUI import RemotePanel
from Grasshopper.Kernel import Data
from Grasshopper.Kernel import Parameters
from Rhino import Display
from System import Drawing
from System.Collections import Generic
from System.Runtime import CompilerServices
from System.Windows import Forms
from typing import overload
import Rhino
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class EtoExtensions(object):
    """    """
    @overload
    @staticmethod
    def ToEto(size: Drawing.SizeF) -> Drawing.SizeF: ...
    @overload
    @staticmethod
    def ToEto(size: Drawing.Size) -> Drawing.Size: ...
    @overload
    @staticmethod
    def ToEto(point: Drawing.PointF) -> Drawing.PointF: ...
    @overload
    @staticmethod
    def ToEto(point: Drawing.Point) -> Drawing.Point: ...
    @overload
    @staticmethod
    def ToEto(font: Drawing.Font) -> Drawing.Font: ...
    @overload
    @staticmethod
    def ToEto(sdcolor: Drawing.Color) -> Drawing.Color: ...
    @overload
    @staticmethod
    def ToEto(control: Forms.Control) -> Forms.Control: ...
    @overload
    @staticmethod
    def ToEto(control: Forms.Form) -> Forms.Window: ...
    @overload
    @staticmethod
    def ToEtoWindow(control: Forms.IWin32Window) -> Forms.Window: ...
    @overload
    @staticmethod
    def ToSD(point: Drawing.Point) -> Drawing.Point: ...
    @overload
    @staticmethod
    def ToSD(size: Drawing.SizeF) -> Drawing.SizeF: ...
    @overload
    @staticmethod
    def ToSD(font: Drawing.Font) -> Drawing.Font: ...
    @overload
    @staticmethod
    def ToSD(size: Drawing.Size) -> Drawing.Size: ...
    @overload
    @staticmethod
    def ToSD(rectangle: Drawing.Rectangle) -> Drawing.Rectangle: ...
    @overload
    @staticmethod
    def ToSD(point: Drawing.PointF) -> Drawing.PointF: ...
    @overload
    @staticmethod
    def ToSD(color: Drawing.Color) -> Drawing.Color: ...
    @overload
    @staticmethod
    def ToSwf(control: Forms.Control, attach: bool) -> Forms.Control: ...
    @overload
    @staticmethod
    def ToWin32Window(window: Forms.Window) -> Forms.IWin32Window: ...

class Folders(object):
    """Provides access to all standard Grasshopper file and folder locations.

    """
    @property
    def AppDataFolder(self) -> str: ...
    @property
    def AssemblyFolders(self) -> Generic.List: ...
    @property
    def AutoSaveFolder(self) -> str: ...
    @property
    def ClusterFolders(self) -> Generic.List: ...
    @property
    def CursorFolder(self) -> str: ...
    @property
    def CustomAssemblyFolders(self) -> Generic.List: ...
    @property
    def DefaultAssemblyFolder(self) -> str: ...
    @property
    def DefaultAssemblyFolderVersion6(self) -> str: ...
    @property
    def DefaultClusterFolder(self) -> str: ...
    @property
    def DefaultTemplateFolder(self) -> str: ...
    @property
    def DefaultUserObjectFolder(self) -> str: ...
    @property
    def Desktop(self) -> str: ...
    @property
    def DownloaderApplication(self) -> str: ...
    @property
    def FileViewerApplication(self) -> str: ...
    @property
    def IconFolder(self) -> str: ...
    @property
    def ImageStitcherApplication(self) -> str: ...
    @property
    def PluginFolder(self) -> str: ...
    @property
    def SDKDownloaderApplication(self) -> str: ...
    @property
    def SettingsFolder(self) -> str: ...
    @property
    def TemplateFolders(self) -> Generic.List: ...
    @property
    def ToolsFolder(self) -> str: ...
    @property
    def TutorialFiles(self) -> System.System.Array[str]: ...
    @property
    def TutorialFolder(self) -> str: ...
    @property
    def UserObjectFolders(self) -> Generic.List: ...
    @property
    def VersionHistoryFile(self) -> str: ...
    @property
    def VersionHistoryUrl(self) -> str: ...
    @CustomAssemblyFolders.setter
    def CustomAssemblyFolders(self, value: System.Void): ...
    @overload
    @staticmethod
    def ShowFolderInExplorer(folder: str) -> None: ...

class CentralSettings(object):
    """Represents a collection of program wide settings and events for when those settings change. This should probably be the bottleneck for all program wide settings, but stuff is still littered about for now.

    """
    @property
    def AuthorAddress(self) -> str: ...
    @property
    def AuthorCompany(self) -> str: ...
    @property
    def AuthorCopyright(self) -> str: ...
    @property
    def AuthorCopyrightFormatted(self) -> str: ...
    @property
    def AuthorDetails(self) -> Kernel.IGH_Author: ...
    @property
    def AuthorEMail(self) -> str: ...
    @property
    def AuthorName(self) -> str: ...
    @property
    def AuthorPhone(self) -> str: ...
    @property
    def AuthorWebsite(self) -> str: ...
    @property
    def CanvasFancyWires(self) -> bool: ...
    @property
    def CanvasFullNames(self) -> bool: ...
    @property
    def CanvasMaxSearchResults(self) -> int: ...
    @property
    def CanvasObjectIcons(self) -> bool: ...
    @property
    def CanvasObsoleteTags(self) -> bool: ...
    @property
    def CanvasRadialMenu(self) -> bool: ...
    @property
    def CanvasSpaceIsRadialMenu(self) -> bool: ...
    @property
    def CanvasSpaceSearchRadialMessage(self) -> int: ...
    @property
    def CanvasToolbar(self) -> bool: ...
    @property
    def CanvasZuiZoomLevel(self) -> System.Single: ...
    @property
    def CapsuleHighlight(self) -> bool: ...
    @property
    def CapsuleShine(self) -> bool: ...
    @property
    def ComponentCascadeMenus(self) -> bool: ...
    @property
    def CreateSolutionUndoRecord(self) -> bool: ...
    @property
    def FormatDecimalDigits(self) -> int: ...
    @property
    def FormatENotationDigits(self) -> int: ...
    @property
    def FormatENotationLowerLimit(self) -> int: ...
    @property
    def FormatENotationLowerThreshold(self) -> float: ...
    @property
    def FormatENotationUpperLimit(self) -> int: ...
    @property
    def FormatENotationUpperThreshold(self) -> float: ...
    @property
    def FormatMultiplesOfOne(self) -> bool: ...
    @property
    def FormatMultiplesOfPi(self) -> bool: ...
    @property
    def InvalidBakeAllow(self) -> bool: ...
    @property
    def InvalidBakeAsk(self) -> bool: ...
    @property
    def IsTemplateFile(self) -> bool: ...
    @property
    def PanelDefaultFontFamily(self) -> str: ...
    @property
    def PanelDefaultFontSize(self) -> System.Single: ...
    @property
    def PreviewBumpZBuffer(self) -> bool: ...
    @property
    def PreviewGumballs(self) -> bool: ...
    @property
    def PreviewMeshEdges(self) -> bool: ...
    @property
    def PreviewPlaneRadius(self) -> float: ...
    @property
    def PreviewPointRadius(self) -> int: ...
    @property
    def PreviewPointStyle(self) -> Display.PointStyle: ...
    @property
    def PreviewSelectionThickening(self) -> int: ...
    @property
    def PruderyLevel(self) -> GUI.GH_PruderyFilter: ...
    @property
    def RibbonDrawTabIcons(self) -> bool: ...
    @property
    def RibbonSeparators(self) -> bool: ...
    @property
    def RibbonShowObscure(self) -> bool: ...
    @property
    def RibbonVisible(self) -> bool: ...
    @property
    def ShowTutorials(self) -> bool: ...
    @property
    def TemplateFile(self) -> str: ...
    @property
    def TooltipVisible(self) -> bool: ...
    @property
    def TooltipWiggleRadius(self) -> int: ...
    @property
    def TrackFileStamps(self) -> bool: ...
    @property
    def TrackPluginLoading(self) -> bool: ...
    @property
    def TryDownloadMissingPlugins(self) -> bool: ...
    @overload
    @staticmethod
    def GetLoadMechanism(pluginName: str) -> Kernel.GH_LoadingDemand: ...
    @overload
    @staticmethod
    def IsLoadProtected(pluginName: str) -> bool: ...
    @AuthorAddress.setter
    def AuthorAddress(self, value: System.Void): ...
    @AuthorCompany.setter
    def AuthorCompany(self, value: System.Void): ...
    @AuthorCopyright.setter
    def AuthorCopyright(self, value: System.Void): ...
    @AuthorEMail.setter
    def AuthorEMail(self, value: System.Void): ...
    @AuthorName.setter
    def AuthorName(self, value: System.Void): ...
    @AuthorPhone.setter
    def AuthorPhone(self, value: System.Void): ...
    @AuthorWebsite.setter
    def AuthorWebsite(self, value: System.Void): ...
    @CanvasFancyWires.setter
    def CanvasFancyWires(self, value: System.Void): ...
    @CanvasFullNames.setter
    def CanvasFullNames(self, value: System.Void): ...
    @CanvasMaxSearchResults.setter
    def CanvasMaxSearchResults(self, value: System.Void): ...
    @CanvasObjectIcons.setter
    def CanvasObjectIcons(self, value: System.Void): ...
    @CanvasObsoleteTags.setter
    def CanvasObsoleteTags(self, value: System.Void): ...
    @CanvasRadialMenu.setter
    def CanvasRadialMenu(self, value: System.Void): ...
    @CanvasSpaceIsRadialMenu.setter
    def CanvasSpaceIsRadialMenu(self, value: System.Void): ...
    @CanvasSpaceSearchRadialMessage.setter
    def CanvasSpaceSearchRadialMessage(self, value: System.Void): ...
    @CanvasToolbar.setter
    def CanvasToolbar(self, value: System.Void): ...
    @CanvasZuiZoomLevel.setter
    def CanvasZuiZoomLevel(self, value: System.Void): ...
    @CapsuleHighlight.setter
    def CapsuleHighlight(self, value: System.Void): ...
    @CapsuleShine.setter
    def CapsuleShine(self, value: System.Void): ...
    @ComponentCascadeMenus.setter
    def ComponentCascadeMenus(self, value: System.Void): ...
    @CreateSolutionUndoRecord.setter
    def CreateSolutionUndoRecord(self, value: System.Void): ...
    @FormatDecimalDigits.setter
    def FormatDecimalDigits(self, value: System.Void): ...
    @FormatENotationDigits.setter
    def FormatENotationDigits(self, value: System.Void): ...
    @FormatENotationLowerLimit.setter
    def FormatENotationLowerLimit(self, value: System.Void): ...
    @FormatENotationUpperLimit.setter
    def FormatENotationUpperLimit(self, value: System.Void): ...
    @FormatMultiplesOfOne.setter
    def FormatMultiplesOfOne(self, value: System.Void): ...
    @FormatMultiplesOfPi.setter
    def FormatMultiplesOfPi(self, value: System.Void): ...
    @InvalidBakeAllow.setter
    def InvalidBakeAllow(self, value: System.Void): ...
    @InvalidBakeAsk.setter
    def InvalidBakeAsk(self, value: System.Void): ...
    @PanelDefaultFontFamily.setter
    def PanelDefaultFontFamily(self, value: System.Void): ...
    @PanelDefaultFontSize.setter
    def PanelDefaultFontSize(self, value: System.Void): ...
    @PreviewBumpZBuffer.setter
    def PreviewBumpZBuffer(self, value: System.Void): ...
    @PreviewGumballs.setter
    def PreviewGumballs(self, value: System.Void): ...
    @PreviewMeshEdges.setter
    def PreviewMeshEdges(self, value: System.Void): ...
    @PreviewPlaneRadius.setter
    def PreviewPlaneRadius(self, value: System.Void): ...
    @PreviewPointStyle.setter
    def PreviewPointStyle(self, value: System.Void): ...
    @PreviewSelectionThickening.setter
    def PreviewSelectionThickening(self, value: System.Void): ...
    @PruderyLevel.setter
    def PruderyLevel(self, value: System.Void): ...
    @RibbonDrawTabIcons.setter
    def RibbonDrawTabIcons(self, value: System.Void): ...
    @RibbonSeparators.setter
    def RibbonSeparators(self, value: System.Void): ...
    @RibbonShowObscure.setter
    def RibbonShowObscure(self, value: System.Void): ...
    @RibbonVisible.setter
    def RibbonVisible(self, value: System.Void): ...
    @ShowTutorials.setter
    def ShowTutorials(self, value: System.Void): ...
    @TemplateFile.setter
    def TemplateFile(self, value: System.Void): ...
    @TooltipVisible.setter
    def TooltipVisible(self, value: System.Void): ...
    @TooltipWiggleRadius.setter
    def TooltipWiggleRadius(self, value: System.Void): ...
    @TrackFileStamps.setter
    def TrackFileStamps(self, value: System.Void): ...
    @TrackPluginLoading.setter
    def TrackPluginLoading(self, value: System.Void): ...
    @TryDownloadMissingPlugins.setter
    def TryDownloadMissingPlugins(self, value: System.Void): ...
    @overload
    @staticmethod
    def SetLoadMechanism(pluginName: str, mechanism: Kernel.GH_LoadingDemand) -> None: ...
    @overload
    @staticmethod
    def SetLoadProtected(pluginName: str, loadProtect: bool) -> None: ...
    @overload
    @staticmethod
    def UserOkayWithBakingInvalidObject(objectType: str) -> bool: ...
    @property
    def AuthorNameChanged(self): ...
    @property
    def AuthorCompanyChanged(self): ...
    @property
    def AuthorCopyrightChanged(self): ...
    @property
    def AuthorAddressChanged(self): ...
    @property
    def AuthorWebsiteChanged(self): ...
    @property
    def AuthorEMailChanged(self): ...
    @property
    def AuthorPhoneChanged(self): ...
    @property
    def FormattingChanged(self): ...
    @property
    def RibbonVisibleChanged(self): ...
    @property
    def RibbonAllIconsChanged(self): ...
    @property
    def RibbonSeparatorsChanged(self): ...
    @property
    def RibbonDrawTabIconsChanged(self): ...
    @property
    def UiScaleChanged(self): ...
    @property
    def TemplateFileChanged(self): ...
    @property
    def CanvasToolbarChanged(self): ...
    @property
    def CanvasFancyWiresChanged(self): ...
    @property
    def CanvasObjectIconsChanged(self): ...
    @property
    def CanvasRadialMenuChanged(self): ...
    @property
    def CanvasFullNamesChanged(self): ...
    @property
    def CanvasObsoleteTagsChanged(self): ...
    @property
    def CanvasZuiZoomLevelChanged(self): ...
    @property
    def TooltipWiggleRadiusChanged(self): ...
    @property
    def PreviewMeshEdgesChanged(self): ...
    @property
    def PreviewPlaneRadiusChanged(self): ...
    @property
    def PreviewPointStyleChanged(self): ...
    @property
    def PreviewBumpZBufferChanged(self): ...
    @property
    def PreviewGumballsChanged(self): ...
    @property
    def ComponentCascadeMenusChanged(self): ...
    @property
    def PanelDefaultFontChanged(self): ...
    @property
    def CreateSolutionUndoRecordChanged(self): ...
    @property
    def PruderyLevelChanged(self): ...
    @property
    def LoadProtectionChanged(self): ...
    @property
    def LoadMechanismChanged(self): ...

class DataTree(object):
    """Implements basic Grasshopper Data Tree functionality in an easy-to-use class. This class is used primarily in Scripting components. If you're using the Grasshopper SDK you should consider using the
class instead.

    DataTree[T]
    """
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, other: DataTree): ...
    @overload
    def __init__(self, data: Generic.IEnumerable, root: Data.GH_Path): ...
    @overload
    def __init__(self, other: DataTree, copyDelegate: DuplicateT): ...
    @overload
    def Add(self, data: T) -> None: ...
    @overload
    def Add(self, data: T, path: Data.GH_Path) -> None: ...
    @overload
    def AddRange(self, data: Generic.IEnumerable) -> None: ...
    @overload
    def AddRange(self, data: Generic.IEnumerable, path: Data.GH_Path) -> None: ...
    @overload
    def AllData() -> Generic.List: ...
    @overload
    def Branch(self, index: int) -> Generic.List: ...
    @overload
    def Branch(self, path: Data.GH_Path) -> Generic.List: ...
    @overload
    def Branch(self, path: System.System.Array[int]) -> Generic.List: ...
    @overload
    def Clear() -> None: ...
    @overload
    def ClearData() -> None: ...
    @overload
    def EnsurePath(self, path: System.System.Array[int]) -> Generic.List: ...
    @overload
    def EnsurePath(self, path: Data.GH_Path) -> Generic.List: ...
    @overload
    def Flatten(self, flatten_path: Data.GH_Path) -> None: ...
    @property
    def BranchCount(self) -> int: ...
    @property
    def Branches(self) -> Generic.IList: ...
    @property
    def DataCount(self) -> int: ...
    @property
    def Item(self) -> T: ...
    @property
    def Paths(self) -> Generic.IList: ...
    @property
    def TopologyDescription(self) -> str: ...
    @overload
    def Graft(self, skip_nulls: bool) -> None: ...
    @overload
    def Graft(self, path: Data.GH_Path, skip_nulls: bool) -> None: ...
    @overload
    def Insert(self, data: T, path: Data.GH_Path, index: int) -> None: ...
    @overload
    def ItemExists(self, path: Data.GH_Path, index: int) -> bool: ...
    @overload
    def MergeStructure(self, structure: Data.IGH_Structure, hint: Parameters.IGH_TypeHint) -> None: ...
    @overload
    def MergeTree(self, other: DataTree) -> None: ...
    @overload
    def MergeWithParameter(self, param: Kernel.IGH_Param) -> bool: ...
    @overload
    def Path(self, index: int) -> Data.GH_Path: ...
    @overload
    def PathExists(self, path: Data.GH_Path) -> bool: ...
    @overload
    def PathExists(self, path: System.System.Array[int]) -> bool: ...
    @overload
    def RemovePath(self, path: System.System.Array[int]) -> None: ...
    @overload
    def RemovePath(self, path: Data.GH_Path) -> None: ...
    @overload
    def RenumberPaths() -> None: ...
    @overload
    def RenumberPaths(self, mask: str) -> None: ...
    @Item.setter
    def Item(self, value: System.Void): ...
    @overload
    def SimplifyPaths() -> None: ...
    @overload
    def ToString() -> str: ...
    @overload
    def TrimExcess() -> None: ...

class Utility(object):
    """Class with useful static methods.

    """
    @overload
    @staticmethod
    def DocumentAngleTolerance() -> float: ...
    @overload
    @staticmethod
    def DocumentTolerance() -> float: ...
    @overload
    @staticmethod
    def DocumentUnits() -> str: ...
    @overload
    @staticmethod
    def FixNewlines(text: str) -> str: ...
    @overload
    @staticmethod
    def FixNewlines(text: str, newLinePattern: str) -> str: ...
    @overload
    @staticmethod
    def InvokeDownloader(sourceUri: str, targetUri: str, silent: bool) -> None: ...
    @overload
    @staticmethod
    def InvokeGetter(target: object, property_: str) -> object: ...
    @overload
    @staticmethod
    def InvokeGetterSafe(target: object, property_: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethod(target: object, method: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethod(target: object, method: str, params: System.System.Array[object]) -> object: ...
    @overload
    @staticmethod
    def InvokeMethodSafe(target: object, method: str) -> object: ...
    @overload
    @staticmethod
    def InvokeMethodSafe(target: object, method: str, params: System.System.Array[object]) -> object: ...
    @overload
    @staticmethod
    def InvokeSetter(target: object, property_: str, value: object) -> None: ...
    @overload
    @staticmethod
    def InvokeSetterSafe(target: object, property_: str, value: object) -> None: ...
    @overload
    @staticmethod
    def LikeOperator(text: str, pattern: str) -> bool: ...
    @overload
    @staticmethod
    def SetDefaultTolerances(absoluteTolerance: float, angleToleranceDegrees: float) -> None: ...
    @overload
    @staticmethod
    def SetDefaultUnits(modelUnits: str) -> None: ...

class Tracing(object):
    """Class that provides useful static methods for debugging, tracing and messaging.

    """
    @overload
    @staticmethod
    def Assert(assert_id: System.Guid) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: System.Guid, message: str) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: System.Guid, exception: System.Exception) -> None: ...
    @overload
    @staticmethod
    def Assert(assert_id: System.Guid, message: str, exception: System.Exception) -> None: ...
    @overload
    @staticmethod
    def DebugLogAddEntry(message: str) -> None: ...
    @overload
    @staticmethod
    def DebugLogBeginBlock(name: str) -> None: ...
    @overload
    @staticmethod
    def DebugLogEndBlock() -> None: ...

class Versioning(object):
    """Static class that provides information regarding the Grasshopper versioning.

    """
    @property
    def BuildDate(self) -> str: ...
    @property
    def Version(self) -> Types.GH_Version: ...
    @property
    def VersionString(self) -> str: ...
    @overload
    @staticmethod
    def SyncVersionHistoryData() -> None: ...
    @overload
    @staticmethod
    def VersionHistoryData() -> System.System.Array[str]: ...

class Global_Proc(object):
    """    """
    @property
    def Settings(self) -> Kernel.GH_SettingsServer: ...
    @property
    def Version(self) -> Types.GH_Version: ...
    @overload
    @staticmethod
    def UiAdjust(value: int) -> int: ...
    @overload
    @staticmethod
    def UiAdjust(value: System.Single) -> System.Single: ...

class Instances(object):
    """Provides access to a bunch of global instances and variables.

    """
    @property
    def LoadOneByOne(self) -> bool: ...
    @overload
    @staticmethod
    def DocumentEditorFadeIn() -> None: ...
    @overload
    @staticmethod
    def DocumentEditorFadeOut() -> None: ...
    @overload
    @staticmethod
    def EnforceInvariantCulture() -> None: ...
    @property
    def ActiveCanvas(self) -> Canvas.GH_Canvas: ...
    @property
    def ActiveDocument(self) -> Kernel.GH_Document: ...
    @property
    def ActiveRhinoDoc(self) -> Rhino.RhinoDoc: ...
    @property
    def AutoHideBanner(self) -> bool: ...
    @property
    def AutoShowBanner(self) -> bool: ...
    @property
    def BakeIcon24(self) -> Drawing.Bitmap: ...
    @property
    def ComponentServer(self) -> Kernel.GH_ComponentServer: ...
    @property
    def CursorServer(self) -> GUI.GH_CursorServer: ...
    @property
    def DocumentAssociationServer(self) -> Kernel.GH_DocumentAssociations: ...
    @property
    def DocumentEditor(self) -> GUI.GH_DocumentEditor: ...
    @property
    def DocumentServer(self) -> Kernel.GH_DocumentServer: ...
    @property
    def EtoDocumentEditor(self) -> Forms.Window: ...
    @property
    def GrasshopperPluginId(self) -> System.Guid: ...
    @property
    def IsComponentServer(self) -> bool: ...
    @property
    def IsCursorServer(self) -> bool: ...
    @property
    def IsDocumentAssociationServer(self) -> bool: ...
    @property
    def IsDocumentEditor(self) -> bool: ...
    @property
    def IsDocumentEditorOnTopOfViewports(self) -> bool: ...
    @property
    def IsDocumentServer(self) -> bool: ...
    @property
    def IsMarkovChain(self) -> bool: ...
    @property
    def IsMruServer(self) -> bool: ...
    @property
    def IsRemotePanelVisible(self) -> bool: ...
    @property
    def MarkovChain(self) -> Kernel.GH_MarkovChain: ...
    @property
    def MruServer(self) -> MRU.GH_MRU_Server: ...
    @property
    def RcpPanel(self) -> RemotePanel.RemoteControlPanel: ...
    @property
    def RunningHeadless(self) -> bool: ...
    @property
    def Settings(self) -> Kernel.GH_SettingsServer: ...
    @overload
    @staticmethod
    def HideRemotePanel() -> bool: ...
    @overload
    @staticmethod
    def Interop() -> object: ...
    @overload
    @staticmethod
    def InvalidateCanvas() -> None: ...
    @overload
    @staticmethod
    def MyTypes() -> System.System.Array[System.Type]: ...
    @overload
    @staticmethod
    def RedrawAll() -> None: ...
    @overload
    @staticmethod
    def RedrawCanvas() -> None: ...
    @overload
    @staticmethod
    def ReloadMemoryAssemblies() -> Generic.List: ...
    @AutoHideBanner.setter
    def AutoHideBanner(self, value: System.Void): ...
    @AutoShowBanner.setter
    def AutoShowBanner(self, value: System.Void): ...
    @overload
    @staticmethod
    def ShowRemotePanel() -> bool: ...
    @overload
    @staticmethod
    def UnloadAllObjects() -> None: ...
    @property
    def CanvasCreated(self): ...
    @property
    def CanvasDestroyed(self): ...

class EtoWin32Window(object):
    """    """
    @property
    def Handle(self) -> System.IntPtr: ...

class AuthorNameChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class AuthorCompanyChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class AuthorCopyrightChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class AuthorAddressChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class AuthorWebsiteChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class AuthorEMailChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class AuthorPhoneChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class FormattingChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class RibbonVisibleChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class RibbonAllIconsChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class RibbonSeparatorsChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class RibbonDrawTabIconsChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class UiScaleChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class TemplateFileChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class CanvasToolbarChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class CanvasFancyWiresChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class CanvasObjectIconsChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class CanvasRadialMenuChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class CanvasFullNamesChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class CanvasObsoleteTagsChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class CanvasZuiZoomLevelChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class TooltipWiggleRadiusChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class PreviewMeshEdgesChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class PreviewPlaneRadiusChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class PreviewPointStyleChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class PreviewBumpZBufferChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class PreviewGumballsChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class ComponentCascadeMenusChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class PanelDefaultFontChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class CreateSolutionUndoRecordChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class PruderyLevelChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke() -> None: ...

class LoadProtectionChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, pluginName: str, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, pluginName: str) -> None: ...

class LoadMechanismChangedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, pluginName: str, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, pluginName: str) -> None: ...

class DuplicateT(System.MulticastDelegate):
    """Duplication delegate used in the copy constructor. Implementation should never throw exceptions.

    DuplicateT[T]
    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, original: T, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> T: ...
    @overload
    def Invoke(self, original: T) -> T: ...

class CanvasCreatedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, canvas: Canvas.GH_Canvas, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, canvas: Canvas.GH_Canvas) -> None: ...

class CanvasDestroyedEventHandler(System.MulticastDelegate):
    """    """
    def __init__(self, TargetObject: object, TargetMethod: System.IntPtr): ...
    @overload
    def BeginInvoke(self, canvas: Canvas.GH_Canvas, DelegateCallback: System.AsyncCallback, DelegateAsyncState: object) -> System.IAsyncResult: ...
    @overload
    def EndInvoke(self, DelegateAsyncResult: System.IAsyncResult) -> None: ...
    @overload
    def Invoke(self, canvas: Canvas.GH_Canvas) -> None: ...

# endregion
