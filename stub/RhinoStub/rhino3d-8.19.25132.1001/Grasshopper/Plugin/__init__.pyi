"""this file is auto-generated by rhinocode stubmaker. do not make changes"""

# region: Exports
__all__ = ["Commands", "GH_RhinoScriptInterface", "GH_PluginUtil", "GH_ResourceGate"]
# endregion

# region: Imports
from Grasshopper import Kernel
from Rhino import Commands
from System import Drawing
from System.Collections import Generic
from System.Runtime import CompilerServices
from typing import overload
import Rhino
import System
# endregion

# region: Grasshopper, Version=8.19.25132.1001

class Commands(object):
    """Contains command logic for all standard Grasshopper commands.

    """
    @property
    def BakeDocument(self) -> Kernel.GH_Document: ...
    @property
    def BakeObject(self) -> Kernel.IGH_ActiveObject: ...
    @overload
    @staticmethod
    def Run_Grasshopper() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperBake() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperBake(doc: Rhino.RhinoDoc, mode: Commands.RunMode) -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperDeveloperSettings() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperExportHelp() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperFolders() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperGetSDKDocumentation() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperOpen() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperOpen(path: str) -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperReloadAssemblies() -> Generic.List: ...
    @overload
    @staticmethod
    def Run_GrasshopperScripted() -> bool: ...
    @overload
    @staticmethod
    def Run_GrasshopperUnloadPlugin() -> bool: ...
    @BakeDocument.setter
    def BakeDocument(self, value: System.Void): ...
    @BakeObject.setter
    def BakeObject(self, value: System.Void): ...

class GH_RhinoScriptInterface(object):
    """Plugin Interface object that is exposed via the RhinoScript layer.

    """
    def __init__(self): ...
    @overload
    def AssignDataToParameter(self, parameterID: str, data: object) -> bool: ...
    @overload
    def BakeDataInObject(self, objectID: str) -> object: ...
    @overload
    def CloseAllDocuments() -> bool: ...
    @overload
    def CloseDocument() -> bool: ...
    @overload
    def DisableBanner() -> None: ...
    @overload
    def DisableSolver() -> None: ...
    @overload
    def EnableBanner() -> None: ...
    @overload
    def EnableSolver() -> None: ...
    @overload
    def HideEditor() -> None: ...
    @overload
    def IsEditorLoaded() -> bool: ...
    @overload
    def IsEditorVisible() -> bool: ...
    @overload
    def IsSolverEnabled() -> bool: ...
    @overload
    def LoadEditor() -> None: ...
    @overload
    def LoadedPluginGuids() -> System.System.Array[System.Guid]: ...
    @overload
    def LoadedPluginNames() -> System.System.Array[str]: ...
    @overload
    def OpenDocument(self, filename: str) -> bool: ...
    @overload
    def RunHeadless() -> None: ...
    @overload
    def RunInCommandContext(self, ghDoc: Kernel.GH_Document, command: Commands.Command, rhinoDoc: Rhino.RhinoDoc, mode: Commands.RunMode) -> Commands.Result: ...
    @overload
    def RunSolver(self, expireAllObjects: bool) -> None: ...
    @overload
    def SaveDocument() -> bool: ...
    @overload
    def SaveDocumentAs(self, filename: str) -> bool: ...
    @overload
    def SetSliderRangeAndValue(self, sliderID: str, value: float, minimum: float, maximum: float) -> bool: ...
    @overload
    def SetSliderValue(self, sliderID: str, value: float) -> bool: ...
    @overload
    def ShowEditor() -> None: ...

class GH_PluginUtil(object):
    """Grasshopper plugin utility class. This class exports some static (Shared in VB) methods to do with plugin loading and unloading.

    """
    @overload
    @staticmethod
    def BringRhinoToTop() -> None: ...
    @overload
    @staticmethod
    def BringWindowToTop(hWnd: System.IntPtr) -> bool: ...
    @overload
    @staticmethod
    def FocusOnRhino() -> None: ...
    @overload
    @staticmethod
    def LoadGrasshopper() -> (bool, str): ...
    @overload
    @staticmethod
    def SaveSettings() -> None: ...
    @overload
    @staticmethod
    def SendKeyCodeToRhino(key: int) -> None: ...
    @overload
    @staticmethod
    def SendKeyCodeToRhino(key: System.Char) -> None: ...
    @overload
    @staticmethod
    def SendKeyCodeToRhino(key: str) -> None: ...
    @overload
    @staticmethod
    def SendMessage(hWnd: System.IntPtr, msg: int, wParam: int, lParam: System.IntPtr) -> System.IntPtr: ...
    @overload
    @staticmethod
    def SetFocus(hWnd: System.IntPtr) -> None: ...
    @overload
    @staticmethod
    def UnloadGrasshopper() -> bool: ...

class GH_ResourceGate(object):
    """This class provides access to specific resources of the Grasshopper assembly.

    """
    @property
    def BlackIcon(self) -> Drawing.Bitmap: ...
    @property
    def Error_12x12(self) -> Drawing.Bitmap: ...
    @property
    def Error_16x16(self) -> Drawing.Bitmap: ...
    @property
    def Error_24x24(self) -> Drawing.Bitmap: ...
    @property
    def Error_40x40(self) -> Drawing.Bitmap: ...
    @property
    def Info_12x12(self) -> Drawing.Bitmap: ...
    @property
    def Info_16x16(self) -> Drawing.Bitmap: ...
    @property
    def Info_24x24(self) -> Drawing.Bitmap: ...
    @property
    def Info_40x40(self) -> Drawing.Bitmap: ...
    @property
    def OK_12x12(self) -> Drawing.Bitmap: ...
    @property
    def OK_16x16(self) -> Drawing.Bitmap: ...
    @property
    def OK_24x24(self) -> Drawing.Bitmap: ...
    @property
    def OK_40x40(self) -> Drawing.Bitmap: ...
    @property
    def Warning_12x12(self) -> Drawing.Bitmap: ...
    @property
    def Warning_16x16(self) -> Drawing.Bitmap: ...
    @property
    def Warning_24x24(self) -> Drawing.Bitmap: ...
    @property
    def Warning_40x40(self) -> Drawing.Bitmap: ...
    @property
    def WhiteIcon(self) -> Drawing.Bitmap: ...

# endregion
